<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="315" passed="315">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="9332" started-at="2018-06-01T11:22:15Z" finished-at="2018-06-01T11:22:24Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="9332" started-at="2018-06-01T11:22:15Z" finished-at="2018-06-01T11:22:24Z">
      <class name="org.molgenis.data.elasticsearch.ElasticsearchServiceTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.ElasticsearchServiceTest@47eae91d]" name="initMocks" is-config="true" duration-ms="207" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.ElasticsearchServiceTest@47eae91d]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testBatchingSearchPageSizeLargerThanMax()[pri:0, instance:org.molgenis.data.elasticsearch.ElasticsearchServiceTest@47eae91d]" name="testBatchingSearchPageSizeLargerThanMax" duration-ms="318" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBatchingSearchPageSizeLargerThanMax -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.ElasticsearchServiceTest@47eae91d]" name="tearDownAfterMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.ElasticsearchServiceTest@47eae91d]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testBatchingSearchPageSizeZero()[pri:0, instance:org.molgenis.data.elasticsearch.ElasticsearchServiceTest@47eae91d]" name="testBatchingSearchPageSizeZero" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBatchingSearchPageSizeZero -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.ElasticsearchServiceTest@47eae91d]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.ElasticsearchServiceTest@47eae91d]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.ElasticsearchServiceTest@47eae91d]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.ElasticsearchServiceTest@47eae91d]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testSingleBatchSearch()[pri:0, instance:org.molgenis.data.elasticsearch.ElasticsearchServiceTest@47eae91d]" name="testSingleBatchSearch" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleBatchSearch -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.ElasticsearchServiceTest@47eae91d]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
      </class> <!-- org.molgenis.data.elasticsearch.ElasticsearchServiceTest -->
      <class name="org.molgenis.data.elasticsearch.client.SortContentBuilderTest">
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.client.SortContentBuilderTest@e993715]" name="setUpBeforeMethod" is-config="true" duration-ms="15" started-at="2018-06-01T13:22:15Z" finished-at="2018-06-01T13:22:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createSortsAsc()[pri:0, instance:org.molgenis.data.elasticsearch.client.SortContentBuilderTest@e993715]" name="createSortsAsc" duration-ms="233" started-at="2018-06-01T13:22:15Z" finished-at="2018-06-01T13:22:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSortsAsc -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.client.SortContentBuilderTest@e993715]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:15Z" finished-at="2018-06-01T13:22:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createSortsDesc()[pri:0, instance:org.molgenis.data.elasticsearch.client.SortContentBuilderTest@e993715]" name="createSortsDesc" duration-ms="0" started-at="2018-06-01T13:22:15Z" finished-at="2018-06-01T13:22:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSortsDesc -->
      </class> <!-- org.molgenis.data.elasticsearch.client.SortContentBuilderTest -->
      <class name="org.molgenis.data.elasticsearch.client.ClientFactoryTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFactoryTest@472719df]" name="initMocks" is-config="true" duration-ms="2127" started-at="2018-06-01T13:22:15Z" finished-at="2018-06-01T13:22:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testCreateClient()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFactoryTest@472719df]" name="testCreateClient" duration-ms="77" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateClient -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFactoryTest@472719df]" name="tearDownAfterMethod" is-config="true" duration-ms="5" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFactoryTest@472719df]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testCreateClientEmptyAddresses()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFactoryTest@472719df]" name="testCreateClientEmptyAddresses" duration-ms="1" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[inetAddresses cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: inetAddresses cannot be empty
	at org.molgenis.data.elasticsearch.client.ClientFactory.<init>(ClientFactory.java:44)
	at org.molgenis.data.elasticsearch.client.ClientFactoryTest.testCreateClientEmptyAddresses(ClientFactoryTest.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateClientEmptyAddresses -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFactoryTest@472719df]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFactoryTest@472719df]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testCreateClientNullAddresses()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFactoryTest@472719df]" name="testCreateClientNullAddresses" duration-ms="1" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at java.util.Objects.requireNonNull(Objects.java:203)
	at org.molgenis.data.elasticsearch.client.ClientFactory.<init>(ClientFactory.java:41)
	at org.molgenis.data.elasticsearch.client.ClientFactoryTest.testCreateClientNullAddresses(ClientFactoryTest.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateClientNullAddresses -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFactoryTest@472719df]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
      </class> <!-- org.molgenis.data.elasticsearch.client.ClientFactoryTest -->
      <class name="org.molgenis.data.elasticsearch.client.ClientFacadeTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="beforeClass" is-config="true" duration-ms="3107" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="8" started-at="2018-06-01T13:22:21Z" finished-at="2018-06-01T13:22:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAggregateResultHasShardFailures()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testAggregateResultHasShardFailures" duration-ms="19" started-at="2018-06-01T13:22:21Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Error aggregating docs in index(es) 'index'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Error aggregating docs in index(es) 'index'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.aggregate(ClientFacade.java:503)
	at org.molgenis.data.elasticsearch.client.ClientFacade.aggregate(ClientFacade.java:464)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testAggregateResultHasShardFailures(ClientFacadeTest.java:447)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAggregateResultHasShardFailures -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testAggregateThrowsException()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testAggregateThrowsException" duration-ms="165" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Error aggregating docs in index(es) 'index'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Error aggregating docs in index(es) 'index'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.aggregate(ClientFacade.java:497)
	at org.molgenis.data.elasticsearch.client.ClientFacade.aggregate(ClientFacade.java:464)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testAggregateThrowsException(ClientFacadeTest.java:421)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAggregateThrowsException -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAggregateThrowsResourceNotFoundException()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testAggregateThrowsResourceNotFoundException" duration-ms="3" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.UnknownIndexException">
            <message>
              <![CDATA[One or more indexes 'index' not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.UnknownIndexException: One or more indexes 'index' not found.
	at org.molgenis.data.elasticsearch.client.ClientFacade.aggregate(ClientFacade.java:492)
	at org.molgenis.data.elasticsearch.client.ClientFacade.aggregate(ClientFacade.java:464)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testAggregateThrowsResourceNotFoundException(ClientFacadeTest.java:433)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.UnknownIndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAggregateThrowsResourceNotFoundException -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testAggregateTimeout()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testAggregateTimeout" duration-ms="2" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Timeout aggregating docs in index(es) 'index'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Timeout aggregating docs in index(es) 'index'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.aggregate(ClientFacade.java:507)
	at org.molgenis.data.elasticsearch.client.ClientFacade.aggregate(ClientFacade.java:464)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testAggregateTimeout(ClientFacadeTest.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAggregateTimeout -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testCloseThrowsException()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testCloseThrowsException" duration-ms="4" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCloseThrowsException -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testCreateIndexAlreadyExists()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testCreateIndexAlreadyExists" duration-ms="13" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexAlreadyExistsException">
            <message>
              <![CDATA[Index 'indexname' already exists.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexAlreadyExistsException: Index 'indexname' already exists.
	at org.molgenis.data.elasticsearch.client.ClientFacade.createIndex(ClientFacade.java:92)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testCreateIndexAlreadyExists(ClientFacadeTest.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexAlreadyExistsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateIndexAlreadyExists -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testCreateIndexResponseNotAcknowledgedNoExceptions()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testCreateIndexResponseNotAcknowledgedNoExceptions" duration-ms="4" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateIndexResponseNotAcknowledgedNoExceptions -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testCreateIndexThrowsElasticsearchException()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testCreateIndexThrowsElasticsearchException" duration-ms="2" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Error creating index 'indexname'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Error creating index 'indexname'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.createIndex(ClientFacade.java:94)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testCreateIndexThrowsElasticsearchException(ClientFacadeTest.java:219)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateIndexThrowsElasticsearchException -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDeleteIndexNotAcknowledged()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testDeleteIndexNotAcknowledged" duration-ms="2" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Error deleting index(es) 'index'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Error deleting index(es) 'index'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.deleteIndexes(ClientFacade.java:215)
	at org.molgenis.data.elasticsearch.client.ClientFacade.deleteIndex(ClientFacade.java:184)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testDeleteIndexNotAcknowledged(ClientFacadeTest.java:280)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteIndexNotAcknowledged -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testDeleteIndexThrowsException()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testDeleteIndexThrowsException" duration-ms="2" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Error deleting index(es) 'index'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Error deleting index(es) 'index'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.deleteIndexes(ClientFacade.java:210)
	at org.molgenis.data.elasticsearch.client.ClientFacade.deleteIndex(ClientFacade.java:184)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testDeleteIndexThrowsException(ClientFacadeTest.java:268)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteIndexThrowsException -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testDeleteResourceNotFound()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testDeleteResourceNotFound" duration-ms="2" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.UnknownIndexException">
            <message>
              <![CDATA[Index 'index' not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.UnknownIndexException: Index 'index' not found.
	at org.molgenis.data.elasticsearch.client.ClientFacade.deleteById(ClientFacade.java:613)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testDeleteResourceNotFound(ClientFacadeTest.java:569)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.UnknownIndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteResourceNotFound -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDeleteThrowsException()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testDeleteThrowsException" duration-ms="3" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Error deleting doc with id 'id' in index 'index'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Error deleting doc with id 'id' in index 'index'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.deleteById(ClientFacade.java:618)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testDeleteThrowsException(ClientFacadeTest.java:552)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteThrowsException -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testExplainThrowsException()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testExplainThrowsException" duration-ms="6" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Error explaining doc with id 'id' in index 'index' for query 'a == b'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Error explaining doc with id 'id' in index 'index' for query 'a == b'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.explain(ClientFacade.java:536)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testExplainThrowsException(ClientFacadeTest.java:474)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExplainThrowsException -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testGetCountThrowsException()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testGetCountThrowsException" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Error counting docs in index(es) 'index'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Error counting docs in index(es) 'index'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.getCount(ClientFacade.java:311)
	at org.molgenis.data.elasticsearch.client.ClientFacade.getCount(ClientFacade.java:274)
	at org.molgenis.data.elasticsearch.client.ClientFacade.getCount(ClientFacade.java:269)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testGetCountThrowsException(ClientFacadeTest.java:320)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCountThrowsException -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testGetCountThrowsResourceNotFoundException()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testGetCountThrowsResourceNotFoundException" duration-ms="2" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.UnknownIndexException">
            <message>
              <![CDATA[One or more indexes 'index' not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.UnknownIndexException: One or more indexes 'index' not found.
	at org.molgenis.data.elasticsearch.client.ClientFacade.getCount(ClientFacade.java:306)
	at org.molgenis.data.elasticsearch.client.ClientFacade.getCount(ClientFacade.java:274)
	at org.molgenis.data.elasticsearch.client.ClientFacade.getCount(ClientFacade.java:269)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testGetCountThrowsResourceNotFoundException(ClientFacadeTest.java:331)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.UnknownIndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCountThrowsResourceNotFoundException -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testGetGetCountFailedShards()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testGetGetCountFailedShards" duration-ms="3" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Error counting docs in index(es) 'index'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Error counting docs in index(es) 'index'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.getCount(ClientFacade.java:318)
	at org.molgenis.data.elasticsearch.client.ClientFacade.getCount(ClientFacade.java:274)
	at org.molgenis.data.elasticsearch.client.ClientFacade.getCount(ClientFacade.java:269)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testGetGetCountFailedShards(ClientFacadeTest.java:344)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetGetCountFailedShards -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testGetGetCountTimeout()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testGetGetCountTimeout" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Timeout while counting docs in index(es) 'index'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Timeout while counting docs in index(es) 'index'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.getCount(ClientFacade.java:322)
	at org.molgenis.data.elasticsearch.client.ClientFacade.getCount(ClientFacade.java:274)
	at org.molgenis.data.elasticsearch.client.ClientFacade.getCount(ClientFacade.java:269)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testGetGetCountTimeout(ClientFacadeTest.java:357)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetGetCountTimeout -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testIndexShardFailure()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testIndexShardFailure" duration-ms="5" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Error indexing doc with id 'id' in index 'index'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Error indexing doc with id 'id' in index 'index'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.index(ClientFacade.java:588)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testIndexShardFailure(ClientFacadeTest.java:535)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexShardFailure -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testIndexThrowsException()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testIndexThrowsException" duration-ms="3" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Error indexing doc with id 'id' in index 'index'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Error indexing doc with id 'id' in index 'index'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.index(ClientFacade.java:572)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testIndexThrowsException(ClientFacadeTest.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexThrowsException -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testIndexThrowsResourceNotFoundException()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testIndexThrowsResourceNotFoundException" duration-ms="2" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.UnknownIndexException">
            <message>
              <![CDATA[Index 'index' not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.UnknownIndexException: Index 'index' not found.
	at org.molgenis.data.elasticsearch.client.ClientFacade.index(ClientFacade.java:568)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testIndexThrowsResourceNotFoundException(ClientFacadeTest.java:512)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.UnknownIndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexThrowsResourceNotFoundException -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testIndexesExistThrowsException()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testIndexesExistThrowsException" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Error determining index(es) 'index' existence.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Error determining index(es) 'index' existence.
	at org.molgenis.data.elasticsearch.client.ClientFacade.indexesExist(ClientFacade.java:171)
	at org.molgenis.data.elasticsearch.client.ClientFacade.indexesExist(ClientFacade.java:150)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testIndexesExistThrowsException(ClientFacadeTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexesExistThrowsException -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testRefreshIndicesFailedShards()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testRefreshIndicesFailedShards" duration-ms="2" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Error refreshing index(es) '_all'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Error refreshing index(es) '_all'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.refreshIndexes(ClientFacade.java:258)
	at org.molgenis.data.elasticsearch.client.ClientFacade.refreshIndexes(ClientFacade.java:225)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testRefreshIndicesFailedShards(ClientFacadeTest.java:309)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRefreshIndicesFailedShards -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testRefreshIndicesNotFound()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testRefreshIndicesNotFound" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.UnknownIndexException">
            <message>
              <![CDATA[One or more indexes '_all' not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.UnknownIndexException: One or more indexes '_all' not found.
	at org.molgenis.data.elasticsearch.client.ClientFacade.refreshIndexes(ClientFacade.java:246)
	at org.molgenis.data.elasticsearch.client.ClientFacade.refreshIndexes(ClientFacade.java:225)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testRefreshIndicesNotFound(ClientFacadeTest.java:298)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.UnknownIndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRefreshIndicesNotFound -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testRefreshIndicesThrowsException()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testRefreshIndicesThrowsException" duration-ms="2" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Error refreshing index(es) '_all'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Error refreshing index(es) '_all'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.refreshIndexes(ClientFacade.java:251)
	at org.molgenis.data.elasticsearch.client.ClientFacade.refreshIndexes(ClientFacade.java:225)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testRefreshIndicesThrowsException(ClientFacadeTest.java:289)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRefreshIndicesThrowsException -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSearchFailedShards()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testSearchFailedShards" duration-ms="2" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Error searching docs in index(es) 'index' with query 'a == b'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Error searching docs in index(es) 'index' with query 'a == b'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.search(ClientFacade.java:398)
	at org.molgenis.data.elasticsearch.client.ClientFacade.search(ClientFacade.java:344)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testSearchFailedShards(ClientFacadeTest.java:385)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchFailedShards -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testSearchIndexNotFound()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testSearchIndexNotFound" duration-ms="2" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.UnknownIndexException">
            <message>
              <![CDATA[One or more indexes 'index' not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.UnknownIndexException: One or more indexes 'index' not found.
	at org.molgenis.data.elasticsearch.client.ClientFacade.search(ClientFacade.java:385)
	at org.molgenis.data.elasticsearch.client.ClientFacade.search(ClientFacade.java:344)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testSearchIndexNotFound(ClientFacadeTest.java:397)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.UnknownIndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchIndexNotFound -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSearchThrowsException()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testSearchThrowsException" duration-ms="2" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Error searching docs in index(es) 'index' with query 'a == b'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Error searching docs in index(es) 'index' with query 'a == b'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.search(ClientFacade.java:391)
	at org.molgenis.data.elasticsearch.client.ClientFacade.search(ClientFacade.java:344)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testSearchThrowsException(ClientFacadeTest.java:409)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchThrowsException -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="setUp" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSearchTimedOut()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="testSearchTimedOut" duration-ms="3" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <exception class="org.molgenis.data.index.exception.IndexException">
            <message>
              <![CDATA[Timeout searching counting docs in index(es) 'index'  with query 'a == b'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.index.exception.IndexException: Timeout searching counting docs in index(es) 'index'  with query 'a == b'.
	at org.molgenis.data.elasticsearch.client.ClientFacade.search(ClientFacade.java:403)
	at org.molgenis.data.elasticsearch.client.ClientFacade.search(ClientFacade.java:344)
	at org.molgenis.data.elasticsearch.client.ClientFacadeTest.testSearchTimedOut(ClientFacadeTest.java:371)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.index.exception.IndexException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchTimedOut -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:org.molgenis.data.elasticsearch.client.ClientFacadeTest@b2da3a5]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.molgenis.data.elasticsearch.client.ClientFacadeTest -->
      <class name="org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="7" started-at="2018-06-01T13:22:24Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeClass()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeClass" is-config="true" duration-ms="5" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeClass -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateMultipleQueryRule()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateMultipleQueryRule()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateMultipleQueryRule" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateMultipleQueryRule -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateMultipleQueryRuleMultipleNotClauses()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateMultipleQueryRule()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateMultipleQueryRuleMultipleNotClauses()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateMultipleQueryRuleMultipleNotClauses" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateMultipleQueryRuleMultipleNotClauses -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateMultipleQueryRuleMultipleNotClauses()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleEqualsBool()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsBool()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleEqualsBool" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsBool -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleEqualsCategorical()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleEqualsBool()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsCategorical()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleEqualsCategorical" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Can not filter on references deeper than 1.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Can not filter on references deeper than 1.
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseEqualsValue(QueryGenerator.java:229)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseEquals(QueryGenerator.java:184)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:133)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleEqualsCategorical(QueryGeneratorReferencesTest.java:289)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsCategorical -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleEqualsCategorical()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleEqualsString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsString()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleEqualsString" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsString -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleEqualsString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleGreaterDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterDate()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleGreaterDate" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterDate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleGreaterDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleGreaterDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterDateTime()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleGreaterDateTime" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterDateTime -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleGreaterDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleGreaterDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterDecimal()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleGreaterDecimal" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterDecimal -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleGreaterEqualDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleGreaterDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterEqualDate()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleGreaterEqualDate" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterEqualDate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleGreaterEqualDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleGreaterInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterInt()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleGreaterInt" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterInt -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleGreaterLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleGreaterInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterLong()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleGreaterLong" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterLong -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleInCategorical_Ids()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleGreaterLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleInCategorical_Ids()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleInCategorical_Ids" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[Can not filter on references deeper than 1.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: Can not filter on references deeper than 1.
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseIn(QueryGenerator.java:462)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:144)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleInCategorical_Ids(QueryGeneratorReferencesTest.java:247)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInCategorical_Ids -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleInCategorical_Ids()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleLesserEqualDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleLesserEqualDecimal()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleLesserEqualDecimal" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLesserEqualDecimal -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleLesserInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleLesserEqualDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLesserInt()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleLesserInt" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLesserInt -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleLikeCompoundPartString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleLesserInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeCompoundPartString()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleLikeCompoundPartString" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeCompoundPartString -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleNotEqualsCategorical()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleLikeCompoundPartString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsCategorical()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleNotEqualsCategorical" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Can not filter on references deeper than 1.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Can not filter on references deeper than 1.
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseEqualsValue(QueryGenerator.java:229)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseEquals(QueryGenerator.java:184)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:133)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:100)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleNotEqualsCategorical(QueryGeneratorReferencesTest.java:308)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsCategorical -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleNotEqualsCategorical()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleNotEqualsCompound()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsCompound()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleNotEqualsCompound" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Illegal attribute type [COMPOUND]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Illegal attribute type [COMPOUND]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.getQueryValue(QueryGenerator.java:865)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseEqualsValue(QueryGenerator.java:197)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseEquals(QueryGenerator.java:184)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:133)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:100)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleNotEqualsCompound(QueryGeneratorReferencesTest.java:316)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsCompound -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleNotEqualsCompoundPartString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleNotEqualsCompound()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsCompoundPartString()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleNotEqualsCompoundPartString" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsCompoundPartString -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleNotEqualsCompoundPartString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleNotEqualsEqualsBool()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsEqualsBool()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleNotEqualsEqualsBool" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsEqualsBool -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleNotEqualsEqualsBool()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleRangeInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleRangeInt()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleRangeInt" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleRangeInt -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleSearchOneFieldCategorical()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleRangeInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldCategorical()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleSearchOneFieldCategorical" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[Can not filter on references deeper than 1.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: Can not filter on references deeper than 1.
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseSearchAttribute(QueryGenerator.java:663)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseSearch(QueryGenerator.java:623)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:152)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleSearchOneFieldCategorical(QueryGeneratorReferencesTest.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldCategorical -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleSearchOneFieldCompoundPartString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleSearchOneFieldCategorical()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldCompoundPartString()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="generateOneQueryRuleSearchOneFieldCompoundPartString" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldCompoundPartString -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest.generateOneQueryRuleSearchOneFieldCompoundPartString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest@413eaf5d]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.molgenis.data.elasticsearch.generator.QueryGeneratorReferencesTest -->
      <class name="org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest">
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest@686e7513]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGenerateIdAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest@686e7513]" name="testGenerateIdAttribute" duration-ms="386" started-at="2018-06-01T13:22:22Z" data-provider="generateIdAttributeTypeProvider" finished-at="2018-06-01T13:22:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[012345]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abcdef]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myAttr]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[myAttr_9b8532fc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdAttribute -->
        <test-method status="PASS" signature="testGenerateIdAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest@686e7513]" name="testGenerateIdAttribute" duration-ms="2" started-at="2018-06-01T13:22:22Z" data-provider="generateIdAttributeTypeProvider" finished-at="2018-06-01T13:22:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[543210]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abcdef]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myAttr]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[myAttr_7700a7f7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdAttribute -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest@686e7513]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGenerateIdAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest@686e7513]" name="testGenerateIdAttribute" duration-ms="1" started-at="2018-06-01T13:22:22Z" data-provider="generateIdAttributeTypeProvider" finished-at="2018-06-01T13:22:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[012345]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fabcde]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myAttr]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[myAttr_e8de769b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdAttribute -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest@686e7513]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGenerateIdAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest@686e7513]" name="testGenerateIdAttribute" duration-ms="1" started-at="2018-06-01T13:22:22Z" data-provider="generateIdAttributeTypeProvider" finished-at="2018-06-01T13:22:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[012345]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fabcde]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[_m,y^At&t.r]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[myAttr_e8de769b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdAttribute -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest@686e7513]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest@686e7513]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGenerateIdAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest@686e7513]" name="testGenerateIdAttribute" duration-ms="0" started-at="2018-06-01T13:22:22Z" data-provider="generateIdAttributeTypeProvider" finished-at="2018-06-01T13:22:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[012345]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fabcde]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[myAttrmyAttrmyAttrmyAttrmyAttrmyAttr]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[myAttrmyAttrmyAttrmyAtt_e8de769b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdAttribute -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest@686e7513]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGenerateIdEntityType(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest@686e7513]" name="testGenerateIdEntityType" duration-ms="1" started-at="2018-06-01T13:22:22Z" data-provider="generateIdEntityTypeProvider" finished-at="2018-06-01T13:22:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[myEntity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myentity_061f7aef]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdEntityType -->
        <test-method status="PASS" signature="testGenerateIdEntityType(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest@686e7513]" name="testGenerateIdEntityType" duration-ms="1" started-at="2018-06-01T13:22:22Z" data-provider="generateIdEntityTypeProvider" finished-at="2018-06-01T13:22:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[_my|En%ti-ty/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myentity_d8309562]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdEntityType -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest@686e7513]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testGenerateIdEntityType(java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest@686e7513]" name="testGenerateIdEntityType" duration-ms="1" started-at="2018-06-01T13:22:22Z" data-provider="generateIdEntityTypeProvider" finished-at="2018-06-01T13:22:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[myEntitymyEntitymyEntitymyEntity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[myentitymyentitymyentit_6e9381ec]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateIdEntityType -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest@686e7513]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
      </class> <!-- org.molgenis.data.elasticsearch.generator.DocumentIdGeneratorTest -->
      <class name="org.molgenis.data.elasticsearch.generator.SortGeneratorTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.SortGeneratorTest@27fc0217]" name="beforeMethod" is-config="true" duration-ms="146" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testGenerateAsc()[pri:0, instance:org.molgenis.data.elasticsearch.generator.SortGeneratorTest@27fc0217]" name="testGenerateAsc" duration-ms="6" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateAsc -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.SortGeneratorTest@27fc0217]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testGenerateAscRaw()[pri:0, instance:org.molgenis.data.elasticsearch.generator.SortGeneratorTest@27fc0217]" name="testGenerateAscRaw" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateAscRaw -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.SortGeneratorTest@27fc0217]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testGenerateDesc()[pri:0, instance:org.molgenis.data.elasticsearch.generator.SortGeneratorTest@27fc0217]" name="testGenerateDesc" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateDesc -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.SortGeneratorTest@27fc0217]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testGenerateDescAscRaw()[pri:0, instance:org.molgenis.data.elasticsearch.generator.SortGeneratorTest@27fc0217]" name="testGenerateDescAscRaw" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateDescAscRaw -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.SortGeneratorTest@27fc0217]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testGenerateDescRaw()[pri:0, instance:org.molgenis.data.elasticsearch.generator.SortGeneratorTest@27fc0217]" name="testGenerateDescRaw" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateDescRaw -->
      </class> <!-- org.molgenis.data.elasticsearch.generator.SortGeneratorTest -->
      <class name="org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest@4bab78ce]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest@4bab78ce]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="671" started-at="2018-06-01T13:22:18Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-06-01T13:22:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest@4bab78ce]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest.testBackOffPolicyIsExponential()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testBackOffPolicyIsExponential()[pri:0, instance:org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest@4bab78ce]" name="testBackOffPolicyIsExponential" duration-ms="6" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBackOffPolicyIsExponential -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest@4bab78ce]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest.testBackOffPolicyIsExponential()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest@4bab78ce]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest.testInterruptFailingTries() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testInterruptFailingTries()[pri:0, instance:org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest@4bab78ce]" name="testInterruptFailingTries" duration-ms="1" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInterruptFailingTries -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest@4bab78ce]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest.testInterruptFailingTries() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest@4bab78ce]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest.testRetryPolicyInterrupted()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testRetryPolicyInterrupted()[pri:0, instance:org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest@4bab78ce]" name="testRetryPolicyInterrupted" duration-ms="2" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetryPolicyInterrupted -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest@4bab78ce]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest.testRetryPolicyInterrupted()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest@4bab78ce]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest.testRetryPolicyMolgenisDataException()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testRetryPolicyMolgenisDataException()[pri:0, instance:org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest@4bab78ce]" name="testRetryPolicyMolgenisDataException" duration-ms="1" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetryPolicyMolgenisDataException -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest@4bab78ce]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest.testRetryPolicyMolgenisDataException()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest@4bab78ce]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:18Z" finished-at="2018-06-01T13:22:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.molgenis.data.elasticsearch.client.ConnectionRetryConfigTest -->
      <class name="org.molgenis.data.elasticsearch.generator.MappingGeneratorTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testCreateMapping(org.molgenis.data.meta.AttributeType, org.molgenis.data.elasticsearch.generator.model.MappingType)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMapping" duration-ms="5" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProvider" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BOOL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[BOOLEAN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMapping -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testCreateMapping(org.molgenis.data.meta.AttributeType, org.molgenis.data.elasticsearch.generator.model.MappingType)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMapping" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProvider" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DATE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DATE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMapping -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testCreateMapping(org.molgenis.data.meta.AttributeType, org.molgenis.data.elasticsearch.generator.model.MappingType)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMapping" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProvider" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DATE_TIME]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DATE_TIME]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMapping -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testCreateMapping(org.molgenis.data.meta.AttributeType, org.molgenis.data.elasticsearch.generator.model.MappingType)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMapping" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProvider" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DECIMAL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DOUBLE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMapping -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testCreateMapping(org.molgenis.data.meta.AttributeType, org.molgenis.data.elasticsearch.generator.model.MappingType)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMapping" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProvider" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HTML]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TEXT]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMapping -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testCreateMapping(org.molgenis.data.meta.AttributeType, org.molgenis.data.elasticsearch.generator.model.MappingType)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMapping" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProvider" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HYPERLINK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TEXT]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMapping -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testCreateMapping(org.molgenis.data.meta.AttributeType, org.molgenis.data.elasticsearch.generator.model.MappingType)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMapping" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProvider" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[INT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[INTEGER]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMapping -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testCreateMapping(org.molgenis.data.meta.AttributeType, org.molgenis.data.elasticsearch.generator.model.MappingType)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMapping" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProvider" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LONG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[LONG]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMapping -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testCreateMapping(org.molgenis.data.meta.AttributeType, org.molgenis.data.elasticsearch.generator.model.MappingType)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMapping" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProvider" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SCRIPT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TEXT]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMapping -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testCreateMappingProviderDepth(org.molgenis.data.meta.model.EntityType, org.molgenis.data.elasticsearch.generator.model.FieldMapping)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMappingProviderDepth" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProviderDepth" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entityTypeDepth0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FieldMapping{name=attr, type=LONG, nestedFieldMappings=null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMappingProviderDepth -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testCreateMappingProviderDepth(org.molgenis.data.meta.model.EntityType, org.molgenis.data.elasticsearch.generator.model.FieldMapping)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMappingProviderDepth" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProviderDepth" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entityTypeDepth1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FieldMapping{name=attr, type=NESTED, nestedFieldMappings=[FieldMapping{name=refAttr, type=LONG, nestedFieldMappings=null}]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMappingProviderDepth -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testCreateMappingProviderDepth(org.molgenis.data.meta.model.EntityType, org.molgenis.data.elasticsearch.generator.model.FieldMapping)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMappingProviderDepth" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProviderDepth" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[entityTypeDepth2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FieldMapping{name=attr, type=NESTED, nestedFieldMappings=[FieldMapping{name=refAttr, type=NESTED, nestedFieldMappings=[FieldMapping{name=refRefAttr, type=LONG, nestedFieldMappings=null}]}]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMappingProviderDepth -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testCreateMappingProviderNested(org.molgenis.data.meta.AttributeType)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMappingProviderNested" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProviderNested" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CATEGORICAL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMappingProviderNested -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testCreateMappingProviderNested(org.molgenis.data.meta.AttributeType)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMappingProviderNested" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProviderNested" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CATEGORICAL_MREF]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMappingProviderNested -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testCreateMappingProviderNested(org.molgenis.data.meta.AttributeType)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMappingProviderNested" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProviderNested" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[FILE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMappingProviderNested -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="testCreateMappingProviderNested(org.molgenis.data.meta.AttributeType)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMappingProviderNested" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProviderNested" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ONE_TO_MANY]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMappingProviderNested -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testCreateMappingProviderNested(org.molgenis.data.meta.AttributeType)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMappingProviderNested" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProviderNested" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MREF]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMappingProviderNested -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="testCreateMappingProviderNested(org.molgenis.data.meta.AttributeType)[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testCreateMappingProviderNested" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createMappingProviderNested" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[XREF]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMappingProviderNested -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testMappingGenerator()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="testMappingGenerator" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at java.util.Objects.requireNonNull(Objects.java:203)
	at org.molgenis.data.elasticsearch.generator.MappingGenerator.<init>(MappingGenerator.java:30)
	at org.molgenis.data.elasticsearch.generator.MappingGeneratorTest.testMappingGenerator(MappingGeneratorTest.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMappingGenerator -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.MappingGeneratorTest@7482309c]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
      </class> <!-- org.molgenis.data.elasticsearch.generator.MappingGeneratorTest -->
      <class name="org.molgenis.data.elasticsearch.client.MappingContentBuilderTest">
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.client.MappingContentBuilderTest@4cc89246]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:15Z" finished-at="2018-06-01T13:22:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testCreateMapping(org.molgenis.data.elasticsearch.generator.model.MappingType, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.client.MappingContentBuilderTest@4cc89246]" name="testCreateMapping" duration-ms="4" started-at="2018-06-01T13:22:15Z" data-provider="createMappingProvider" finished-at="2018-06-01T13:22:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BOOLEAN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"_source":{"enabled":false},"properties":{"field":{"type":"boolean"}}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMapping -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.client.MappingContentBuilderTest@4cc89246]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:15Z" finished-at="2018-06-01T13:22:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testCreateMapping(org.molgenis.data.elasticsearch.generator.model.MappingType, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.client.MappingContentBuilderTest@4cc89246]" name="testCreateMapping" duration-ms="0" started-at="2018-06-01T13:22:15Z" data-provider="createMappingProvider" finished-at="2018-06-01T13:22:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DATE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"_source":{"enabled":false},"properties":{"field":{"type":"date","format":"date","fields":{"raw":{"type":"keyword","index":true}}}}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMapping -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.client.MappingContentBuilderTest@4cc89246]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:15Z" finished-at="2018-06-01T13:22:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testCreateMapping(org.molgenis.data.elasticsearch.generator.model.MappingType, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.client.MappingContentBuilderTest@4cc89246]" name="testCreateMapping" duration-ms="0" started-at="2018-06-01T13:22:15Z" data-provider="createMappingProvider" finished-at="2018-06-01T13:22:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DATE_TIME]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"_source":{"enabled":false},"properties":{"field":{"type":"date","format":"date_time_no_millis","fields":{"raw":{"type":"keyword","index":true}}}}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMapping -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.client.MappingContentBuilderTest@4cc89246]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:15Z" finished-at="2018-06-01T13:22:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testCreateMapping(org.molgenis.data.elasticsearch.generator.model.MappingType, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.client.MappingContentBuilderTest@4cc89246]" name="testCreateMapping" duration-ms="0" started-at="2018-06-01T13:22:15Z" data-provider="createMappingProvider" finished-at="2018-06-01T13:22:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DOUBLE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"_source":{"enabled":false},"properties":{"field":{"type":"double"}}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMapping -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.client.MappingContentBuilderTest@4cc89246]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:15Z" finished-at="2018-06-01T13:22:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testCreateMapping(org.molgenis.data.elasticsearch.generator.model.MappingType, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.client.MappingContentBuilderTest@4cc89246]" name="testCreateMapping" duration-ms="0" started-at="2018-06-01T13:22:15Z" data-provider="createMappingProvider" finished-at="2018-06-01T13:22:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[INTEGER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"_source":{"enabled":false},"properties":{"field":{"type":"integer","doc_values":true}}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMapping -->
        <test-method status="PASS" signature="testCreateMapping(org.molgenis.data.elasticsearch.generator.model.MappingType, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.client.MappingContentBuilderTest@4cc89246]" name="testCreateMapping" duration-ms="1" started-at="2018-06-01T13:22:15Z" data-provider="createMappingProvider" finished-at="2018-06-01T13:22:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LONG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"_source":{"enabled":false},"properties":{"field":{"type":"long"}}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMapping -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.client.MappingContentBuilderTest@4cc89246]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:15Z" finished-at="2018-06-01T13:22:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.client.MappingContentBuilderTest@4cc89246]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:15Z" finished-at="2018-06-01T13:22:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="testCreateMapping(org.molgenis.data.elasticsearch.generator.model.MappingType, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.client.MappingContentBuilderTest@4cc89246]" name="testCreateMapping" duration-ms="1" started-at="2018-06-01T13:22:15Z" data-provider="createMappingProvider" finished-at="2018-06-01T13:22:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TEXT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"_source":{"enabled":false},"properties":{"field":{"type":"text","norms":true,"fields":{"raw":{"type":"keyword","index":true}}}}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMapping -->
        <test-method status="PASS" signature="testCreateMappingNested()[pri:0, instance:org.molgenis.data.elasticsearch.client.MappingContentBuilderTest@4cc89246]" name="testCreateMappingNested" duration-ms="1" started-at="2018-06-01T13:22:15Z" finished-at="2018-06-01T13:22:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMappingNested -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.client.MappingContentBuilderTest@4cc89246]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:15Z" finished-at="2018-06-01T13:22:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
      </class> <!-- org.molgenis.data.elasticsearch.client.MappingContentBuilderTest -->
      <class name="org.molgenis.data.elasticsearch.generator.QueryGeneratorTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:22Z" finished-at="2018-06-01T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="518" started-at="2018-06-01T13:22:22Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeClass()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeClass" is-config="true" duration-ms="62" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateMultipleQueryRule()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="18" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateMultipleQueryRule()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateMultipleQueryRule" duration-ms="26" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateMultipleQueryRule -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="4" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateMultipleQueryRule()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateMultipleQueryRuleMultipleNotClauses()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="7" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateMultipleQueryRuleMultipleNotClauses()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateMultipleQueryRuleMultipleNotClauses" duration-ms="3" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateMultipleQueryRuleMultipleNotClauses -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateMultipleQueryRuleMultipleNotClauses()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsBool()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="8" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsBool()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsBool" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsBool -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsBool()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsBoolNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="7" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsBoolNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsBoolNull" duration-ms="7" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsBoolNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsBoolNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsCategorical()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="7" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsCategorical()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsCategorical" duration-ms="10" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsCategorical -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsCategorical()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsCategoricalNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="4" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsCategoricalNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsCategoricalNull" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsCategoricalNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsCategoricalNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsCompound()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="5" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsCompound()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsCompound" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Illegal attribute type [COMPOUND]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Illegal attribute type [COMPOUND]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.getQueryValue(QueryGenerator.java:865)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseEqualsValue(QueryGenerator.java:197)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseEquals(QueryGenerator.java:184)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:133)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsCompound(QueryGeneratorTest.java:1196)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsCompound -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsCompound()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsCompoundNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="7" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsCompoundNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsCompoundNull" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Illegal attribute type [COMPOUND]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Illegal attribute type [COMPOUND]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseEqualsNoValue(QueryGenerator.java:290)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseEquals(QueryGenerator.java:188)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:133)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsCompoundNull(QueryGeneratorTest.java:821)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsCompoundNull -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsCompoundNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsCompoundPartString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="6" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsCompoundPartString()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsCompoundPartString" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsCompoundPartString -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsCompoundPartString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsCompoundPartStringNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="6" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsCompoundPartStringNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsCompoundPartStringNull" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsCompoundPartStringNull -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsCompoundPartStringNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="7" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsDate()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsDate" duration-ms="7" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsDate -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsDateNull() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsDateNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsDateNull" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsDateNull -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsDateNull() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="4" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsDateTime()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsDateTime" duration-ms="4" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsDateTime -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsDateTimeNull() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsDateTimeNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsDateTimeNull" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsDateTimeNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsDateTimeNull() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsDecimal()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsDecimal" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsDecimal -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsDecimalNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="4" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsDecimalNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsDecimalNull" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsDecimalNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsDecimalNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="4" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsEmail()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsEmail" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsEmail -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsEmailNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsEmailNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsEmailNull" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsEmailNull -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsEmailNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsEnum()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsEnum()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsEnum" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsEnum -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsEnum()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsEnumNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsEnumNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsEnumNull" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsEnumNull -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsEnumNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsHtml()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsHtml()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsHtml" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsHtml -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsHtml()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsHtmlNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsHtmlNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsHtmlNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsHtmlNull" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsHtmlNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsHyperlink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsHyperlink()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsHyperlink" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsHyperlink -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsHyperlinkNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsHyperlink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsHyperlinkNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsHyperlinkNull" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsHyperlinkNull -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsHyperlinkNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsInt()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsInt" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsInt -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsIntNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsIntNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsIntNull" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsIntNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsIntNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsLong()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsLong" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsLong -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsLongNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsLongNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsLongNull" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsLongNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsLongNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsScript()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsScript()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsScript" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsScript -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsScriptNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsScript()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsScriptNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsScriptNull" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsScriptNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsScriptNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsString()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsString" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsString -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsStringNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsStringNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsStringNull" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsStringNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsStringNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsText()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsText" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsText -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsTextNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsTextNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsTextNull" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsTextNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsTextNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsXref()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsXref()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsXref" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsXref -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsXrefNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsXref()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleEqualsXrefNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleEqualsXrefNull" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleEqualsXrefNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleEqualsXrefNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterDate()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleGreaterDate" duration-ms="6" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterDate -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterDateTime()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleGreaterDateTime" duration-ms="41" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterDateTime -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterDecimal()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleGreaterDecimal" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterDecimal -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterEqualDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterEqualDate()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleGreaterEqualDate" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterEqualDate -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterEqualDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterEqualDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterEqualDateTime()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleGreaterEqualDateTime" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterEqualDateTime -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterEqualDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterEqualDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterEqualDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterEqualDecimal()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleGreaterEqualDecimal" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterEqualDecimal -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterEqualInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterEqualInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterEqualInt()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleGreaterEqualInt" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterEqualInt -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterEqualInvalidAttribute()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterEqualInvalidAttribute()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleGreaterEqualInvalidAttribute" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Range query not allowed for type [STRING]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Range query not allowed for type [STRING]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.validateNumericalQueryField(QueryGenerator.java:748)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseRangeOpen(QueryGenerator.java:564)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:142)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterEqualInvalidAttribute(QueryGeneratorTest.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterEqualInvalidAttribute -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterEqualLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterEqualInvalidAttribute()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterEqualLong()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleGreaterEqualLong" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterEqualLong -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterEqualLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterInt()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleGreaterInt" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterInt -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterInvalidAttribute()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterInvalidAttribute()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleGreaterInvalidAttribute" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Range query not allowed for type [STRING]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Range query not allowed for type [STRING]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.validateNumericalQueryField(QueryGenerator.java:748)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseRangeOpen(QueryGenerator.java:564)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:142)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterInvalidAttribute(QueryGeneratorTest.java:137)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterInvalidAttribute -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterInvalidAttribute()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleGreaterLong()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleGreaterLong" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleGreaterLong -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleGreaterLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInBool()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleInBool()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInBool" duration-ms="8" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInBool -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInCategorical_Entities()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInBool()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleInCategorical_Entities()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInCategorical_Entities" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInCategorical_Entities -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInCategorical_Entities()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInCategorical_Ids()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleInCategorical_Ids()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInCategorical_Ids" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInCategorical_Ids -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInCategorical_Ids()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleInDate()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInDate" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInDate -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleInDateTime()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInDateTime" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInDateTime -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleInDecimal()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInDecimal" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInDecimal -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleInEmail()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInEmail" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInEmail -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInEnum()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleInEnum()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInEnum" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInEnum -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInHtml()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInEnum()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleInHtml()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInHtml" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInHtml -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInHtml()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInHyperlink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleInHyperlink()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInHyperlink" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInHyperlink -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInHyperlink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleInInt()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInInt" duration-ms="4" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInInt -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleInLong()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInLong" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInLong -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInMref_Entities()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleInMref_Entities()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInMref_Entities" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInMref_Entities -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInMref_Entities()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInMref_Ids()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleInMref_Ids()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInMref_Ids" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInMref_Ids -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInMref_Ids()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInScript()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleInScript()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInScript" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInScript -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInScript()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleInString()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInString" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInString -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleInText()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInText" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInText -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInXref_Entities()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleInXref_Entities()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInXref_Entities" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInXref_Entities -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInXref_Ids()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInXref_Entities()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleInXref_Ids()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleInXref_Ids" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleInXref_Ids -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleInXref_Ids()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleLesserDate()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLesserDate" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLesserDate -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLesserDateTime()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLesserDateTime" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLesserDateTime -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleLesserDecimal()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLesserDecimal" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLesserDecimal -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserEqualDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLesserEqualDate()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLesserEqualDate" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLesserEqualDate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserEqualDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserEqualDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLesserEqualDateTime()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLesserEqualDateTime" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLesserEqualDateTime -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserEqualDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserEqualDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleLesserEqualDecimal()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLesserEqualDecimal" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLesserEqualDecimal -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserEqualDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserEqualInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLesserEqualInt()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLesserEqualInt" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLesserEqualInt -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserEqualInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserEqualInvalidAttribute()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleLesserEqualInvalidAttribute()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLesserEqualInvalidAttribute" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Range query not allowed for type [STRING]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Range query not allowed for type [STRING]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.validateNumericalQueryField(QueryGenerator.java:748)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseRangeOpen(QueryGenerator.java:564)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:142)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserEqualInvalidAttribute(QueryGeneratorTest.java:260)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLesserEqualInvalidAttribute -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserEqualLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserEqualInvalidAttribute()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleLesserEqualLong()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLesserEqualLong" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLesserEqualLong -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserEqualLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLesserInt()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLesserInt" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLesserInt -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserInvalidAttribute()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleLesserInvalidAttribute()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLesserInvalidAttribute" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Range query not allowed for type [STRING]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Range query not allowed for type [STRING]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.validateNumericalQueryField(QueryGenerator.java:748)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseRangeOpen(QueryGenerator.java:564)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:142)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserInvalidAttribute(QueryGeneratorTest.java:322)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLesserInvalidAttribute -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserInvalidAttribute()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLesserLong()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLesserLong" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLesserLong -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLesserLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeBool()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeBool()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeBool" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Illegal data type [BOOL] for operator [LIKE]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Illegal data type [BOOL] for operator [LIKE]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseLike(QueryGenerator.java:508)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:146)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeBool(QueryGeneratorTest.java:639)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeBool -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeBool()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeCategorical()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeCategorical()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeCategorical" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[Unsupported data type [CATEGORICAL] for operator [LIKE]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: Unsupported data type [CATEGORICAL] for operator [LIKE]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseLike(QueryGenerator.java:519)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:146)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeCategorical(QueryGeneratorTest.java:647)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeCategorical -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeCategorical()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeCompound()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeCompound()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeCompound" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Illegal attribute type [COMPOUND]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Illegal attribute type [COMPOUND]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.getQueryValue(QueryGenerator.java:865)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseLike(QueryGenerator.java:488)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:146)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeCompound(QueryGeneratorTest.java:655)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeCompound -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeCompound()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeCompoundPartString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeCompoundPartString()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeCompoundPartString" duration-ms="9" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeCompoundPartString -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeDate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeCompoundPartString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeDate()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeDate" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Illegal data type [DATE] for operator [LIKE]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Illegal data type [DATE] for operator [LIKE]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseLike(QueryGenerator.java:508)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:146)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeDate(QueryGeneratorTest.java:674)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeDate -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeDate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeDateTime()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeDateTime()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeDateTime" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Illegal data type [DATE_TIME] for operator [LIKE]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Illegal data type [DATE_TIME] for operator [LIKE]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseLike(QueryGenerator.java:508)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:146)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeDateTime(QueryGeneratorTest.java:682)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeDateTime -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeDateTime()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeDecimal()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeDecimal" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Illegal data type [DECIMAL] for operator [LIKE]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Illegal data type [DECIMAL] for operator [LIKE]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseLike(QueryGenerator.java:508)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:146)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeDecimal(QueryGeneratorTest.java:690)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeDecimal -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeEmail()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeEmail" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeEmail -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeEnum()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeEnum()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeEnum" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeEnum -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeEnum()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeHtml()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeHtml()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeHtml" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[Unsupported data type [HTML] for operator [LIKE]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: Unsupported data type [HTML] for operator [LIKE]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseLike(QueryGenerator.java:519)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:146)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeHtml(QueryGeneratorTest.java:720)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeHtml -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeHtml()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeHyperlink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeHyperlink()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeHyperlink" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeHyperlink -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeHyperlink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeInt()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeInt" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Illegal data type [INT] for operator [LIKE]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Illegal data type [INT] for operator [LIKE]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseLike(QueryGenerator.java:508)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:146)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeInt(QueryGeneratorTest.java:739)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeInt -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeLong()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeLong" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Illegal data type [LONG] for operator [LIKE]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Illegal data type [LONG] for operator [LIKE]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseLike(QueryGenerator.java:508)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:146)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeLong(QueryGeneratorTest.java:747)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeLong -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeMref()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeMref()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeMref()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeMref" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[Unsupported data type [MREF] for operator [LIKE]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: Unsupported data type [MREF] for operator [LIKE]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseLike(QueryGenerator.java:519)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:146)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeMref(QueryGeneratorTest.java:755)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeMref -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeScript()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeScript()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeScript" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[Unsupported data type [SCRIPT] for operator [LIKE]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: Unsupported data type [SCRIPT] for operator [LIKE]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseLike(QueryGenerator.java:519)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:146)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeScript(QueryGeneratorTest.java:763)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeScript -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeScript()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeString()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeString" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeString -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeText()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeText" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[Unsupported data type [TEXT] for operator [LIKE]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: Unsupported data type [TEXT] for operator [LIKE]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseLike(QueryGenerator.java:519)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:146)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeText(QueryGeneratorTest.java:782)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeText -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeXref()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleLikeXref()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleLikeXref" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[Unsupported data type [XREF] for operator [LIKE]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: Unsupported data type [XREF] for operator [LIKE]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseLike(QueryGenerator.java:519)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:146)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeXref(QueryGeneratorTest.java:790)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleLikeXref -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsBool()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleLikeXref()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsBool()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsBool" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsBool -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsBool()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsBoolNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsBoolNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsBoolNull" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsBoolNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsBoolNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsCategorical()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsCategorical()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsCategorical" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsCategorical -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsCategorical()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsCategoricalNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsCategoricalNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsCategoricalNull" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsCategoricalNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsCategoricalNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsCompound()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsCompound()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsCompound" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Illegal attribute type [COMPOUND]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Illegal attribute type [COMPOUND]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.getQueryValue(QueryGenerator.java:865)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseEqualsValue(QueryGenerator.java:197)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseEquals(QueryGenerator.java:184)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:133)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:100)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsCompound(QueryGeneratorTest.java:1379)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsCompound -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsCompoundNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsCompound()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsCompoundNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsCompoundNull" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Illegal attribute type [COMPOUND]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Illegal attribute type [COMPOUND]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseEqualsNoValue(QueryGenerator.java:290)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseEquals(QueryGenerator.java:188)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:133)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:100)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsCompoundNull(QueryGeneratorTest.java:1002)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsCompoundNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsCompoundNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsCompoundPartString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsCompoundPartString()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsCompoundPartString" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsCompoundPartString -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsCompoundPartString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsCompoundPartStringNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsCompoundPartStringNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsCompoundPartStringNull" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsCompoundPartStringNull -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsCompoundPartStringNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsDate()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsDate" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsDate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsDateNull() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsDateNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsDateNull" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsDateNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsDateNull() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsDateTime()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsDateTime" duration-ms="1" started-at="2018-06-01T13:22:23Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsDateTime -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsDateTimeNull() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsDateTimeNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsDateTimeNull" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsDateTimeNull -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsDateTimeNull() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsDecimal()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsDecimal" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsDecimal -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsDecimalNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsDecimalNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsDecimalNull" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsDecimalNull -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsDecimalNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsEmail()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsEmail" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsEmail -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsEmailNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsEmailNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsEmailNull" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsEmailNull -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsEmailNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsEnum()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsEnum()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsEnum" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsEnum -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsEnum()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsEnumNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsEnumNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsEnumNull" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsEnumNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsHtml()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsEnumNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsHtml()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsHtml" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsHtml -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsHtml()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsHtmlNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsHtmlNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsHtmlNull" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsHtmlNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsHyperlink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsHtmlNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsHyperlink()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsHyperlink" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsHyperlink -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsHyperlink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsHyperlinkNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsHyperlinkNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsHyperlinkNull" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsHyperlinkNull -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsHyperlinkNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsInt()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsInt" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsInt -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsIntNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsIntNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsIntNull" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsIntNull -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsIntNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsLong()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsLong" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsLong -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsLongNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsLongNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsLongNull" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsLongNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsLongNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsScript()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsScript()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsScript" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsScript -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsScript()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsScriptNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsScriptNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsScriptNull" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsScriptNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsScriptNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsString()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsString" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsString -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsStringNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsStringNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsStringNull" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsStringNull -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsStringNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsText()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsText" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsText -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsTextNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsTextNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsTextNull" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsTextNull -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsXref()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsTextNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsXref()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsXref" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsXref -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsXref()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsXrefNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleNotEqualsXrefNull()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleNotEqualsXrefNull" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleNotEqualsXrefNull -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleNotEqualsXrefNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleRangeInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleRangeInt()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleRangeInt" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleRangeInt -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleRangeLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleRangeInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleRangeLong()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleRangeLong" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleRangeLong -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleRangeLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchAllFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchAllFields()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchAllFields" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchAllFields -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchAllFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldBool()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldBool()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldBool" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Cannot execute search query on [BOOL] attribute]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Cannot execute search query on [BOOL] attribute
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseSearchAttribute(QueryGenerator.java:668)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseSearch(QueryGenerator.java:623)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:152)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldBool(QueryGeneratorTest.java:1578)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldBool -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldCategorical()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldBool()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldCategorical()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldCategorical" duration-ms="8" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldCategorical -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldCompound()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldCategorical()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldCompound()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldCompound()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldCompound" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <exception class="org.molgenis.data.MolgenisQueryException">
            <message>
              <![CDATA[Illegal attribute type [COMPOUND]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.molgenis.data.MolgenisQueryException: Illegal attribute type [COMPOUND]
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.getQueryValue(QueryGenerator.java:865)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseSearchAttribute(QueryGenerator.java:636)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClauseSearch(QueryGenerator.java:623)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryClause(QueryGenerator.java:152)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:57)
	at org.molgenis.data.elasticsearch.generator.QueryGenerator.createQueryBuilder(QueryGenerator.java:46)
	at org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldCompound(QueryGeneratorTest.java:1597)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- org.molgenis.data.MolgenisQueryException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldCompound -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldCompoundPartString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldCompoundPartString()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldCompoundPartString" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldCompoundPartString -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldCompoundPartString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldDate()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldDate" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldDate -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldDate() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldDateTime()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldDateTime" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldDateTime -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldDateTime() throws java.text.ParseException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldDecimal()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldDecimal" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldDecimal -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldDecimal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldEmail()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldEmail" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldEmail -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldEnum()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldEnum()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldEnum" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldEnum -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldHtml()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldEnum()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldHtml()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldHtml" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldHtml -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldHtml()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldHyperlink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldHyperlink()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldHyperlink" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldHyperlink -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldHyperlink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldInt()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldInt" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldInt -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldLong()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldLong" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldLong -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldMref()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldMref()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldMref" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldMref -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldScript()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldMref()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldScript()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldScript" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldScript -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="3" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldScript()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldString()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldString" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldString -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldText()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldText" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldText -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldXref()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestBeforeMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="setUp" is-config="true" duration-ms="2" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="generateOneQueryRuleSearchOneFieldXref()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="generateOneQueryRuleSearchOneFieldXref" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateOneQueryRuleSearchOneFieldXref -->
        <test-method status="PASS" signature="abstractMolgenisSpringTestAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="abstractMolgenisSpringTestAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abstractMolgenisSpringTestAfterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.molgenis.data.elasticsearch.generator.QueryGeneratorTest.generateOneQueryRuleSearchOneFieldXref()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.molgenis.data.elasticsearch.generator.QueryGeneratorTest@2fea9a7b]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.molgenis.data.elasticsearch.generator.QueryGeneratorTest -->
      <class name="org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest">
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="DocumentContentBuilder()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="DocumentContentBuilder" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at java.util.Objects.requireNonNull(Objects.java:203)
	at org.molgenis.data.elasticsearch.generator.DocumentContentBuilder.<init>(DocumentContentBuilder.java:32)
	at org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest.DocumentContentBuilder(DocumentContentBuilderTest.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DocumentContentBuilder -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentBool(java.lang.Boolean, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentBool" duration-ms="27" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentBool" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentBool -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentBool(java.lang.Boolean, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentBool" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentBool" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":true}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentBool -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentBool(java.lang.Boolean, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentBool" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentBool" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":false}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentBool -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentDate(java.time.LocalDate, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentDate" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentDate" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentDate -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentDate(java.time.LocalDate, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentDate" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentDate" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2017-06-19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":"2017-06-19"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentDate -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="createDocumentDateTime(java.time.Instant, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentDateTime" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentDateTime" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentDateTime -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentDateTime(java.time.Instant, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentDateTime" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentDateTime" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2017-06-19T14:01:48.079Z]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":"2017-06-19T14:01:48.079Z"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentDateTime -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="createDocumentDecimal(java.lang.Double, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentDecimal" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentDecimal" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentDecimal -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="createDocumentDecimal(java.lang.Double, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentDecimal" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentDecimal" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.23]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":-1.23}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentDecimal -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentDecimal(java.lang.Double, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentDecimal" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentDecimal" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":0.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentDecimal -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentDecimal(java.lang.Double, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentDecimal" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentDecimal" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.56]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":4.56}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentDecimal -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentDecimal(java.lang.Double, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentDecimal" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentDecimal" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.9E-324]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":4.9E-324}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentDecimal -->
        <test-method status="PASS" signature="createDocumentDecimal(java.lang.Double, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentDecimal" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentDecimal" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":1.7976931348623157E308}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentDecimal -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentDepth(int, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentDepth" duration-ms="3" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentDepth" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":{"refAttr":null}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentDepth -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentDepth(int, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentDepth" duration-ms="4" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentDepth" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":{"refAttr":{"refRefAttr":null}}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentDepth -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentDepth(int, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentDepth" duration-ms="4" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentDepth" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":{"refAttr":{"refRefAttr":null}}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentDepth -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentInt(java.lang.Integer, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentInt" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentInt" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentInt -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="createDocumentInt(java.lang.Integer, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentInt" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentInt" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":-1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentInt -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentInt(java.lang.Integer, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentInt" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentInt" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentInt -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentInt(java.lang.Integer, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentInt" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentInt" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2147483648]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":-2147483648}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentInt -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentInt(java.lang.Integer, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentInt" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentInt" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":2147483647}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentInt -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="createDocumentLong(java.lang.Long, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentLong" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentLong" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentLong -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="createDocumentLong(java.lang.Long, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentLong" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentLong" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":-1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentLong -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentLong(java.lang.Long, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentLong" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentLong" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentLong -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="createDocumentLong(java.lang.Long, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentLong" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentLong" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-9223372036854775808]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":-9223372036854775808}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentLong -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentLong(java.lang.Long, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentLong" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentLong" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9223372036854775807]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"attr":9223372036854775807}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentLong -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentMultiReferenceAttribute(org.molgenis.data.meta.AttributeType, java.lang.Iterable, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentMultiReferenceAttribute" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentMultiReference" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CATEGORICAL_MREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentMultiReferenceAttribute -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentMultiReferenceAttribute(org.molgenis.data.meta.AttributeType, java.lang.Iterable, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentMultiReferenceAttribute" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentMultiReference" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CATEGORICAL_MREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Mock for Entity, hashCode: 1233265476]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":[{"refAttr":"str"}]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentMultiReferenceAttribute -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentMultiReferenceAttribute(org.molgenis.data.meta.AttributeType, java.lang.Iterable, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentMultiReferenceAttribute" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentMultiReference" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentMultiReferenceAttribute -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="createDocumentMultiReferenceAttribute(org.molgenis.data.meta.AttributeType, java.lang.Iterable, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentMultiReferenceAttribute" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentMultiReference" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Mock for Entity, hashCode: 1233265476]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":[{"refAttr":"str"}]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentMultiReferenceAttribute -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentMultiReferenceAttribute(org.molgenis.data.meta.AttributeType, java.lang.Iterable, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentMultiReferenceAttribute" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentMultiReference" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ONE_TO_MANY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentMultiReferenceAttribute -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="createDocumentMultiReferenceAttribute(org.molgenis.data.meta.AttributeType, java.lang.Iterable, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentMultiReferenceAttribute" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentMultiReference" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ONE_TO_MANY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Mock for Entity, hashCode: 1233265476]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":[{"refAttr":"str"}]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentMultiReferenceAttribute -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentObject()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentObject" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentObject -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentReferenceAttribute(org.molgenis.data.meta.AttributeType, org.molgenis.data.Entity, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentReferenceAttribute" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentReference" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CATEGORICAL]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentReferenceAttribute -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentReferenceAttribute(org.molgenis.data.meta.AttributeType, org.molgenis.data.Entity, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentReferenceAttribute" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentReference" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CATEGORICAL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mock for Entity, hashCode: 1944177123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":{"refAttr":"str"}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentReferenceAttribute -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentReferenceAttribute(org.molgenis.data.meta.AttributeType, org.molgenis.data.Entity, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentReferenceAttribute" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentReference" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[FILE]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentReferenceAttribute -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentReferenceAttribute(org.molgenis.data.meta.AttributeType, org.molgenis.data.Entity, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentReferenceAttribute" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentReference" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[FILE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mock for Entity, hashCode: 1944177123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":{"refAttr":"str"}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentReferenceAttribute -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentReferenceAttribute(org.molgenis.data.meta.AttributeType, org.molgenis.data.Entity, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentReferenceAttribute" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentReference" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[XREF]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentReferenceAttribute -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentReferenceAttribute(org.molgenis.data.meta.AttributeType, org.molgenis.data.Entity, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentReferenceAttribute" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentReference" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[XREF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mock for Entity, hashCode: 1944177123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":{"refAttr":"str"}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentReferenceAttribute -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[EMAIL]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[EMAIL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":"abc"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[EMAIL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":""}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ENUM]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ENUM]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":"abc"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ENUM]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":""}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HTML]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HTML]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":"abc"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HTML]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":""}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="2" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HYPERLINK]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HYPERLINK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":"abc"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HYPERLINK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":""}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SCRIPT]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SCRIPT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":"abc"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SCRIPT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":""}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[STRING]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[STRING]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":"abc"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[STRING]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":""}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TEXT]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TEXT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":"abc"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="initMocks()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="initMocks" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initMocks -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="createDocumentString(org.molgenis.data.meta.AttributeType, java.lang.String, java.lang.String)[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="createDocumentString" duration-ms="1" started-at="2018-06-01T13:22:24Z" data-provider="createDocumentString" finished-at="2018-06-01T13:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TEXT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"attr":""}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDocumentString -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest@3b25709e]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2018-06-01T13:22:24Z" finished-at="2018-06-01T13:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
      </class> <!-- org.molgenis.data.elasticsearch.generator.DocumentContentBuilderTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
