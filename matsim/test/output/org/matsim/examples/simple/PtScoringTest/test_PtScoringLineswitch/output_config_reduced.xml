<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="TimeAllocationMutator" >
		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="7200.0" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="controler" >
		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="false" />
		<!-- Default=1000;  -->
		<param name="lastIteration" value="0" />
		<param name="outputDirectory" value="test/output/org/matsim/examples/simple/PtScoringTest/test_PtScoringLineswitch/" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="overwriteExistingFiles" />
		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="1" />
		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="50" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="network" >
		<param name="inputNetworkFile" value="network.xml" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="planCalcScore" >
		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="true" />
		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-18.0" />
			<parameterset type="activityParams" >
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>
			<parameterset type="activityParams" >
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>
			<parameterset type="activityParams" >
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>
			<parameterset type="activityParams" >
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>
			<parameterset type="activityParams" >
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>
			<parameterset type="activityParams" >
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="home" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="18:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="-0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-12.0" />
			</parameterset>
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="plans" >
		<param name="inputPlansFile" value="population.xml" />
	</module>
<!-- ====================================================================== -->
	<module name="planscalcroute" >
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="qsim" >
		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="onlyUseStarttime" />
		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="queue" />
		<param name="startTime" value="05:00:00" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="strategy" >
		<parameterset type="strategysettings" >
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRouteTimeAllocationMutatorTimeAllocationMutator_ReRouteChangeSingleTripModeChangeTripModeSubtourModeChoice (innovative strategies). -->
			<param name="strategyName" value="ChangeExpBeta" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.8" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="transit" >
		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="transitschedule.xml" />
		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="true" />
		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="transitVehicles.xml" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->

</config>
