<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="controler" >
		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="false" />
		<!-- Default=1000;  -->
		<param name="lastIteration" value="0" />
		<param name="outputDirectory" value="test/output/org/matsim/integration/EquilTwoAgentsTest/testSingleIterationPlansV4/" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="overwriteExistingFiles" />
		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="test" />
		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="0" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="facilities" >
		<!-- This defines how facilities should be created. Possible values: none fromFile setInScenario onePerActivityLocationInPlansFile  -->
		<param name="facilitiesSource" value="fromFile" />
		<param name="inputFacilitiesFile" value="facilities.xml" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="network" >
		<param name="inputNetworkFile" value="network.xml" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="planCalcScore" >
		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="2.0" />
		<parameterset type="scoringParameters" >
			<param name="waitingPt" value="-3.0" />
			<parameterset type="activityParams" >
				<param name="activityType" value="w" />
				<param name="closingTime" value="18:00:00" />
				<param name="latestStartTime" value="07:00:00" />
				<param name="minimalDuration" value="06:00:00" />
				<param name="openingTime" value="07:00:00" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="08:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="h" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="34293:33:09" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-3.0" />
			</parameterset>
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="plans" >
		<param name="inputPlansFile" value="file:/root/workspace/matsim-org/matsim/386581902/matsim/target/test-classes/test/input/org/matsim/integration/EquilTwoAgentsTest//plans2.xml" />
	</module>
<!-- ====================================================================== -->
	<module name="planscalcroute" >
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="qsim" >
		<param name="endTime" value="00:00:00" />
		<param name="startTime" value="00:00:00" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="strategy" >
		<parameterset type="strategysettings" >
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRouteTimeAllocationMutatorTimeAllocationMutator_ReRouteChangeSingleTripModeChangeTripModeSubtourModeChoice (innovative strategies). -->
			<param name="strategyName" value="ChangeExpBeta" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.9" />
		</parameterset>
		<parameterset type="strategysettings" >
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRouteTimeAllocationMutatorTimeAllocationMutator_ReRouteChangeSingleTripModeChangeTripModeSubtourModeChoice (innovative strategies). -->
			<param name="strategyName" value="TimeAllocationMutator" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->

</config>
