{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "prestodb/presto",
  "metrics": {
    "NbFailingTests": 3,
    "BugCommitUrl": "http://github.com/prestodb/presto/commit/fede77337de096839e54b349b5a11c451cd61e90",
    "ReproductionDate": "Aug 29, 2017 8:36:15 AM",
    "BuggyBuildId": 269413348,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/prestodb/presto/builds/269413348",
    "BuggyBuildDate": "Aug 29, 2017 4:14:09 AM",
    "BugCommit": "fede77337de096839e54b349b5a11c451cd61e90",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 3837,
    "NbLibraries": 144,
    "NbFileApp": 6724,
    "NbFileTests": 2186,
    "NbCPU": 8,
    "FreeMemory": 2062678744,
    "TotalMemory": 3657957376,
    "AngelicValuesByTest": {
      "com/facebook/presto/sql/planner/TestLogicalPlanner": 0,
      "com/facebook/presto/sql/planner/optimizations/TestReorderJoins": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 533142552,
      "ComputeClasspath": 348175792,
      "ComputeTestDir": 290460120,
      "ResolveDependency": 187535720,
      "BuildProject": 720543616,
      "NPERepair": 353271952,
      "ComputeSourceDir": 348175792,
      "InitRepoToPush": 103521464,
      "CloneRepository": 598187848,
      "NopolRepair": 2443980360,
      "CheckoutPatchedBuild": 2062678744,
      "TestProject": 703958400,
      "GatherTestInformation": 680785144,
      "PushIncriminatedBuild": 353271952,
      "CommitPatch": 2062678744
    },
    "FailureNames": [
      "java.lang.AssertionError"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 59,
      "ComputeClasspath": 6,
      "ComputeTestDir": 0,
      "ResolveDependency": 156,
      "BuildProject": 914,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 685,
      "CloneRepository": 51,
      "NopolRepair": 149,
      "CheckoutPatchedBuild": 0,
      "TestProject": 834,
      "GatherTestInformation": 11,
      "PushIncriminatedBuild": 546,
      "CommitPatch": 81
    }
  },
  "failingModule": "/root/workspace/prestodb/presto/269413348/presto-main",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 3,
  "error-types": [
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 3837,
  "failing-test-cases": [
    {
      "className": "com.facebook.presto.sql.planner.optimizations.TestReorderJoins",
      "failingMethods": [
        "com.facebook.presto.sql.planner.optimizations.TestReorderJoins#testEliminateCrossJoinWithNonEqualityCondition",
        "com.facebook.presto.sql.planner.optimizations.TestReorderJoins#testEliminateCrossJoinPreserveFilters"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Plan does not match, expected [\n\n- anyTree\n    - node(JoinNode)\n        JoinMatcher{equiCriteria\u003d[L_ORDERKEY \u003d O_ORDERKEY], dynamicFilter\u003dOptional.empty}\n        - anyTree\n            - node(JoinNode)\n                JoinMatcher{equiCriteria\u003d[P_PARTKEY \u003d L_PARTKEY], dynamicFilter\u003dOptional.empty}\n                - anyTree\n                    - node(TableScanNode)\n                        TableScanMatcher{expectedTableName\u003dpart}\n                        bind P_PARTKEY -\u003e Column part:partkey\n                - anyTree\n                    - node(FilterNode)\n                        FilterMatcher{predicate\u003d((\"L_RETURNFLAG\" \u003d \u0027R\u0027) AND (\"L_ORDERKEY\" \u003d \"$INTERNAL$DEFERRED_SYMBOL_REFERENCE\"(\"128\", \"dynamic_filter_orderkey\")))}\n                        - node(TableScanNode)\n                            TableScanMatcher{expectedTableName\u003dlineitem}\n                            bind L_PARTKEY -\u003e Column lineitem:partkey\n                            bind L_ORDERKEY -\u003e Column lineitem:orderkey\n                            bind L_RETURNFLAG -\u003e Column lineitem:returnflag\n        - anyTree\n            - node(FilterNode)\n                FilterMatcher{predicate\u003d(\"O_SHIPPRIORITY\" \u003e\u003d 10)}\n                - node(TableScanNode)\n                    TableScanMatcher{expectedTableName\u003dorders}\n                    bind O_ORDERKEY -\u003e Column orders:orderkey\n                    bind O_SHIPPRIORITY -\u003e Column orders:shippriority\n\n] but found [\n\n- Output[orderkey] \u003d\u003e [orderkey_2:bigint]\n        Cost: {rows: 120350, bytes: ?}\n        orderkey :\u003d orderkey_2\n    - InnerJoin[(\"orderkey_2\" \u003d \"orderkey\")][$hashvalue_11, $hashvalue_12] \u003d\u003e [orderkey_2:bigint]\n            Cost: {rows: 120350, bytes: ?}\n        - Project[] \u003d\u003e [orderkey_2:bigint, $hashvalue_11:bigint]\n                Cost: {rows: 60175, bytes: ?}\n                $hashvalue_11 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"orderkey_2\"), 0))\n            - InnerJoin[(\"partkey\" \u003d \"partkey_3\")][$hashvalue, $hashvalue_9] \u003d\u003e [orderkey_2:bigint]\n                    Cost: {rows: 60175, bytes: ?}\n                - ScanProject[table \u003d local:tpch:part:sf0.01, originalConstraint \u003d true] \u003d\u003e [partkey:bigint, $hashvalue:bigint]\n                        Cost: {rows: 2000, bytes: ?}/{rows: 2000, bytes: ?}\n                        $hashvalue :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"partkey\"), 0))\n                        partkey :\u003d tpch:partkey\n                - LocalExchange[SINGLE] () \u003d\u003e orderkey_2:bigint, partkey_3:bigint, $hashvalue_9:bigint\n                        Cost: {rows: 30087, bytes: ?}\n                    - ScanFilterProject[table \u003d local:tpch:lineitem:sf0.01, originalConstraint \u003d (\u0027R\u0027 \u003d \"returnflag\"), filterPredicate \u003d (\"returnflag\" \u003d \u0027R\u0027)] \u003d\u003e [orderkey_2:bigint, partkey_3:bigint, $hashvalue_10:bigint]\n                            Cost: {rows: 60175, bytes: ?}/{rows: 30087, bytes: ?}/{rows: 30087, bytes: ?}\n                            $hashvalue_10 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"partkey_3\"), 0))\n                            orderkey_2 :\u003d tpch:orderkey\n                            partkey_3 :\u003d tpch:partkey\n                            returnflag :\u003d tpch:returnflag\n        - LocalExchange[SINGLE] () \u003d\u003e orderkey:bigint, $hashvalue_12:bigint\n                Cost: {rows: 7500, bytes: ?}\n            - ScanFilterProject[table \u003d local:tpch:orders:sf0.01, originalConstraint \u003d (\"shippriority\" \u003e\u003d 10), filterPredicate \u003d (\"shippriority\" \u003e\u003d 10)] \u003d\u003e [orderkey:bigint, $hashvalue_13:bigint]\n                    Cost: {rows: 15000, bytes: ?}/{rows: 7500, bytes: ?}/{rows: 7500, bytes: ?}\n                    $hashvalue_13 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"orderkey\"), 0))\n                    orderkey :\u003d tpch:orderkey\n                    shippriority :\u003d tpch:shippriority\n\n] which resolves to [\n\n- Output[orderkey] \u003d\u003e [orderkey_2:bigint]\n        Cost: {rows: 120350, bytes: ?}\n        orderkey :\u003d orderkey_2\n    - InnerJoin[(\"orderkey_2\" \u003d \"orderkey\")][$hashvalue_11, $hashvalue_12] \u003d\u003e [orderkey_2:bigint]\n            Cost: {rows: 120350, bytes: ?}\n        - Project[] \u003d\u003e [orderkey_2:bigint, $hashvalue_11:bigint]\n                Cost: {rows: 60175, bytes: ?}\n                $hashvalue_11 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"orderkey_2\"), 0))\n            - InnerJoin[(\"partkey\" \u003d \"partkey_3\")][$hashvalue, $hashvalue_9] \u003d\u003e [orderkey_2:bigint]\n                    Cost: {rows: 60175, bytes: ?}\n                - ScanProject[table \u003d local:tpch:part:sf0.01, originalConstraint \u003d true] \u003d\u003e [partkey:bigint, $hashvalue:bigint]\n                        Cost: {rows: 2000, bytes: ?}/{rows: 2000, bytes: ?}\n                        $hashvalue :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"partkey\"), 0))\n                        partkey :\u003d tpch:partkey\n                - LocalExchange[SINGLE] () \u003d\u003e orderkey_2:bigint, partkey_3:bigint, $hashvalue_9:bigint\n                        Cost: {rows: 30087, bytes: ?}\n                    - ScanFilterProject[table \u003d local:tpch:lineitem:sf0.01, originalConstraint \u003d (\u0027R\u0027 \u003d \"returnflag\"), filterPredicate \u003d (\"returnflag\" \u003d \u0027R\u0027)] \u003d\u003e [orderkey_2:bigint, partkey_3:bigint, $hashvalue_10:bigint]\n                            Cost: {rows: 60175, bytes: ?}/{rows: 30087, bytes: ?}/{rows: 30087, bytes: ?}\n                            $hashvalue_10 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"partkey_3\"), 0))\n                            orderkey_2 :\u003d tpch:orderkey\n                            partkey_3 :\u003d tpch:partkey\n                            returnflag :\u003d tpch:returnflag\n        - LocalExchange[SINGLE] () \u003d\u003e orderkey:bigint, $hashvalue_12:bigint\n                Cost: {rows: 7500, bytes: ?}\n            - ScanFilterProject[table \u003d local:tpch:orders:sf0.01, originalConstraint \u003d (\"shippriority\" \u003e\u003d 10), filterPredicate \u003d (\"shippriority\" \u003e\u003d 10)] \u003d\u003e [orderkey:bigint, $hashvalue_13:bigint]\n                    Cost: {rows: 15000, bytes: ?}/{rows: 7500, bytes: ?}/{rows: 7500, bytes: ?}\n                    $hashvalue_13 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"orderkey\"), 0))\n                    orderkey :\u003d tpch:orderkey\n                    shippriority :\u003d tpch:shippriority\n\n]",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Plan does not match, expected [\n\n- anyTree\n    - node(JoinNode)\n        JoinMatcher{equiCriteria\u003d[L_ORDERKEY \u003d O_ORDERKEY], dynamicFilter\u003dOptional.empty}\n        - anyTree\n            - node(JoinNode)\n                JoinMatcher{equiCriteria\u003d[P_PARTKEY \u003d L_PARTKEY], filter\u003d(\"P_NAME\" \u003c CAST(\"L_COMMENT\" AS varchar(55))), dynamicFilter\u003dOptional.empty}\n                - anyTree\n                    - node(TableScanNode)\n                        TableScanMatcher{expectedTableName\u003dpart}\n                        bind P_PARTKEY -\u003e Column part:partkey\n                        bind P_NAME -\u003e Column part:name\n                - anyTree\n                    - node(FilterNode)\n                        FilterMatcher{predicate\u003d((\"L_PARTKEY\" \u003c\u003e \"L_ORDERKEY\") AND (\"L_ORDERKEY\" \u003d \"$INTERNAL$DEFERRED_SYMBOL_REFERENCE\"(\"128\", \"dynamic_filter_orderkey\")))}\n                        - node(TableScanNode)\n                            TableScanMatcher{expectedTableName\u003dlineitem}\n                            bind L_PARTKEY -\u003e Column lineitem:partkey\n                            bind L_ORDERKEY -\u003e Column lineitem:orderkey\n                            bind L_COMMENT -\u003e Column lineitem:comment\n        - anyTree\n            - node(TableScanNode)\n                TableScanMatcher{expectedTableName\u003dorders}\n                bind O_ORDERKEY -\u003e Column orders:orderkey\n\n] but found [\n\n- Output[orderkey] \u003d\u003e [orderkey_2:bigint]\n        Cost: {rows: 120350, bytes: ?}\n        orderkey :\u003d orderkey_2\n    - InnerJoin[(\"orderkey_2\" \u003d \"orderkey\")][$hashvalue_11, $hashvalue_12] \u003d\u003e [orderkey_2:bigint]\n            Cost: {rows: 120350, bytes: ?}\n        - Project[] \u003d\u003e [orderkey_2:bigint, $hashvalue_11:bigint]\n                Cost: {rows: 60175, bytes: ?}\n                $hashvalue_11 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"orderkey_2\"), 0))\n            - InnerJoin[(\"partkey\" \u003d \"partkey_3\") AND (\"name\" \u003c CAST(\"comment_4\" AS varchar(55)))][$hashvalue, $hashvalue_9] \u003d\u003e [orderkey_2:bigint]\n                    Cost: {rows: 60175, bytes: ?}\n                - ScanProject[table \u003d local:tpch:part:sf0.01, originalConstraint \u003d true] \u003d\u003e [partkey:bigint, name:varchar(55), $hashvalue:bigint]\n                        Cost: {rows: 2000, bytes: ?}/{rows: 2000, bytes: ?}\n                        $hashvalue :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"partkey\"), 0))\n                        partkey :\u003d tpch:partkey\n                        name :\u003d tpch:name\n                - LocalExchange[SINGLE] () \u003d\u003e orderkey_2:bigint, partkey_3:bigint, comment_4:varchar(44), $hashvalue_9:bigint\n                        Cost: {rows: 30087, bytes: ?}\n                    - ScanFilterProject[table \u003d local:tpch:lineitem:sf0.01, originalConstraint \u003d true, filterPredicate \u003d (\"partkey_3\" \u003c\u003e \"orderkey_2\")] \u003d\u003e [orderkey_2:bigint, partkey_3:bigint, comment_4:varchar(44), $hashvalue_10:bigint]\n                            Cost: {rows: 60175, bytes: ?}/{rows: 30087, bytes: ?}/{rows: 30087, bytes: ?}\n                            $hashvalue_10 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"partkey_3\"), 0))\n                            orderkey_2 :\u003d tpch:orderkey\n                            partkey_3 :\u003d tpch:partkey\n                            comment_4 :\u003d tpch:comment\n        - LocalExchange[SINGLE] () \u003d\u003e orderkey:bigint, $hashvalue_12:bigint\n                Cost: {rows: 15000, bytes: ?}\n            - ScanProject[table \u003d local:tpch:orders:sf0.01, originalConstraint \u003d true] \u003d\u003e [orderkey:bigint, $hashvalue_13:bigint]\n                    Cost: {rows: 15000, bytes: ?}/{rows: 15000, bytes: ?}\n                    $hashvalue_13 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"orderkey\"), 0))\n                    orderkey :\u003d tpch:orderkey\n\n] which resolves to [\n\n- Output[orderkey] \u003d\u003e [orderkey_2:bigint]\n        Cost: {rows: 120350, bytes: ?}\n        orderkey :\u003d orderkey_2\n    - InnerJoin[(\"orderkey_2\" \u003d \"orderkey\")][$hashvalue_11, $hashvalue_12] \u003d\u003e [orderkey_2:bigint]\n            Cost: {rows: 120350, bytes: ?}\n        - Project[] \u003d\u003e [orderkey_2:bigint, $hashvalue_11:bigint]\n                Cost: {rows: 60175, bytes: ?}\n                $hashvalue_11 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"orderkey_2\"), 0))\n            - InnerJoin[(\"partkey\" \u003d \"partkey_3\") AND (\"name\" \u003c CAST(\"comment_4\" AS varchar(55)))][$hashvalue, $hashvalue_9] \u003d\u003e [orderkey_2:bigint]\n                    Cost: {rows: 60175, bytes: ?}\n                - ScanProject[table \u003d local:tpch:part:sf0.01, originalConstraint \u003d true] \u003d\u003e [partkey:bigint, name:varchar(55), $hashvalue:bigint]\n                        Cost: {rows: 2000, bytes: ?}/{rows: 2000, bytes: ?}\n                        $hashvalue :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"partkey\"), 0))\n                        partkey :\u003d tpch:partkey\n                        name :\u003d tpch:name\n                - LocalExchange[SINGLE] () \u003d\u003e orderkey_2:bigint, partkey_3:bigint, comment_4:varchar(44), $hashvalue_9:bigint\n                        Cost: {rows: 30087, bytes: ?}\n                    - ScanFilterProject[table \u003d local:tpch:lineitem:sf0.01, originalConstraint \u003d true, filterPredicate \u003d (\"partkey_3\" \u003c\u003e \"orderkey_2\")] \u003d\u003e [orderkey_2:bigint, partkey_3:bigint, comment_4:varchar(44), $hashvalue_10:bigint]\n                            Cost: {rows: 60175, bytes: ?}/{rows: 30087, bytes: ?}/{rows: 30087, bytes: ?}\n                            $hashvalue_10 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"partkey_3\"), 0))\n                            orderkey_2 :\u003d tpch:orderkey\n                            partkey_3 :\u003d tpch:partkey\n                            comment_4 :\u003d tpch:comment\n        - LocalExchange[SINGLE] () \u003d\u003e orderkey:bigint, $hashvalue_12:bigint\n                Cost: {rows: 15000, bytes: ?}\n            - ScanProject[table \u003d local:tpch:orders:sf0.01, originalConstraint \u003d true] \u003d\u003e [orderkey:bigint, $hashvalue_13:bigint]\n                    Cost: {rows: 15000, bytes: ?}/{rows: 15000, bytes: ?}\n                    $hashvalue_13 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"orderkey\"), 0))\n                    orderkey :\u003d tpch:orderkey\n\n]",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.sql.planner.TestLogicalPlanner",
      "failingMethods": [
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testUncorrelatedSubqueries"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Plan does not match, expected [\n\n- anyTree\n    - node(JoinNode)\n        JoinMatcher{equiCriteria\u003d[X \u003d Y], dynamicFilter\u003dOptional.empty}\n        - node(ProjectNode)\n            - node(FilterNode)\n                - node(TableScanNode)\n                    TableScanMatcher{expectedTableName\u003dorders}\n                    bind X -\u003e Column orders:orderkey\n        - node(ProjectNode)\n            - node(EnforceSingleRowNode)\n                - anyTree\n                    - node(TableScanNode)\n                        TableScanMatcher{expectedTableName\u003dlineitem}\n                        bind Y -\u003e Column lineitem:orderkey\n\n] but found [\n\n- Output[orderkey, custkey, orderstatus, totalprice, orderdate, orderpriority, clerk, shippriority, comment] \u003d\u003e [orderkey:bigint, custkey:bigint, orderstatus:varchar(1), totalprice:double, orderdate:date, orderpriority:varchar(15), clerk:varchar(15), shippriority:integer, comment:varchar(79)]\n        Cost: {rows: 30000, bytes: ?}\n    - InnerJoin[(\"orderkey\" \u003d \"orderkey_0\")][$hashvalue, $hashvalue_42] \u003d\u003e [orderkey:bigint, custkey:bigint, orderstatus:varchar(1), totalprice:double, orderdate:date, orderpriority:varchar(15), clerk:varchar(15), shippriority:integer, comment:varchar(79)]\n            Cost: {rows: 30000, bytes: ?}\n        - ScanProject[table \u003d local:tpch:orders:sf0.01, originalConstraint \u003d true] \u003d\u003e [orderkey:bigint, custkey:bigint, orderstatus:varchar(1), totalprice:double, orderdate:date, orderpriority:varchar(15), clerk:varchar(15), shippriority:integer, comment:varchar(79), $hashvalue:bigint]\n                Cost: {rows: 15000, bytes: ?}/{rows: 15000, bytes: ?}\n                $hashvalue :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"orderkey\"), 0))\n                orderkey :\u003d tpch:orderkey\n                custkey :\u003d tpch:custkey\n                orderstatus :\u003d tpch:orderstatus\n                totalprice :\u003d tpch:totalprice\n                orderdate :\u003d tpch:orderdate\n                orderpriority :\u003d tpch:orderpriority\n                clerk :\u003d tpch:clerk\n                shippriority :\u003d tpch:shippriority\n                comment :\u003d tpch:comment\n        - Project[] \u003d\u003e [orderkey_0:bigint, $hashvalue_42:bigint]\n                Cost: {rows: 1, bytes: ?}\n                $hashvalue_42 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"orderkey_0\"), 0))\n            - Scalar \u003d\u003e [orderkey_0:bigint]\n                    Cost: {rows: 1, bytes: ?}\n                - TopN[1 by (orderkey_0 ASC_NULLS_LAST)] \u003d\u003e [orderkey_0:bigint]\n                    - LocalExchange[SINGLE] () \u003d\u003e orderkey_0:bigint\n                        - TopN[1 by (orderkey_0 ASC_NULLS_LAST)] \u003d\u003e [orderkey_0:bigint]\n                            - TableScan[local:tpch:lineitem:sf0.01, originalConstraint \u003d true] \u003d\u003e [orderkey_0:bigint]\n                                    Cost: {rows: 60175, bytes: ?}\n                                    orderkey_0 :\u003d tpch:orderkey\n\n] which resolves to [\n\n- Output[orderkey, custkey, orderstatus, totalprice, orderdate, orderpriority, clerk, shippriority, comment] \u003d\u003e [orderkey:bigint, custkey:bigint, orderstatus:varchar(1), totalprice:double, orderdate:date, orderpriority:varchar(15), clerk:varchar(15), shippriority:integer, comment:varchar(79)]\n        Cost: {rows: 30000, bytes: ?}\n    - InnerJoin[(\"orderkey\" \u003d \"orderkey_0\")][$hashvalue, $hashvalue_42] \u003d\u003e [orderkey:bigint, custkey:bigint, orderstatus:varchar(1), totalprice:double, orderdate:date, orderpriority:varchar(15), clerk:varchar(15), shippriority:integer, comment:varchar(79)]\n            Cost: {rows: 30000, bytes: ?}\n        - ScanProject[table \u003d local:tpch:orders:sf0.01, originalConstraint \u003d true] \u003d\u003e [orderkey:bigint, custkey:bigint, orderstatus:varchar(1), totalprice:double, orderdate:date, orderpriority:varchar(15), clerk:varchar(15), shippriority:integer, comment:varchar(79), $hashvalue:bigint]\n                Cost: {rows: 15000, bytes: ?}/{rows: 15000, bytes: ?}\n                $hashvalue :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"orderkey\"), 0))\n                orderkey :\u003d tpch:orderkey\n                custkey :\u003d tpch:custkey\n                orderstatus :\u003d tpch:orderstatus\n                totalprice :\u003d tpch:totalprice\n                orderdate :\u003d tpch:orderdate\n                orderpriority :\u003d tpch:orderpriority\n                clerk :\u003d tpch:clerk\n                shippriority :\u003d tpch:shippriority\n                comment :\u003d tpch:comment\n        - Project[] \u003d\u003e [orderkey_0:bigint, $hashvalue_42:bigint]\n                Cost: {rows: 1, bytes: ?}\n                $hashvalue_42 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"orderkey_0\"), 0))\n            - Scalar \u003d\u003e [orderkey_0:bigint]\n                    Cost: {rows: 1, bytes: ?}\n                - TopN[1 by (orderkey_0 ASC_NULLS_LAST)] \u003d\u003e [orderkey_0:bigint]\n                    - LocalExchange[SINGLE] () \u003d\u003e orderkey_0:bigint\n                        - TopN[1 by (orderkey_0 ASC_NULLS_LAST)] \u003d\u003e [orderkey_0:bigint]\n                            - TableScan[local:tpch:lineitem:sf0.01, originalConstraint \u003d true] \u003d\u003e [orderkey_0:bigint]\n                                    Cost: {rows: 60175, bytes: ?}\n                                    orderkey_0 :\u003d tpch:orderkey\n\n]",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ]
}