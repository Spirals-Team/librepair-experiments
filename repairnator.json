{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "wso2-extensions/identity-inbound-auth-oauth",
  "failingModule": "/root/workspace/wso2-extensions/identity-inbound-auth-oauth/399040331/components/org.wso2.carbon.identity.oauth",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 17,
  "error-types": [
    "org.wso2.carbon.identity.oauth2.IdentityOAuth2Exception",
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 2087,
  "failing-test-cases": [
    {
      "className": "org.wso2.carbon.identity.openidconnect.DefaultIDTokenBuilderTest",
      "failingMethods": [
        "testBuildIDToken"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.wso2.carbon.identity.oauth2.IdentityOAuth2Exception",
          "failureDetail": "Error while getting Resident Identity Provider of \u0027carbon.super\u0027 tenant.",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "org.wso2.carbon.identity.openidconnect.DefaultOIDCClaimsCallbackHandlerTest",
      "failingMethods": [
        "testHandleCustomClaimsWithoutClaimsInUserAttributes",
        "testHandleCustomClaimsWithOAuthTokenReqMsgCtxtWithPunctuationMarkInOIDCClaim",
        "testHandleCustomClaimsWithOAuthTokenReqMsgCtxtWithSpecialFormattedClaims",
        "testHandleCustomClaimsWithOAuthTokenReqMsgCtxtAddressClaim",
        "testHandleCustomClaimsWithOAuthTokenReqMsgCtxtWithOIDCScopes",
        "testHandleCustomClaimsWithoutClaimsInRefreshFlow",
        "testHandleCustomClaimsWithOAuthTokenReqMsgCtxtWithSpRoleMappings"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected object to not be null",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected object to not be null",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected object to not be null",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected object to not be null",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected object to not be null",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected object to not be null",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected object to not be null",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected object to not be null",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected object to not be null",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected object to not be null",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected object to not be null",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected object to not be null",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "JWT custom claim list is empty. Custom claim handling failed in refresh flow expected [false] but found [true]",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "JWT custom claim list is empty. Custom claim handling failed in refresh flow expected [false] but found [true]",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "JWT custom claim handling failed expected [false] but found [true]",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "JWT custom claim handling failed expected [false] but found [true]",
          "isError": false
        }
      ],
      "nbFailures": 16,
      "nbErrors": 0
    }
  ]
}