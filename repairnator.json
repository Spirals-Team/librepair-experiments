{
  "totalNumberSkippingTests": 1,
  "bugType": "only_fail",
  "totalNumberErroringTests": 16,
  "repo": "CorfuDB/CorfuDB",
  "bugCommit": "https://github.com/CorfuDB/CorfuDB/compare/45ecd7418caf...80be95ba3c27",
  "failingModule": "/root/workspace/CorfuDB/CorfuDB/328602902/test",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 3,
  "error-types": [
    "org.corfudb.test.concurrent.ConcurrentScheduler$SchedulerException",
    "java.util.concurrent.CancellationException",
    "java.util.concurrent.CompletionException",
    "java.lang.AssertionError",
    "org.junit.ComparisonFailure"
  ],
  "totalNumberRunningTests": 486,
  "failing-test-cases": [
    {
      "className": "org.corfudb.runtime.concurrent.StreamSeekAtomicityTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.corfudb.runtime.concurrent.StreamSeekAtomicityTest#ckCommitAtomicity3",
        "org.corfudb.runtime.concurrent.StreamSeekAtomicityTest#ckCommitAtomicity2",
        "org.corfudb.runtime.concurrent.StreamSeekAtomicityTest#ckCommitAtomicity"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CancellationException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CancellationException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CancellationException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.corfudb.runtime.object.CompileProxyTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.corfudb.runtime.object.CompileProxyTest#testCorfuMapConcurrency",
        "org.corfudb.runtime.object.CompileProxyTest#testObjectCompoundWriteConcurrency",
        "org.corfudb.runtime.object.CompileProxyTest#testObjectCounterCASConcurrency"
      ],
      "failures": [
        {
          "failureName": "org.corfudb.test.concurrent.ConcurrentScheduler$SchedulerException",
          "failureDetail": "96: CancellationException\n97: CancellationException\n34: CancellationException\n98: CancellationException\n99: CancellationException\n89: CancellationException\n92: CancellationException\n93: CancellationException\n94: CancellationException\n95: CancellationException",
          "isError": true
        },
        {
          "failureName": "org.corfudb.test.concurrent.ConcurrentScheduler$SchedulerException",
          "failureDetail": "21: CancellationException\n23: CancellationException\n29: CancellationException\n30: CancellationException\n31: CancellationException\n34: CancellationException\n35: CancellationException\n36: CancellationException\n37: CancellationException\n38: CancellationException\n39: CancellationException\n40: CancellationException\n41: CancellationException\n42: CancellationException\n43: CancellationException\n44: CancellationException\n45: CancellationException\n46: CancellationException\n47: CancellationException\n48: CancellationException\n49: CancellationException\n50: CancellationException\n51: CancellationException\n53: CancellationException\n54: CancellationException\n55: CancellationException\n56: CancellationException\n57: CancellationException\n58: CancellationException\n59: CancellationException\n60: CancellationException\n61: CancellationException\n62: CancellationException\n63: CancellationException\n64: CancellationException\n65: CancellationException\n66: CancellationException\n67: CancellationException\n68: CancellationException\n69: CancellationException\n70: CancellationException\n71: CancellationException\n72: CancellationException\n73: CancellationException\n74: CancellationException\n75: CancellationException\n76: CancellationException\n77: CancellationException\n78: CancellationException\n79: CancellationException\n80: CancellationException\n81: CancellationException\n82: CancellationException\n83: CancellationException\n84: CancellationException\n85: CancellationException\n86: CancellationException\n87: CancellationException\n88: CancellationException\n89: CancellationException\n90: CancellationException\n91: CancellationException\n92: CancellationException\n93: CancellationException\n94: CancellationException\n95: CancellationException\n96: CancellationException\n97: CancellationException\n98: CancellationException\n99: CancellationException",
          "isError": true
        },
        {
          "failureName": "org.corfudb.test.concurrent.ConcurrentScheduler$SchedulerException",
          "failureDetail": "0: CancellationException\n1: CancellationException\n2: CancellationException\n3: CancellationException\n4: CancellationException\n5: CancellationException\n6: CancellationException\n7: CancellationException\n8: CancellationException\n9: CancellationException\n10: CancellationException\n11: CancellationException\n12: CancellationException\n13: CancellationException\n14: CancellationException\n15: CancellationException\n16: CancellationException\n17: CancellationException\n18: CancellationException\n19: CancellationException\n20: CancellationException\n21: CancellationException\n22: CancellationException\n23: CancellationException\n24: CancellationException\n25: CancellationException\n26: CancellationException\n27: CancellationException\n28: CancellationException\n29: CancellationException\n30: CancellationException\n31: CancellationException\n32: CancellationException\n33: CancellationException\n34: CancellationException\n35: CancellationException\n36: CancellationException\n37: CancellationException\n38: CancellationException\n39: CancellationException\n40: CancellationException\n41: CancellationException\n42: CancellationException\n43: CancellationException\n44: CancellationException\n45: CancellationException\n46: CancellationException\n47: CancellationException\n48: CancellationException\n49: CancellationException\n50: CancellationException\n51: CancellationException\n52: CancellationException\n53: CancellationException\n54: CancellationException\n55: CancellationException\n56: CancellationException\n57: CancellationException\n58: CancellationException\n59: CancellationException\n60: CancellationException\n61: CancellationException\n62: CancellationException\n63: CancellationException\n64: CancellationException\n65: CancellationException\n66: CancellationException\n67: CancellationException\n68: CancellationException\n69: CancellationException\n70: CancellationException\n71: CancellationException\n72: CancellationException\n73: CancellationException\n74: CancellationException\n75: CancellationException\n76: CancellationException\n77: CancellationException\n78: CancellationException\n79: CancellationException\n80: CancellationException\n81: CancellationException\n82: CancellationException\n83: CancellationException\n84: CancellationException\n85: CancellationException\n86: CancellationException\n87: CancellationException\n88: CancellationException\n89: CancellationException\n90: CancellationException\n91: CancellationException\n92: CancellationException\n93: CancellationException\n94: CancellationException\n95: CancellationException\n96: CancellationException\n97: CancellationException\n98: CancellationException\n99: CancellationException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.corfudb.infrastructure.log.MultiReadWriteLockTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.corfudb.infrastructure.log.MultiReadWriteLockTest#testWriteLockSynchronizes"
      ],
      "failures": [
        {
          "failureName": "org.corfudb.test.concurrent.ConcurrentScheduler$SchedulerException",
          "failureDetail": "0: CancellationException\n1: CancellationException\n2: CancellationException\n3: CancellationException\n4: CancellationException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.collections.CorfuTableTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.corfudb.runtime.collections.CorfuTableTest#canReadWithoutIndexes",
        "org.corfudb.runtime.collections.CorfuTableTest#openingCorfuTableTwice",
        "org.corfudb.runtime.collections.CorfuTableTest#doUpdateIndicesOnRemove"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.corfudb.runtime.object.transactions.UndoTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.corfudb.runtime.object.transactions.UndoTest#canUndoAfterNoUndo"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.collections.SMRMultiLogunitTest",
      "failingMethods": [
        "org.corfudb.runtime.collections.SMRMultiLogunitTest#multiThreadedManyWritesThenRead"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c2\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "org.corfudb.runtime.collections.CorfuMapTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.corfudb.runtime.collections.CorfuMapTest#smrMapCanContainCustomObjects",
        "org.corfudb.runtime.collections.CorfuMapTest#loadsFollowedByGetsConcurrentMultiView",
        "org.corfudb.runtime.collections.CorfuMapTest#canUpdateSingleObjectTransacationallyWhenCached"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.corfudb.runtime.view.replication.ChainReplicationProtocolTest",
      "failingMethods": [
        "org.corfudb.runtime.view.replication.ChainReplicationProtocolTest#failedWriteCanBeRead",
        "org.corfudb.runtime.view.replication.ChainReplicationProtocolTest#failedWriteIsPropagated"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Expecting code to raise a throwable.",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[105, 110, 99, 111, 109, 112, 108, 101, 116, 101]\u003e but was:\u003cnull\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "org.corfudb.runtime.collections.SMRMapTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.corfudb.runtime.collections.SMRMapTest#loadsFollowedByGetsConcurrentMultiView"
      ],
      "failures": [
        {
          "failureName": "org.corfudb.test.concurrent.ConcurrentScheduler$SchedulerException",
          "failureDetail": "0: CancellationException\n1: CancellationException\n2: CancellationException\n3: CancellationException\n4: CancellationException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.corfudb.runtime.collections.FGMapTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.corfudb.runtime.collections.FGMapTest#checkClearCalls"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.CompletionException",
          "failureDetail": "java.util.concurrent.TimeoutException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ]
}