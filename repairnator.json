{
  "totalNumberSkippingTests": 4,
  "bugType": "only_fail",
  "totalNumberErroringTests": 86,
  "repo": "INRIA/spoon",
  "metrics": {
    "FailureNames": [
      "java.lang.IndexOutOfBoundsException",
      "spoon.SpoonException",
      "java.lang.AssertionError",
      "org.junit.ComparisonFailure",
      "spoon.compiler.ModelBuildingException"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 4,
      "ComputeClasspath": 5,
      "ComputeTestDir": 0,
      "BuildProject": 48,
      "InitRepoToPush": 4,
      "ComputeSourceDir": 0,
      "AstorJMut": 15,
      "CloneRepository": 17,
      "CheckoutPatchedBuild": 0,
      "Nopol": 460,
      "NPEFix": 0,
      "TestProject": 141,
      "GatherTestInformation": 0,
      "CommitPatch": 2
    },
    "ReproductionDate": "Jun 26, 2018 10:10:58 PM",
    "BuggyBuildId": 397048789,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/INRIA/spoon/builds/397048789",
    "BuggyBuildDate": "Jun 26, 2018 10:10:39 PM",
    "BugCommit": "fe51c5d4e22a23f6768937f0e679064757483ec6",
    "NbLibraries": 30,
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 1,
    "NbFileApp": 0,
    "NbFileTests": 691,
    "NbCPU": 32,
    "FreeMemory": 4119348480,
    "TotalMemory": 6089080832,
    "AngelicValuesByTest": {
      "spoon/support/visitor/java/JavaReflectionTreeBuilderTest": 0,
      "spoon/test/sourcePosition/SourcePositionTest": 0,
      "spoon/test/methodreference/MethodReferenceTest": 0,
      "spoon/processing/CtGenerationTest": 0,
      "spoon/test/template/TemplateTest": 0,
      "spoon/MavenLauncherTest": 0,
      "spoon/test/type/TypeTest": 0,
      "spoon/reflect/visitor/CtVisitorTest": 0,
      "spoon/reflect/visitor/CtInheritanceScannerMethodsTest": 0,
      "spoon/test/imports/ImportTest": 0,
      "spoon/test/main/MainTest": 0,
      "spoon/test/api/MetamodelTest": 0,
      "spoon/test/architecture/SpoonArchitectureEnforcerTest": 0,
      "spoon/test/casts/CastTest": 0,
      "spoon/test/support/ResourceTest": 0,
      "spoon/test/reference/TypeReferenceTest": 0,
      "spoon/reflect/visitor/CtIteratorTest": 0,
      "spoon/test/annotation/AnnotationTest": 0,
      "spoon/reflect/visitor/CtScannerTest": 0,
      "spoon/test/comment/CommentTest": 0,
      "spoon/reflect/ast/AstCheckerTest": 0,
      "spoon/test/lambda/LambdaTest": 0,
      "spoon/test/prettyprinter/PrinterTest": 0,
      "spoon/test/imports/ImportScannerTest": 0,
      "spoon/reflect/ast/CloneTest": 0,
      "spoon/test/intercession/IntercessionTest": 0,
      "spoon/test/targeted/TargetedExpressionTest": 0,
      "spoon/test/compilation/CompilationTest": 0,
      "spoon/test/api/APITest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 325715840,
      "ComputeClasspath": 379848768,
      "ComputeTestDir": 379848768,
      "BuildProject": 312922216,
      "InitRepoToPush": 381826840,
      "ComputeSourceDir": 379848768,
      "AstorJMut": 4178955752,
      "CloneRepository": 456770976,
      "CheckoutPatchedBuild": 4119348480,
      "Nopol": 4506510296,
      "NPEFix": 4506510296,
      "TestProject": 527481992,
      "GatherTestInformation": 497495056,
      "CommitPatch": 4119348480
    },
    "NbSucceedingTests": 1418,
    "NbFailingTests": 5,
    "NbErroringTests": 86,
    "NbSkippingTests": 4,
    "NbRunningTests": 1509,
    "BugCommitUrl": "http://github.com/INRIA/spoon/commit/fe51c5d4e22a23f6768937f0e679064757483ec6"
  },
  "failingModule": "/root/workspace/INRIA/spoon/397048789",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 5,
  "error-types": [
    "java.lang.IndexOutOfBoundsException",
    "spoon.SpoonException",
    "java.lang.AssertionError",
    "org.junit.ComparisonFailure",
    "spoon.compiler.ModelBuildingException"
  ],
  "totalNumberRunningTests": 1509,
  "failing-test-cases": [
    {
      "className": "spoon.test.api.MetamodelTest",
      "failingMethods": [],
      "erroringMethods": [
        "testRoleOnField",
        "testMetamodelWithoutSources"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 1267",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 1267",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.MavenLauncherTest",
      "failingMethods": [
        "mavenLauncherTestMultiModulesAndVariables",
        "spoonMavenLauncherTest"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Content of classpath: ",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c23\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.imports.ImportTest",
      "failingMethods": [],
      "erroringMethods": [
        "testSortingOfImports"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 25414",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.reflect.ast.AstCheckerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testPushToStackChanges",
        "testAvoidSetCollectionSavedOnAST"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 27740",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 1267",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.casts.CastTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCast2",
        "testTypeAnnotationOnCast",
        "testCast3"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { Class\u003cString\u003e x\u003d(Class\u003cString\u003e) new Object();}};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X\u003cA\u003e {void addConsumedAnnotationType(Class\u003c? extends A\u003e annotationType) {}\n        public void foo() { Class\u003c?\u003e x \u003d null; addConsumedAnnotationType((Class\u003cA\u003e) x);}};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "java.lang.IndexOutOfBoundsException",
          "failureDetail": "Index: 0",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
      "failingMethods": [],
      "erroringMethods": [
        "testShadowModelEqualsNormalModel",
        "testSuperOfActualTypeArgumentsOfReturnTypeOfMethod"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 1267",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 4534",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.reference.TypeReferenceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testToStringEqualityBetweenTwoGenericTypeDifferent"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 7068",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.reflect.visitor.CtScannerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testScannerCallsAllProperties",
        "testScannerContract"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 7277",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 3721",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.sourcePosition.SourcePositionTest",
      "failingMethods": [
        "testSourcePositionStringFragment"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c|1;9|123456789|\n[modifier \u003d |2;2|2|\nname \u003d |4;7|4567]|\u003e but was:\u003c|1;9|123456789|\n[name \u003d |4;7|4567|\nmodifier \u003d |2;2|2]|\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.api.APITest",
      "failingMethods": [],
      "erroringMethods": [
        "testPrintNotAllSourcesWithFilter",
        "testSetterInNodes",
        "testPrintNotAllSourcesWithNames",
        "testPrintNotAllSourcesInCommandLine"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 1688",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 27740",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 1688",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 3721",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.annotation.AnnotationTest",
      "failingMethods": [
        "testOutputGeneratedByTypeAnnotation",
        "testAbstractAllAnnotationProcessor"
      ],
      "erroringMethods": [
        "testUsageOfTypeAnnotationInCast"
      ],
      "failures": [
        {
          "failureName": "java.lang.IndexOutOfBoundsException",
          "failureDetail": "Index: 0, Size: 0",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c29\u003e but was:\u003c28\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile testclasses because Type mismatch: cannot convert from Object to String at /root/workspace/INRIA/spoon/397048789/target/spooned-annotation-output/spoon/test/annotation/testclasses/AnnotationsAppliedOnAnyTypeInAClass.java:12",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.template.TemplateTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCheckBoundTemplate"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 804",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.support.ResourceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testFilteringFolder"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 2713",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.prettyprinter.PrinterTest",
      "failingMethods": [],
      "erroringMethods": [
        "testPrinterTokenListener"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 3866",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.reflect.visitor.CtVisitorTest",
      "failingMethods": [],
      "erroringMethods": [
        "testMethodsInVisitor"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 1267",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testSrcMainJava",
        "testInterfacesAreCtScannable",
        "testSpecPackage",
        "testStaticClasses",
        "metamodelPackageRule",
        "testGoodTestClassNames",
        "testFactorySubFactory",
        "statelessFactory"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 7277",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 1267",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 27740",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 27740",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 4842",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 3721",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 3721",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 27740",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "spoon.test.targeted.TargetedExpressionTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCastWriteWithGenerics"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 912",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.methodreference.MethodReferenceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testNoClasspathSuperExecutable",
        "testReferenceToAJavaUtilClassConstructor",
        "testReferenceBuilderWithComplexGenerics",
        "testReferenceToAConstructor",
        "testReferenceToAnInstanceMethodOfAParticularObject",
        "testGetGenericMethodFromReference",
        "testNoClasspathExecutableReferenceExpression",
        "testReferenceToAnInstanceMethodOfMultiParticularObject",
        "testReferenceToAStaticMethod",
        "testReferenceToAClassParametrizedConstructor",
        "testReferenceToAnInstanceMethodOfAnArbitraryObjectOfAParticularType",
        "testGetGenericExecutableReference",
        "testCompileMethodReferenceGeneratedBySpoon"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 527",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 527",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 527",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 527",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 527",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 527",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 527",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 527",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 527",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 527",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 527",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 527",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 527",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 13
    },
    {
      "className": "spoon.processing.CtGenerationTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGenerateCloneVisitor",
        "testGenerateReplacementVisitor",
        "testGenerateCtBiScanner",
        "testGenerateRoleHandler"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 7277",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 1267",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 7277",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 7277",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.comment.CommentTest",
      "failingMethods": [],
      "erroringMethods": [
        "testDocumentationContract"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 3721",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.imports.ImportScannerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testImportOnSpoon"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 27740",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.type.TypeTest",
      "failingMethods": [],
      "erroringMethods": [
        "testTypeAccessForTypeAccessInInstanceOf",
        "testTypeAccessForDotClass",
        "testIntersectionTypeReferenceInGenericsAndCasts",
        "testTypeAccessOfArrayObjectInFullyQualifiedName",
        "testTypeReferenceInGenericsAndCasts"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 1249",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 1249",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 1249",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 1249",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 1249",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "spoon.reflect.visitor.CtInheritanceScannerMethodsTest",
      "failingMethods": [],
      "erroringMethods": [
        "testMethodsInInheritanceScanner"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 1267",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.reflect.ast.CloneTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCloneMethodsDeclaredInAST",
        "testCopyType",
        "testCloneListener"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 25414",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 1267",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 25414",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.intercession.IntercessionTest",
      "failingMethods": [],
      "erroringMethods": [
        "testSettersAreAllGood"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 3721",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.main.MainTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.main.MainTest"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 27740",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.reflect.visitor.CtIteratorTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCtElementIteration"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 7277",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.lambda.LambdaTest",
      "failingMethods": [],
      "erroringMethods": [
        "testLambdaExpressionWithExpressionBodyAndWithMultiParametersTyped",
        "testInterfaceWithObjectMethods",
        "testLambdaExpressionWithExpressionBodyAndWithMultiParameters",
        "testFieldAccessInLambdaNoClassPathExternal1Example",
        "testLambdaExpressionWithExpressionBodyAndWithParameterTyped",
        "testGetDeclarationOnTypeParameterFromLambda",
        "testLambdaWithPrimitiveParameter",
        "testTypeParameterOfLambdaWithoutType",
        "testTypeParameterWithImplicitArrayType",
        "testEqualsLambdaParameterRef",
        "testLambdaExpressionWithStatementBodyAndWithoutParameters",
        "testLambdaExpressionWithExpressionBodyAndWithoutTypeForParameter",
        "testGetOverriddenMethodWithFunction",
        "testTypeParameterOfLambdaWithoutType2",
        "testLambdaFilter",
        "testTypeAccessInLambdaNoClassPath",
        "testLambdaMethod",
        "testLambdaExpressionInIfConditional",
        "testCompileLambdaGeneratedBySpoon",
        "testBuildExecutableReferenceFromLambda",
        "testFieldAccessInLambdaNoClassPath",
        "testLambdaExpressionWithExpressionBodyAndWithoutParameter",
        "testLambdaExpressionWithStatementBodyAndWithParameter"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 382",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 23
    },
    {
      "className": "spoon.test.compilation.CompilationTest",
      "failingMethods": [],
      "erroringMethods": [
        "testFilterResourcesDir"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Unexpected character \u0027\u003c\u0027 at start of cast expression on offset: 11458",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ]
}