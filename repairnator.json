{
  "totalNumberSkippingTests": 70,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "druid-io/druid",
  "failingModule": "/root/workspace/druid-io/druid/388953921/processing",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 16,
  "error-types": [
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 84109,
  "failing-test-cases": [
    {
      "className": "io.druid.segment.filter.FilterPartitionTest",
      "failingMethods": [
        "testOrPostFilterWithNulls[bitmaps[concise], indexMerger[off-heap memory segment write-out medium], finisher[incremental], optimize[true]]",
        "testOrPostFilterWithNulls[bitmaps[concise], indexMerger[off-heap memory segment write-out medium], finisher[incremental], optimize[false]]",
        "testOrPostFilterWithNulls[bitmaps[concise], indexMerger[tmpFile segment write-out medium], finisher[incremental], optimize[false]]",
        "testOrPostFilterWithNulls[bitmaps[roaring], indexMerger[tmpFile segment write-out medium], finisher[incremental], optimize[false]]",
        "testOrPostFilterWithNulls[bitmaps[roaring], indexMerger[tmpFile segment write-out medium], finisher[incremental], optimize[true]]",
        "testOrPostFilterWithNulls[bitmaps[roaring], indexMerger[off-heap memory segment write-out medium], finisher[incremental], optimize[false]]",
        "testOrPostFilterWithNulls[bitmaps[concise], indexMerger[tmpFile segment write-out medium], finisher[incremental], optimize[true]]",
        "testOrPostFilterWithNulls[bitmaps[roaring], indexMerger[off-heap memory segment write-out medium], finisher[incremental], optimize[true]]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Cursor: (JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim1) \u003d INVALID_VALUE || JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim2) \u003d super-foo) expected:\u003c[7, 9]\u003e but was:\u003c[7]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Cursor: (JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim1) \u003d INVALID_VALUE || JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim2) \u003d super-foo) expected:\u003c[7, 9]\u003e but was:\u003c[7]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Cursor: (JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim1) \u003d INVALID_VALUE || JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim2) \u003d super-foo) expected:\u003c[7, 9]\u003e but was:\u003c[7]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Cursor: (JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim1) \u003d INVALID_VALUE || JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim2) \u003d super-foo) expected:\u003c[7, 9]\u003e but was:\u003c[7]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Cursor: (JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim1) \u003d INVALID_VALUE || JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim2) \u003d super-foo) expected:\u003c[7, 9]\u003e but was:\u003c[7]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Cursor: (JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim1) \u003d INVALID_VALUE || JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim2) \u003d super-foo) expected:\u003c[7, 9]\u003e but was:\u003c[7]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Cursor: (JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim1) \u003d INVALID_VALUE || JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim2) \u003d super-foo) expected:\u003c[7, 9]\u003e but was:\u003c[7]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Cursor: (JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim1) \u003d INVALID_VALUE || JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim2) \u003d super-foo) expected:\u003c[7, 9]\u003e but was:\u003c[7]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Cursor: (JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim1) \u003d INVALID_VALUE || JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim2) \u003d super-foo) expected:\u003c[7, 9]\u003e but was:\u003c[7]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Cursor: (JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim1) \u003d INVALID_VALUE || JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim2) \u003d super-foo) expected:\u003c[7, 9]\u003e but was:\u003c[7]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Cursor: (JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim1) \u003d INVALID_VALUE || JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim2) \u003d super-foo) expected:\u003c[7, 9]\u003e but was:\u003c[7]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Cursor: (JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim1) \u003d INVALID_VALUE || JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim2) \u003d super-foo) expected:\u003c[7, 9]\u003e but was:\u003c[7]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Cursor: (JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim1) \u003d INVALID_VALUE || JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim2) \u003d super-foo) expected:\u003c[7, 9]\u003e but was:\u003c[7]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Cursor: (JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim1) \u003d INVALID_VALUE || JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim2) \u003d super-foo) expected:\u003c[7, 9]\u003e but was:\u003c[7]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Cursor: (JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim1) \u003d INVALID_VALUE || JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim2) \u003d super-foo) expected:\u003c[7, 9]\u003e but was:\u003c[7]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Cursor: (JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim1) \u003d INVALID_VALUE || JavascriptDimExtractionFn{function\u003d\u0027function(str) { return \u0027super-\u0027 + str; }\u0027}(dim2) \u003d super-foo) expected:\u003c[7, 9]\u003e but was:\u003c[7]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 16,
      "nbErrors": 0
    }
  ]
}