{
  "totalNumberSkippingTests": 84,
  "bugType": "only_fail",
  "totalNumberErroringTests": 6,
  "repo": "apache/nifi",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 17,
      "ComputeClasspath": 4,
      "ComputeTestDir": 0,
      "ResolveDependency": 24,
      "BuildProject": 866,
      "NPERepair": 20,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 41,
      "CloneRepository": 26,
      "NopolRepair": 40,
      "CheckoutPatchedBuild": 0,
      "TestProject": 735,
      "GatherTestInformation": 1,
      "PushIncriminatedBuild": 15,
      "AstorRepair": 268,
      "CommitPatch": 50
    },
    "FailureNames": [
      "java.io.IOException",
      "java.lang.AssertionError",
      "java.lang.NullPointerException"
    ],
    "NbFailingTests": 15,
    "BugCommitUrl": "http://github.com/apache/nifi/commit/b11a733df48fd866b991cd444aaee7af07fddca0",
    "ReproductionDate": "May 4, 2018 8:12:05 PM",
    "BuggyBuildId": 374991718,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/apache/nifi/builds/374991718",
    "BuggyBuildDate": "May 4, 2018 8:11:54 PM",
    "BugCommit": "b11a733df48fd866b991cd444aaee7af07fddca0",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 3274,
    "NbLibraries": 133,
    "NbFileApp": 0,
    "NbFileTests": 0,
    "NbCPU": 32,
    "FreeMemory": 1982310936,
    "TotalMemory": 2545942528,
    "AngelicValuesByTest": {
      "org/apache/nifi/processors/standard/TestListFile": 0,
      "org/apache/nifi/processors/standard/TestGetFile": 0,
      "org/apache/nifi/processors/standard/TestForkRecord": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 514635480,
      "ComputeClasspath": 286174824,
      "ComputeTestDir": 501758440,
      "ResolveDependency": 426856744,
      "BuildProject": 315048032,
      "NPERepair": 288537472,
      "ComputeSourceDir": 286174824,
      "InitRepoToPush": 407043344,
      "CloneRepository": 347659344,
      "NopolRepair": 1046875792,
      "CheckoutPatchedBuild": 1982310936,
      "TestProject": 269021864,
      "GatherTestInformation": 529707984,
      "PushIncriminatedBuild": 364653016,
      "AstorRepair": 640043056,
      "CommitPatch": 1982310936
    }
  },
  "failingModule": "/root/workspace/apache/nifi/374991718/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 9,
  "error-types": [
    "java.io.IOException",
    "java.lang.AssertionError",
    "java.lang.NullPointerException"
  ],
  "totalNumberRunningTests": 3274,
  "failing-test-cases": [
    {
      "className": "org.apache.nifi.processors.standard.TestListFile",
      "failingMethods": [],
      "erroringMethods": [
        "org.apache.nifi.processors.standard.TestListFile#testFilterHidden",
        "org.apache.nifi.processors.standard.TestListFile#testAttributesSet"
      ],
      "failures": [
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Mount point not found",
          "isError": true
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Mount point not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.apache.nifi.processors.standard.TestForkRecord",
      "failingMethods": [
        "org.apache.nifi.processors.standard.TestForkRecord#testExtractMode",
        "org.apache.nifi.processors.standard.TestForkRecord#testForkExtractComplexWithoutParentFields",
        "org.apache.nifi.processors.standard.TestForkRecord#testForkExtractSimpleWithoutParentFields",
        "org.apache.nifi.processors.standard.TestForkRecord#testForkExtractSimpleWithParentFields",
        "org.apache.nifi.processors.standard.TestForkRecord#testForkExtractNotAnArray",
        "org.apache.nifi.processors.standard.TestForkRecord#testForkExtractNotAnArrayOfRecords",
        "org.apache.nifi.processors.standard.TestForkRecord#testSplitMode",
        "org.apache.nifi.processors.standard.TestForkRecord#testForkExtractComplexWithParentFieldsAndNull",
        "org.apache.nifi.processors.standard.TestForkRecord#testForkExtractComplexWithParentFields"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        }
      ],
      "nbFailures": 9,
      "nbErrors": 0
    },
    {
      "className": "org.apache.nifi.processors.standard.TestGetFile",
      "failingMethods": [],
      "erroringMethods": [
        "org.apache.nifi.processors.standard.TestGetFile#testWithUnreadableDir",
        "org.apache.nifi.processors.standard.TestGetFile#testWithUnwritableDir",
        "org.apache.nifi.processors.standard.TestGetFile#testAttributes",
        "org.apache.nifi.processors.standard.TestGetFile#testWithInaccessibleDir"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    }
  ]
}