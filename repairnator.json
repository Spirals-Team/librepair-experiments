{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "prestodb/presto",
  "metrics": {
    "FailureNames": [
      "java.lang.AssertionError",
      "com.facebook.presto.spi.PrestoException",
      "java.lang.IllegalArgumentException",
      "java.lang.NullPointerException"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 10,
      "ComputeClasspath": 15,
      "ComputeTestDir": 1,
      "ResolveDependency": 372,
      "BuildProject": 2380,
      "NPERepair": 39,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 412,
      "CloneRepository": 52,
      "NopolRepair": 599,
      "CheckoutPatchedBuild": 0,
      "TestProject": 1469,
      "GatherTestInformation": 15,
      "PushIncriminatedBuild": 205,
      "CommitPatch": 230
    },
    "BugCommitUrl": "http://github.com/prestodb/presto/commit/f4aa36d743a67040b4b3f4f75c39d2726922fbf5",
    "NbFailingTests": 23,
    "ReproductionDate": "Aug 18, 2017 10:26:50 PM",
    "BuggyBuildId": 258468426,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/prestodb/presto/builds/258468426",
    "BuggyBuildDate": "Jul 28, 2017 11:28:13 AM",
    "BugCommit": "f4aa36d743a67040b4b3f4f75c39d2726922fbf5",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 3817,
    "NbLibraries": 144,
    "NbFileApp": 6676,
    "NbFileTests": 2174,
    "NbCPU": 4,
    "FreeMemory": 1413354000,
    "TotalMemory": 2165309440,
    "AngelicValuesByTest": {
      "com/facebook/presto/sql/planner/TestLogicalPlanner": 0,
      "com/facebook/presto/sql/planner/TestQuantifiedComparison": 0,
      "com/facebook/presto/sql/planner/TestLambdaCaptureDesugaringRewriter": 0,
      "com/facebook/presto/operator/scalar/TestFailureFunction": 0,
      "com/facebook/presto/sql/planner/optimizations/TestUnionWithReplicatedJoin": 0,
      "com/facebook/presto/memory/TestMemoryPools": 0,
      "com/facebook/presto/sql/planner/optimizations/TestUnion": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 638894496,
      "ComputeClasspath": 1085352520,
      "ComputeTestDir": 381468392,
      "ResolveDependency": 254874112,
      "BuildProject": 184546072,
      "NPERepair": 1095582552,
      "ComputeSourceDir": 1085352520,
      "InitRepoToPush": 855979240,
      "CloneRepository": 954127312,
      "NopolRepair": 1112415248,
      "CheckoutPatchedBuild": 1413354000,
      "TestProject": 161490104,
      "GatherTestInformation": 119530896,
      "PushIncriminatedBuild": 1138347592,
      "CommitPatch": 1413354000
    }
  },
  "failingModule": "/root/workspace/prestodb/presto/258468426/presto-main",
  "hostname": "spirals-repairnator",
  "totalNumberFailingTests": 23,
  "error-types": [
    "java.lang.AssertionError",
    "com.facebook.presto.spi.PrestoException",
    "java.lang.IllegalArgumentException",
    "java.lang.NullPointerException"
  ],
  "totalNumberRunningTests": 3817,
  "failing-test-cases": [
    {
      "className": "com.facebook.presto.operator.scalar.TestFailureFunction",
      "failingMethods": [
        "com.facebook.presto.operator.scalar.TestFailureFunction#testQuery"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "com.facebook.presto.spi.PrestoException",
          "failureDetail": "The optimizer exhausted the time limit of 180000 ms",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.sql.planner.TestLambdaCaptureDesugaringRewriter",
      "failingMethods": [
        "com.facebook.presto.sql.planner.TestLambdaCaptureDesugaringRewriter#testRewriteBasicLambda"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected [\"$INTERNAL$BIND\"(\"a\", (a, x) -\u003e (\"a\" + \"x\"))] but found [\"$INTERNAL$BIND\"(\"a\", (a_0, x) -\u003e (\"a_0\" + \"x\"))]",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.memory.TestMemoryPools",
      "failingMethods": [
        "com.facebook.presto.memory.TestMemoryPools#testBlockingOnUserMemory"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "count():bigint is not a scalar function",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.sql.planner.TestLogicalPlanner",
      "failingMethods": [
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testSymbolsPrunedInCorrelatedInPredicateSource",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testPruneCountAggregationOverScalar",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testSameQualifiedSubqueryIsAppliedOnlyOnce",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testSubqueryPruning",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testCorrelatedInUncorrelatedFiltersPushDown",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testCorrelatedScalarAggregationRewriteToLeftOuterJoin"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "count():bigint is not a scalar function",
          "isError": false
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "count(bigint):bigint is not a scalar function",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT * FROM orders o1 JOIN orders o2 ON o1.orderkey \u003c\u003d ALL(SELECT 1) AND (o1.orderkey \u003c\u003d ALL(SELECT 1) OR o1.orderkey \u003c\u003d ALL(SELECT 1))",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT COUNT(*) FROM (SELECT orderkey IN (SELECT orderkey FROM lineitem WHERE orderkey % 2 \u003d 0) FROM orders)",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "count():bigint is not a scalar function",
          "isError": false
        }
      ],
      "nbFailures": 6,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.sql.planner.TestQuantifiedComparison",
      "failingMethods": [
        "com.facebook.presto.sql.planner.TestQuantifiedComparison#testQuantifiedComparisonEqualAll",
        "com.facebook.presto.sql.planner.TestQuantifiedComparison#testQuantifiedComparisonGreaterEqualAny",
        "com.facebook.presto.sql.planner.TestQuantifiedComparison#testQuantifiedComparisonLessAll",
        "com.facebook.presto.sql.planner.TestQuantifiedComparison#testQuantifiedComparisonNotEqualAny",
        "com.facebook.presto.sql.planner.TestQuantifiedComparison#testQuantifiedComparisonGreaterEqualAll",
        "com.facebook.presto.sql.planner.TestQuantifiedComparison#testQuantifiedComparisonLessSome"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "min(bigint):bigint is not a scalar function",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "max(bigint):bigint is not a scalar function",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "min(bigint):bigint is not a scalar function",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "min(bigint):bigint is not a scalar function",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "max(bigint):bigint is not a scalar function",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "min(bigint):bigint is not a scalar function",
          "isError": false
        }
      ],
      "nbFailures": 6,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.sql.planner.optimizations.TestUnion",
      "failingMethods": [
        "com.facebook.presto.sql.planner.optimizations.TestUnion#testPartialAggregationsWithUnion",
        "com.facebook.presto.sql.planner.optimizations.TestUnion#testAggregationWithUnionAndValues",
        "com.facebook.presto.sql.planner.optimizations.TestUnion#testPartialRollupAggregationsWithUnion",
        "com.facebook.presto.sql.planner.optimizations.TestUnion#testUnionOverSingleNodeAggregationAndUnion"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT regionkey, count(*) FROM (SELECT regionkey FROM nation UNION ALL SELECT * FROM (VALUES 2, 100) t(regionkey)) GROUP BY regionkey",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT orderstatus, sum(orderkey) FROM (SELECT orderkey, orderstatus FROM orders UNION ALL SELECT orderkey, orderstatus FROM orders) x GROUP BY (orderstatus)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT orderstatus, sum(orderkey) FROM (SELECT orderkey, orderstatus FROM orders UNION ALL SELECT orderkey, orderstatus FROM orders) x GROUP BY ROLLUP (orderstatus)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT count(*) FROM (SELECT 1 FROM nation GROUP BY regionkey UNION ALL (   SELECT 1 FROM nation    UNION ALL    SELECT 1 FROM nation))",
          "isError": false
        }
      ],
      "nbFailures": 4,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.sql.planner.optimizations.TestUnionWithReplicatedJoin",
      "failingMethods": [
        "com.facebook.presto.sql.planner.optimizations.TestUnionWithReplicatedJoin#testPartialRollupAggregationsWithUnion",
        "com.facebook.presto.sql.planner.optimizations.TestUnionWithReplicatedJoin#testAggregationWithUnionAndValues",
        "com.facebook.presto.sql.planner.optimizations.TestUnionWithReplicatedJoin#testPartialAggregationsWithUnion",
        "com.facebook.presto.sql.planner.optimizations.TestUnionWithReplicatedJoin#testUnionOverSingleNodeAggregationAndUnion"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT regionkey, count(*) FROM (SELECT regionkey FROM nation UNION ALL SELECT * FROM (VALUES 2, 100) t(regionkey)) GROUP BY regionkey",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT orderstatus, sum(orderkey) FROM (SELECT orderkey, orderstatus FROM orders UNION ALL SELECT orderkey, orderstatus FROM orders) x GROUP BY (orderstatus)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT orderstatus, sum(orderkey) FROM (SELECT orderkey, orderstatus FROM orders UNION ALL SELECT orderkey, orderstatus FROM orders) x GROUP BY ROLLUP (orderstatus)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT count(*) FROM (SELECT 1 FROM nation GROUP BY regionkey UNION ALL (   SELECT 1 FROM nation    UNION ALL    SELECT 1 FROM nation))",
          "isError": false
        }
      ],
      "nbFailures": 4,
      "nbErrors": 0
    }
  ]
}