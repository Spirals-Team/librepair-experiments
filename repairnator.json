{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 6,
  "repo": "dylanben/ipi-java-340-ex",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 2,
      "ComputeTestDir": 0,
      "ResolveDependency": 15,
      "BuildProject": 9,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 1,
      "CloneRepository": 1,
      "NopolRepair": 0,
      "CheckoutPatchedBuild": 0,
      "TestProject": 7,
      "GatherTestInformation": 0,
      "PushIncriminatedBuild": 3,
      "AstorRepair": 8,
      "CommitPatch": 4
    },
    "FailureNames": [
      "org.springframework.dao.InvalidDataAccessResourceUsageException"
    ],
    "NbFailingTests": 6,
    "BugCommitUrl": "http://github.com/dylanben/ipi-java-340-ex/commit/2ebf432f07f76bc2082088401ab500967c0ef5e6",
    "ReproductionDate": "Mar 1, 2018 3:18:12 PM",
    "BuggyBuildId": 347782779,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/dylanben/ipi-java-340-ex/builds/347782779",
    "BuggyBuildDate": "Mar 1, 2018 3:18:01 PM",
    "BugCommit": "2ebf432f07f76bc2082088401ab500967c0ef5e6",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 22,
    "NbLibraries": 93,
    "NbFileApp": 36,
    "NbFileTests": 18,
    "NbCPU": 32,
    "FreeMemory": 707588624,
    "TotalMemory": 908066816,
    "AngelicValuesByTest": {
      "com/ipiecoles/java/java340/repository/EmployeRepositoryTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 866828872,
      "ComputeClasspath": 533292736,
      "ComputeTestDir": 675027280,
      "ResolveDependency": 654805144,
      "BuildProject": 648650160,
      "NPERepair": 535930064,
      "ComputeSourceDir": 533292736,
      "InitRepoToPush": 585751872,
      "CloneRepository": 872103208,
      "NopolRepair": 742887928,
      "CheckoutPatchedBuild": 707588624,
      "TestProject": 636738488,
      "GatherTestInformation": 627654960,
      "PushIncriminatedBuild": 535930064,
      "AstorRepair": 848951568,
      "CommitPatch": 707588624
    }
  },
  "bugCommit": "https://github.com/dylanben/ipi-java-340-ex/compare/35802aec0b15...2ebf432f07f7",
  "failingModule": "/root/workspace/dylanben/ipi-java-340-ex/347782779",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 0,
  "error-types": [
    "org.springframework.dao.InvalidDataAccessResourceUsageException"
  ],
  "totalNumberRunningTests": 22,
  "failing-test-cases": [
    {
      "className": "com.ipiecoles.java.java340.repository.EmployeRepositoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "com.ipiecoles.java.java340.repository.EmployeRepositoryTest#testFindByNomOrPrenomAllIgnoreCasePrenom",
        "com.ipiecoles.java.java340.repository.EmployeRepositoryTest#findEmployePlusRichesWith100d",
        "com.ipiecoles.java.java340.repository.EmployeRepositoryTest#findEmployePlusRichesWith4500d"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.InvalidDataAccessResourceUsageException",
          "failureDetail": "could not prepare statement; SQL [select employe0_.id as id1_1_, employe0_.dateEmbauche as dateEmba2_1_, employe0_.matricule as matricul3_1_, employe0_.nom as nom4_1_, employe0_.prenom as prenom5_1_, employe0_.salaire as salaire6_1_, employe0_1_.caAnnuel as caAnnuel1_0_, employe0_1_.performance as performa2_0_, employe0_3_.grade as grade1_3_, employe0_3_.manager_id as manager_3_3_, case when employe0_1_.id is not null then 1 when employe0_2_.id is not null then 2 when employe0_3_.id is not null then 3 when employe0_.id is not null then 0 end as clazz_ from Employe employe0_ left outer join Commercial employe0_1_ on employe0_.id\u003demploye0_1_.id left outer join Manager employe0_2_ on employe0_.id\u003demploye0_2_.id left outer join Technicien employe0_3_ on employe0_.id\u003demploye0_3_.id]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.InvalidDataAccessResourceUsageException",
          "failureDetail": "could not prepare statement; SQL [select employe0_.id as id1_1_, employe0_.dateEmbauche as dateEmba2_1_, employe0_.matricule as matricul3_1_, employe0_.nom as nom4_1_, employe0_.prenom as prenom5_1_, employe0_.salaire as salaire6_1_, employe0_1_.caAnnuel as caAnnuel1_0_, employe0_1_.performance as performa2_0_, employe0_3_.grade as grade1_3_, employe0_3_.manager_id as manager_3_3_, case when employe0_1_.id is not null then 1 when employe0_2_.id is not null then 2 when employe0_3_.id is not null then 3 when employe0_.id is not null then 0 end as clazz_ from Employe employe0_ left outer join Commercial employe0_1_ on employe0_.id\u003demploye0_1_.id left outer join Manager employe0_2_ on employe0_.id\u003demploye0_2_.id left outer join Technicien employe0_3_ on employe0_.id\u003demploye0_3_.id]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.InvalidDataAccessResourceUsageException",
          "failureDetail": "could not prepare statement; SQL [select employe0_.id as id1_1_, employe0_.dateEmbauche as dateEmba2_1_, employe0_.matricule as matricul3_1_, employe0_.nom as nom4_1_, employe0_.prenom as prenom5_1_, employe0_.salaire as salaire6_1_, employe0_1_.caAnnuel as caAnnuel1_0_, employe0_1_.performance as performa2_0_, employe0_3_.grade as grade1_3_, employe0_3_.manager_id as manager_3_3_, case when employe0_1_.id is not null then 1 when employe0_2_.id is not null then 2 when employe0_3_.id is not null then 3 when employe0_.id is not null then 0 end as clazz_ from Employe employe0_ left outer join Commercial employe0_1_ on employe0_.id\u003demploye0_1_.id left outer join Manager employe0_2_ on employe0_.id\u003demploye0_2_.id left outer join Technicien employe0_3_ on employe0_.id\u003demploye0_3_.id]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.InvalidDataAccessResourceUsageException",
          "failureDetail": "could not prepare statement; SQL [select employe0_.id as id1_1_, employe0_.dateEmbauche as dateEmba2_1_, employe0_.matricule as matricul3_1_, employe0_.nom as nom4_1_, employe0_.prenom as prenom5_1_, employe0_.salaire as salaire6_1_, employe0_1_.caAnnuel as caAnnuel1_0_, employe0_1_.performance as performa2_0_, employe0_3_.grade as grade1_3_, employe0_3_.manager_id as manager_3_3_, case when employe0_1_.id is not null then 1 when employe0_2_.id is not null then 2 when employe0_3_.id is not null then 3 when employe0_.id is not null then 0 end as clazz_ from Employe employe0_ left outer join Commercial employe0_1_ on employe0_.id\u003demploye0_1_.id left outer join Manager employe0_2_ on employe0_.id\u003demploye0_2_.id left outer join Technicien employe0_3_ on employe0_.id\u003demploye0_3_.id]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.InvalidDataAccessResourceUsageException",
          "failureDetail": "could not prepare statement; SQL [select employe0_.id as id1_1_, employe0_.dateEmbauche as dateEmba2_1_, employe0_.matricule as matricul3_1_, employe0_.nom as nom4_1_, employe0_.prenom as prenom5_1_, employe0_.salaire as salaire6_1_, employe0_1_.caAnnuel as caAnnuel1_0_, employe0_1_.performance as performa2_0_, employe0_3_.grade as grade1_3_, employe0_3_.manager_id as manager_3_3_, case when employe0_1_.id is not null then 1 when employe0_2_.id is not null then 2 when employe0_3_.id is not null then 3 when employe0_.id is not null then 0 end as clazz_ from Employe employe0_ left outer join Commercial employe0_1_ on employe0_.id\u003demploye0_1_.id left outer join Manager employe0_2_ on employe0_.id\u003demploye0_2_.id left outer join Technicien employe0_3_ on employe0_.id\u003demploye0_3_.id]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.InvalidDataAccessResourceUsageException",
          "failureDetail": "could not prepare statement; SQL [select employe0_.id as id1_1_, employe0_.dateEmbauche as dateEmba2_1_, employe0_.matricule as matricul3_1_, employe0_.nom as nom4_1_, employe0_.prenom as prenom5_1_, employe0_.salaire as salaire6_1_, employe0_1_.caAnnuel as caAnnuel1_0_, employe0_1_.performance as performa2_0_, employe0_3_.grade as grade1_3_, employe0_3_.manager_id as manager_3_3_, case when employe0_1_.id is not null then 1 when employe0_2_.id is not null then 2 when employe0_3_.id is not null then 3 when employe0_.id is not null then 0 end as clazz_ from Employe employe0_ left outer join Commercial employe0_1_ on employe0_.id\u003demploye0_1_.id left outer join Manager employe0_2_ on employe0_.id\u003demploye0_2_.id left outer join Technicien employe0_3_ on employe0_.id\u003demploye0_3_.id]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    }
  ]
}