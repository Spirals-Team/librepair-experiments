{
  "totalNumberSkippingTests": 240,
  "bugType": "only_fail",
  "totalNumberErroringTests": 1,
  "repo": "joel-costigliola/assertj-core",
  "failingModule": "/root/workspace/joel-costigliola/assertj-core/367302994",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 3,
  "error-types": [
    "org.assertj.core.util.introspection.IntrospectionError",
    "java.lang.AssertionError",
    "org.junit.ComparisonFailure"
  ],
  "totalNumberRunningTests": 11665,
  "failing-test-cases": [
    {
      "className": "org.assertj.core.error.NoElementsShouldSatisfy_create_Test",
      "failingMethods": [
        "org.assertj.core.error.NoElementsShouldSatisfy_create_Test#should_create_error_message",
        "org.assertj.core.error.NoElementsShouldSatisfy_create_Test#should_create_error_message_any"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...[Test] \nExpecting no[ne] element of:\n  \u003c[\"Lu...\u003e but was:\u003c...[Test] \nExpecting no[] element of:\n  \u003c[\"Lu...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...[Test] \nExpecting no[ne] element of:\n  \u003c[\"Lu...\u003e but was:\u003c...[Test] \nExpecting no[] element of:\n  \u003c[\"Lu...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "org.assertj.core.internal.iterables.Iterables_assertNoneSatisfy_Test",
      "failingMethods": [
        "org.assertj.core.internal.iterables.Iterables_assertNoneSatisfy_Test#should_fail_according_to_requirements"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpecting:\n \u003c\"\nExpecting no element of:\n  \u003c[\"Luke\", \"Leia\", \"Yoda\"]\u003e\nto satisfy the given assertions requirements but one did.\"\u003e\nto contain:\n \u003c\"Expecting none element of:\"\u003e ",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "org.assertj.core.util.introspection.PropertyOrFieldSupport_getValueOf_Test",
      "failingMethods": [],
      "erroringMethods": [
        "org.assertj.core.util.introspection.PropertyOrFieldSupport_getValueOf_Test#should_extract_private_field_values_as_no_property_matches_given_name"
      ],
      "failures": [
        {
          "failureName": "org.assertj.core.util.introspection.IntrospectionError",
          "failureDetail": "\nCan\u0027t find any field or property with name \u0027city\u0027.\nError when introspecting properties was :\n- No getter for property \u0027city\u0027 in org.assertj.core.test.Employee \nError when introspecting fields was :\n- Unable to obtain the value of the field \u003c\u0027city\u0027\u003e from \u003cEmployee[id\u003d1, name\u003dName[first\u003d\u0027Yoda\u0027, last\u003d\u0027null\u0027], age\u003d800]\u003e, check that field is public.",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ]
}