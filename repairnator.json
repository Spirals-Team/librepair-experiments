{
  "totalNumberSkippingTests": 117,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "UniversityFinalProjects/TorrentX",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 3,
      "ComputeTestDir": 0,
      "ResolveDependency": 47,
      "BuildProject": 10,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 1,
      "CloneRepository": 2,
      "NopolRepair": 23,
      "CheckoutPatchedBuild": 0,
      "TestProject": 7,
      "GatherTestInformation": 0,
      "PushIncriminatedBuild": 4,
      "AstorRepair": 2,
      "CommitPatch": 5
    },
    "FailureNames": [
      "java.lang.AssertionError:"
    ],
    "NbFailingTests": 112,
    "BugCommitUrl": "http://github.com/UniversityFinalProjects/TorrentX/commit/659e73c9313311c833c01dd977e3686decfd74d7",
    "ReproductionDate": "May 4, 2018 5:22:19 PM",
    "BuggyBuildId": 374935299,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/UniversityFinalProjects/TorrentX/builds/374935299",
    "BuggyBuildDate": "May 4, 2018 5:16:13 PM",
    "BugCommit": "659e73c9313311c833c01dd977e3686decfd74d7",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 260,
    "NbLibraries": 87,
    "NbFileApp": 166,
    "NbFileTests": 26,
    "NbCPU": 32,
    "FreeMemory": 1651090664,
    "TotalMemory": 2001207296,
    "AngelicValuesByTest": {
      "Scenario: find any tracker, from all the trackers, which response to: connect,announce and scrape requests": 0,
      "Scenario: communicating with collection of trackers which contain a not-responding trackers": 0,
      "Scenario: we connect to all peers and get their bitfield status": 0,
      "| torrent-file-example1/torrent | torrents-test |": 0,
      "| torrent-file-example2/torrent | torrents-test |": 0,
      "| torrent-file-example3/torrent | torrents-test |": 0,
      "| multiple-active-seeders-torrent-1/torrent | torrents-test |": 0,
      "Scenario: communicating with collection of trackers which contain invalid urls of trackers": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 718814544,
      "ComputeClasspath": 693612216,
      "ComputeTestDir": 708026864,
      "ResolveDependency": 611310520,
      "BuildProject": 595482976,
      "NPERepair": 696752016,
      "ComputeSourceDir": 693612216,
      "InitRepoToPush": 517544200,
      "CloneRepository": 722889752,
      "NopolRepair": 1701994432,
      "CheckoutPatchedBuild": 1651090664,
      "TestProject": 567664928,
      "GatherTestInformation": 558314832,
      "PushIncriminatedBuild": 696752016,
      "AstorRepair": 517923472,
      "CommitPatch": 1651090664
    }
  },
  "bugCommit": "https://github.com/UniversityFinalProjects/TorrentX/compare/a31461b84c2e...659e73c93133",
  "failingModule": "/root/workspace/UniversityFinalProjects/TorrentX/374935299",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 112,
  "error-types": [
    "java.lang.AssertionError:"
  ],
  "totalNumberRunningTests": 260,
  "failing-test-cases": [
    {
      "className": "| multiple-active-seeders-torrent-1.torrent | torrents-test |",
      "failingMethods": [
        "| multiple-active-seeders-torrent-1.torrent | torrents-test |#When application save random blocks for torrent: \"multiple-active-seeders-torrent-1.torrent\" in \"torrents-test\" and check it saved",
        "| multiple-active-seeders-torrent-1.torrent | torrents-test |#Then application save random blocks for torrent: \"multiple-active-seeders-torrent-1.torrent\" in \"torrents-test\" and check it saved",
        "| multiple-active-seeders-torrent-1.torrent | torrents-test |#When application create active-torrent for: \"multiple-active-seeders-torrent-1.torrent\",\"torrents-test\"",
        "| multiple-active-seeders-torrent-1.torrent | torrents-test |#| multiple-active-seeders-torrent-1.torrent | torrents-test |"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 20,
      "nbErrors": 0
    },
    {
      "className": "| torrent-file-example2.torrent | torrents-test |",
      "failingMethods": [
        "| torrent-file-example2.torrent | torrents-test |#| torrent-file-example2.torrent | torrents-test |",
        "| torrent-file-example2.torrent | torrents-test |#When application save random blocks for torrent: \"torrent-file-example2.torrent\" in \"torrents-test\" and check it saved",
        "| torrent-file-example2.torrent | torrents-test |#When application create active-torrent for: \"torrent-file-example2.torrent\",\"torrents-test\""
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 14,
      "nbErrors": 0
    },
    {
      "className": "| torrent-file-example3.torrent | torrents-test |",
      "failingMethods": [
        "| torrent-file-example3.torrent | torrents-test |#| torrent-file-example3.torrent | torrents-test |",
        "| torrent-file-example3.torrent | torrents-test |#When application create active-torrent for: \"torrent-file-example3.torrent\",\"torrents-test\"",
        "| torrent-file-example3.torrent | torrents-test |#When application save random blocks for torrent: \"torrent-file-example3.torrent\" in \"torrents-test\" and check it saved"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 14,
      "nbErrors": 0
    },
    {
      "className": "Scenario: find any tracker, from all the trackers, which response to: connect,announce and scrape requests",
      "failingMethods": [
        "Scenario: find any tracker, from all the trackers, which response to: connect,announce and scrape requests#Scenario: find any tracker, from all the trackers, which response to: connect,announce and scrape requests",
        "Scenario: find any tracker, from all the trackers, which response to: connect,announce and scrape requests#Given new torrent file: \"multiple-active-seeders-torrent-1.torrent\""
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "Scenario: communicating with collection of trackers which contain a not-responding trackers",
      "failingMethods": [
        "Scenario: communicating with collection of trackers which contain a not-responding trackers#Given new torrent file: \"multiple-active-seeders-torrent-1.torrent\"",
        "Scenario: communicating with collection of trackers which contain a not-responding trackers#Scenario: communicating with collection of trackers which contain a not-responding trackers"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "Scenario: we connect to all peers and get their bitfield status",
      "failingMethods": [
        "Scenario: we connect to all peers and get their bitfield status#Scenario: we connect to all peers and get their bitfield status",
        "Scenario: we connect to all peers and get their bitfield status#Then application connect to all peers and assert that we connected to them - for torrent: \"torrent-file-example1.torrent\""
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "Scenario: communicating with collection of trackers which contain invalid urls of trackers",
      "failingMethods": [
        "Scenario: communicating with collection of trackers which contain invalid urls of trackers#Given new torrent file: \"multiple-active-seeders-torrent-1.torrent\"",
        "Scenario: communicating with collection of trackers which contain invalid urls of trackers#Scenario: communicating with collection of trackers which contain invalid urls of trackers"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "| torrent-file-example1.torrent | torrents-test |",
      "failingMethods": [
        "| torrent-file-example1.torrent | torrents-test |#Given initial torrent-status for torrent: \"torrent-file-example1.torrent\" in \"torrents-test\" is:",
        "| torrent-file-example1.torrent | torrents-test |#When application save random blocks for torrent: \"torrent-file-example1.torrent\" in \"torrents-test\" and check it saved",
        "| torrent-file-example1.torrent | torrents-test |#| torrent-file-example1.torrent | torrents-test |",
        "| torrent-file-example1.torrent | torrents-test |#When application create active-torrent for: \"torrent-file-example1.torrent\",\"torrents-test\""
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 56,
      "nbErrors": 0
    }
  ]
}