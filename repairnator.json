{
  "totalNumberSkippingTests": 117,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "UniversityFinalProjects/TorrentX",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 3,
      "ComputeTestDir": 0,
      "ResolveDependency": 39,
      "BuildProject": 10,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 1,
      "CloneRepository": 3,
      "NopolRepair": 26,
      "CheckoutPatchedBuild": 0,
      "TestProject": 7,
      "GatherTestInformation": 0,
      "PushIncriminatedBuild": 7,
      "AstorRepair": 2,
      "CommitPatch": 3
    },
    "FailureNames": [
      "java.lang.AssertionError:"
    ],
    "NbFailingTests": 106,
    "BugCommitUrl": "http://github.com/UniversityFinalProjects/TorrentX/commit/1d3b00e34ba1b918638b7c6d3621fdcc23dcd6f1",
    "ReproductionDate": "May 2, 2018 10:23:00 PM",
    "BuggyBuildId": 374122317,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/UniversityFinalProjects/TorrentX/builds/374122317",
    "BuggyBuildDate": "May 2, 2018 10:22:48 PM",
    "BugCommit": "1d3b00e34ba1b918638b7c6d3621fdcc23dcd6f1",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 246,
    "NbLibraries": 87,
    "NbFileApp": 166,
    "NbFileTests": 26,
    "NbCPU": 32,
    "FreeMemory": 1810593496,
    "TotalMemory": 2007498752,
    "AngelicValuesByTest": {
      "Scenario: we send 3 peer-messages and the connection must be closed by the rules of the fake peers": 0,
      "Scenario: find any tracker, from all the trackers, which response to: connect,announce and scrape requests": 0,
      "Scenario: we send peer-messages and must receive the same peer-messages back": 0,
      "Scenario: communicating with collection of trackers which contain a not-responding trackers": 0,
      "Scenario: we connect to all peers and get their bitfield status": 0,
      "| torrent-file-example1/torrent | torrents-test |": 0,
      "| torrent-file-example2/torrent | torrents-test |": 0,
      "| torrent-file-example3/torrent | torrents-test |": 0,
      "| multiple-active-seeders-torrent-1/torrent | torrents-test |": 0,
      "Scenario: communicating with collection of trackers which contain invalid urls of trackers": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 697380272,
      "ComputeClasspath": 681089768,
      "ComputeTestDir": 686668136,
      "ResolveDependency": 588193592,
      "BuildProject": 573245784,
      "NPERepair": 684229616,
      "ComputeSourceDir": 681089768,
      "InitRepoToPush": 496621008,
      "CloneRepository": 701490016,
      "NopolRepair": 1863347056,
      "CheckoutPatchedBuild": 1810593496,
      "TestProject": 550383912,
      "GatherTestInformation": 536997880,
      "PushIncriminatedBuild": 684229616,
      "AstorRepair": 503449728,
      "CommitPatch": 1810593496
    }
  },
  "bugCommit": "https://github.com/UniversityFinalProjects/TorrentX/compare/cdaca469af9d...1d3b00e34ba1",
  "failingModule": "/root/workspace/UniversityFinalProjects/TorrentX/374122317",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 106,
  "error-types": [
    "java.lang.AssertionError:"
  ],
  "totalNumberRunningTests": 246,
  "failing-test-cases": [
    {
      "className": "Scenario: we send 3 peer-messages and the connection must be closed by the rules of the fake peers",
      "failingMethods": [
        "Scenario: we send 3 peer-messages and the connection must be closed by the rules of the fake peers#Given new torrent file: \"multiple-active-seeders-torrent-1.torrent\"",
        "Scenario: we send 3 peer-messages and the connection must be closed by the rules of the fake peers#Scenario: we send 3 peer-messages and the connection must be closed by the rules of the fake peers"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "| multiple-active-seeders-torrent-1.torrent | torrents-test |",
      "failingMethods": [
        "| multiple-active-seeders-torrent-1.torrent | torrents-test |#When application save random blocks for torrent: \"multiple-active-seeders-torrent-1.torrent\" in \"torrents-test\" and check it saved",
        "| multiple-active-seeders-torrent-1.torrent | torrents-test |#Then application save random blocks for torrent: \"multiple-active-seeders-torrent-1.torrent\" in \"torrents-test\" and check it saved",
        "| multiple-active-seeders-torrent-1.torrent | torrents-test |#When application create active-torrent for: \"multiple-active-seeders-torrent-1.torrent\",\"torrents-test\"",
        "| multiple-active-seeders-torrent-1.torrent | torrents-test |#| multiple-active-seeders-torrent-1.torrent | torrents-test |"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 16,
      "nbErrors": 0
    },
    {
      "className": "| torrent-file-example2.torrent | torrents-test |",
      "failingMethods": [
        "| torrent-file-example2.torrent | torrents-test |#| torrent-file-example2.torrent | torrents-test |",
        "| torrent-file-example2.torrent | torrents-test |#When application save random blocks for torrent: \"torrent-file-example2.torrent\" in \"torrents-test\" and check it saved",
        "| torrent-file-example2.torrent | torrents-test |#When application create active-torrent for: \"torrent-file-example2.torrent\",\"torrents-test\""
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 12,
      "nbErrors": 0
    },
    {
      "className": "| torrent-file-example3.torrent | torrents-test |",
      "failingMethods": [
        "| torrent-file-example3.torrent | torrents-test |#| torrent-file-example3.torrent | torrents-test |",
        "| torrent-file-example3.torrent | torrents-test |#When application create active-torrent for: \"torrent-file-example3.torrent\",\"torrents-test\"",
        "| torrent-file-example3.torrent | torrents-test |#When application save random blocks for torrent: \"torrent-file-example3.torrent\" in \"torrents-test\" and check it saved"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 12,
      "nbErrors": 0
    },
    {
      "className": "Scenario: find any tracker, from all the trackers, which response to: connect,announce and scrape requests",
      "failingMethods": [
        "Scenario: find any tracker, from all the trackers, which response to: connect,announce and scrape requests#Scenario: find any tracker, from all the trackers, which response to: connect,announce and scrape requests",
        "Scenario: find any tracker, from all the trackers, which response to: connect,announce and scrape requests#Given new torrent file: \"multiple-active-seeders-torrent-1.torrent\""
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "Scenario: we send peer-messages and must receive the same peer-messages back",
      "failingMethods": [
        "Scenario: we send peer-messages and must receive the same peer-messages back#Given new torrent file: \"multiple-active-seeders-torrent-1.torrent\"",
        "Scenario: we send peer-messages and must receive the same peer-messages back#Scenario: we send peer-messages and must receive the same peer-messages back"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "Scenario: communicating with collection of trackers which contain a not-responding trackers",
      "failingMethods": [
        "Scenario: communicating with collection of trackers which contain a not-responding trackers#Given new torrent file: \"multiple-active-seeders-torrent-1.torrent\"",
        "Scenario: communicating with collection of trackers which contain a not-responding trackers#Scenario: communicating with collection of trackers which contain a not-responding trackers"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "Scenario: we connect to all peers and get their bitfield status",
      "failingMethods": [
        "Scenario: we connect to all peers and get their bitfield status#Scenario: we connect to all peers and get their bitfield status",
        "Scenario: we connect to all peers and get their bitfield status#Then application connect to all peers and assert that we connected to them - for torrent: \"torrent-file-example1.torrent\""
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "Scenario: communicating with collection of trackers which contain invalid urls of trackers",
      "failingMethods": [
        "Scenario: communicating with collection of trackers which contain invalid urls of trackers#Given new torrent file: \"multiple-active-seeders-torrent-1.torrent\"",
        "Scenario: communicating with collection of trackers which contain invalid urls of trackers#Scenario: communicating with collection of trackers which contain invalid urls of trackers"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "| torrent-file-example1.torrent | torrents-test |",
      "failingMethods": [
        "| torrent-file-example1.torrent | torrents-test |#Given initial torrent-status for torrent: \"torrent-file-example1.torrent\" in \"torrents-test\" is:",
        "| torrent-file-example1.torrent | torrents-test |#When application save random blocks for torrent: \"torrent-file-example1.torrent\" in \"torrents-test\" and check it saved",
        "| torrent-file-example1.torrent | torrents-test |#| torrent-file-example1.torrent | torrents-test |",
        "| torrent-file-example1.torrent | torrents-test |#When application create active-torrent for: \"torrent-file-example1.torrent\",\"torrents-test\""
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 54,
      "nbErrors": 0
    }
  ]
}