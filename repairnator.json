{
  "totalNumberSkippingTests": 4,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "INRIA/spoon",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 9,
      "ComputeClasspath": 3,
      "ComputeTestDir": 0,
      "ResolveDependency": 18,
      "BuildProject": 25,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 5,
      "CloneRepository": 7,
      "NopolRepair": 22,
      "CheckoutPatchedBuild": 0,
      "TestProject": 390,
      "GatherTestInformation": 0,
      "PushIncriminatedBuild": 8,
      "AstorRepair": 201,
      "CommitPatch": 6
    },
    "FailureNames": [
      "java.lang.AssertionError"
    ],
    "NbFailingTests": 81,
    "BugCommitUrl": "http://github.com/INRIA/spoon/commit/66569b6c435814ed0c5750a1b95417d6bd07987b",
    "ReproductionDate": "Mar 18, 2018 11:53:53 AM",
    "BuggyBuildId": 354963921,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/INRIA/spoon/builds/354963921",
    "BuggyBuildDate": "Mar 18, 2018 11:53:38 AM",
    "BugCommit": "66569b6c435814ed0c5750a1b95417d6bd07987b",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 1472,
    "NbLibraries": 14,
    "NbFileApp": 1076,
    "NbFileTests": 1290,
    "TotalMemory": 3072327680,
    "AngelicValuesByTest": {
      "spoon/test/parent/CollectionsContractTest": 0,
      "spoon/MavenLauncherTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 482142672,
      "ComputeClasspath": 649747816,
      "ComputeTestDir": 465425504,
      "ResolveDependency": 669222328,
      "BuildProject": 656555248,
      "NPERepair": 651612496,
      "ComputeSourceDir": 649747816,
      "InitRepoToPush": 454585536,
      "CloneRepository": 614721776,
      "NopolRepair": 1949480496,
      "CheckoutPatchedBuild": 1834448288,
      "TestProject": 624131144,
      "GatherTestInformation": 600604648,
      "PushIncriminatedBuild": 651612496,
      "AstorRepair": 505772496,
      "CommitPatch": 1834448288
    },
    "NbCPU": 32,
    "FreeMemory": 1834448288
  },
  "failingModule": "/root/workspace/INRIA/spoon/354963921",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 81,
  "error-types": [
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 1472,
  "failing-test-cases": [
    {
      "className": "spoon.test.parent.CollectionsContractTest",
      "failingMethods": [
        "spoon.test.parent.CollectionsContractTest#testContract[CtCatchVariableReference]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtThisAccess]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtDo]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtFor]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtConstructor]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtLocalVariable]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtVariableWrite]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtCase]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtConstructorCall]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtAnnotationFieldAccess]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtVariableRead]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtForEach]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtComment]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtCatch]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtNewClass]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtImport]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtTypeAccess]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtOperatorAssignment]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtJavaDoc]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtFieldWrite]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtLocalVariableReference]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtArrayTypeReference]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtInvocation]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtAssert]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtIntersectionTypeReference]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtFieldRead]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtInterface]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtTypeReference]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtLambda]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtField]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtArrayWrite]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtConditional]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtAssignment]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtExecutableReference]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtJavaDocTag]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtThrow]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtCatchVariable]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtModuleRequirement]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtNewArray]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtReturn]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtAnnotationType]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtStatementList]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtSwitch]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtAnnotationMethod]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtWildcardReference]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtSynchronized]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtProvidedService]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtTry]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtPackageReference]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtTypeParameterReference]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtBinaryOperator]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtTypeParameter]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtMethod]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtLiteral]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtParameterReference]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtTryWithResource]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtUsedService]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtIf]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtModule]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtEnum]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtEnumValue]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtWhile]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtAnnotation]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtSuperAccess]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtBlock]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtClass]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtModuleReference]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtContinue]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtAnonymousExecutable]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtBreak]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtCodeSnippetStatement]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtFieldReference]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtExecutableReferenceExpression]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtPackageExport]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtUnaryOperator]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtParameter]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtArrayRead]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtCodeSnippetExpression]",
        "spoon.test.parent.CollectionsContractTest#testContract[CtPackage]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtConditional#cast;READ_ONLY\nnormal;CtConditional#annotation;READ_ONLY\nnormal;CtConditional#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtProvidedService#implementationType;READ_ONLY\nnormal;CtProvidedService#annotation;READ_ONLY\nnormal;CtProvidedService#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtParameter#annotation;READ_ONLY\nnormal;CtParameter#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtWhile#annotation;READ_ONLY\nnormal;CtWhile#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtTypeReference#typeArgument;READ_ONLY\nderived;CtTypeReference#interface;MUTABLE_DETACHED\nnormal;CtTypeReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtCatchVariableReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtContinue#annotation;READ_ONLY\nnormal;CtContinue#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtInterface#typeMember;READ_ONLY\nderived;CtInterface#field;MUTABLE_DETACHED\nderived;CtInterface#nestedType;MUTABLE_DETACHED\nderived;CtInterface#method;MUTABLE_DETACHED\nnormal;CtInterface#interface;READ_ONLY\nnormal;CtInterface#typeParameter;READ_ONLY\nnormal;CtInterface#annotation;READ_ONLY\nnormal;CtInterface#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtAssignment#cast;READ_ONLY\nnormal;CtAssignment#annotation;READ_ONLY\nnormal;CtAssignment#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtBinaryOperator#cast;READ_ONLY\nnormal;CtBinaryOperator#annotation;READ_ONLY\nnormal;CtBinaryOperator#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtEnumValue#annotation;READ_ONLY\nnormal;CtEnumValue#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtModuleRequirement#annotation;READ_ONLY\nnormal;CtModuleRequirement#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtForEach#annotation;READ_ONLY\nnormal;CtForEach#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtConstructor#typeParameter;READ_ONLY\nnormal;CtConstructor#parameter;READ_ONLY\nnormal;CtConstructor#thrown;READ_ONLY\nnormal;CtConstructor#annotation;READ_ONLY\nnormal;CtConstructor#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtSuperAccess#cast;READ_ONLY\nnormal;CtSuperAccess#annotation;READ_ONLY\nnormal;CtSuperAccess#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtAnonymousExecutable#annotation;READ_ONLY\nnormal;CtAnonymousExecutable#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtComment#annotation;READ_ONLY\nnormal;CtComment#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Failed check of;CtWildcardReference#interface\nnormal;CtWildcardReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtThisAccess#cast;READ_ONLY\nnormal;CtThisAccess#annotation;READ_ONLY\nnormal;CtThisAccess#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtArrayWrite#cast;READ_ONLY\nnormal;CtArrayWrite#annotation;READ_ONLY\nnormal;CtArrayWrite#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtPackageReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtJavaDoc#commentTag;MUTABLE_DETACHED\nnormal;CtJavaDoc#annotation;READ_ONLY\nnormal;CtJavaDoc#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtArrayRead#cast;READ_ONLY\nnormal;CtArrayRead#annotation;READ_ONLY\nnormal;CtArrayRead#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtStatementList#statement;READ_ONLY\nnormal;CtStatementList#annotation;READ_ONLY\nnormal;CtStatementList#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtVariableWrite#cast;READ_ONLY\nnormal;CtVariableWrite#annotation;READ_ONLY\nnormal;CtVariableWrite#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtParameterReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtOperatorAssignment#cast;READ_ONLY\nnormal;CtOperatorAssignment#annotation;READ_ONLY\nnormal;CtOperatorAssignment#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtAnnotationFieldAccess#cast;READ_ONLY\nnormal;CtAnnotationFieldAccess#annotation;READ_ONLY\nnormal;CtAnnotationFieldAccess#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtAnnotationMethod#annotation;READ_ONLY\nnormal;CtAnnotationMethod#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "derived;CtClass#annonymousExecutable;MUTABLE_DETACHED\nderived;CtClass#constructor;MUTABLE_DETACHED\nnormal;CtClass#typeMember;READ_ONLY\nderived;CtClass#field;MUTABLE_DETACHED\nderived;CtClass#nestedType;MUTABLE_DETACHED\nderived;CtClass#method;MUTABLE_DETACHED\nnormal;CtClass#interface;READ_ONLY\nnormal;CtClass#typeParameter;READ_ONLY\nnormal;CtClass#annotation;READ_ONLY\nnormal;CtClass#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtBlock#statement;MUTABLE_ATTACHED_INCORRECT\nnormal;CtBlock#annotation;READ_ONLY\nnormal;CtBlock#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtPackage#subPackage;MUTABLE_ATTACHED_INCORRECT\nnormal;CtPackage#containedType;MUTABLE_ATTACHED_INCORRECT\nnormal;CtPackage#annotation;READ_ONLY\nnormal;CtPackage#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtTryWithResource#tryResource;READ_ONLY\nnormal;CtTryWithResource#catch;READ_ONLY\nnormal;CtTryWithResource#annotation;READ_ONLY\nnormal;CtTryWithResource#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtAssert#annotation;READ_ONLY\nnormal;CtAssert#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtSwitch#case;READ_ONLY\nnormal;CtSwitch#annotation;READ_ONLY\nnormal;CtSwitch#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtTry#catch;READ_ONLY\nnormal;CtTry#annotation;READ_ONLY\nnormal;CtTry#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtSynchronized#annotation;READ_ONLY\nnormal;CtSynchronized#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtImport#annotation;READ_ONLY\nnormal;CtImport#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Failed check of;CtTypeParameterReference#interface\nnormal;CtTypeParameterReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtInvocation#argument;READ_ONLY\nnormal;CtInvocation#cast;READ_ONLY\nnormal;CtInvocation#annotation;READ_ONLY\nnormal;CtInvocation#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtCodeSnippetExpression#cast;READ_ONLY\nnormal;CtCodeSnippetExpression#annotation;READ_ONLY\nnormal;CtCodeSnippetExpression#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtFieldWrite#cast;READ_ONLY\nnormal;CtFieldWrite#annotation;READ_ONLY\nnormal;CtFieldWrite#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtUnaryOperator#cast;READ_ONLY\nnormal;CtUnaryOperator#annotation;READ_ONLY\nnormal;CtUnaryOperator#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtExecutableReference#typeArgument;READ_ONLY\nnormal;CtExecutableReference#argumentType;READ_ONLY\nnormal;CtExecutableReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtFor#forInit;READ_ONLY\nnormal;CtFor#forUpdate;READ_ONLY\nnormal;CtFor#annotation;READ_ONLY\nnormal;CtFor#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtVariableRead#cast;READ_ONLY\nnormal;CtVariableRead#annotation;READ_ONLY\nnormal;CtVariableRead#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtTypeParameter#annotation;READ_ONLY\nnormal;CtTypeParameter#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtLocalVariable#annotation;READ_ONLY\nnormal;CtLocalVariable#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtIf#annotation;READ_ONLY\nnormal;CtIf#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtModule#moduleDirective;READ_ONLY\nnormal;CtModule#annotation;READ_ONLY\nnormal;CtModule#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtPackageExport#moduleRef;READ_ONLY\nnormal;CtPackageExport#annotation;READ_ONLY\nnormal;CtPackageExport#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtConstructorCall#argument;READ_ONLY\nnormal;CtConstructorCall#cast;READ_ONLY\nnormal;CtConstructorCall#annotation;READ_ONLY\nnormal;CtConstructorCall#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtCase#statement;READ_ONLY\nnormal;CtCase#annotation;READ_ONLY\nnormal;CtCase#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtModuleReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtCatch#annotation;READ_ONLY\nnormal;CtCatch#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtArrayTypeReference#typeArgument;READ_ONLY\nderived;CtArrayTypeReference#interface;MUTABLE_DETACHED\nnormal;CtArrayTypeReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtMethod#typeParameter;READ_ONLY\nnormal;CtMethod#parameter;READ_ONLY\nnormal;CtMethod#thrown;READ_ONLY\nnormal;CtMethod#annotation;READ_ONLY\nnormal;CtMethod#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtLambda#parameter;READ_ONLY\nnormal;CtLambda#cast;READ_ONLY\nnormal;CtLambda#annotation;READ_ONLY\nnormal;CtLambda#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtNewArray#dimension;READ_ONLY\nnormal;CtNewArray#expression;READ_ONLY\nnormal;CtNewArray#cast;READ_ONLY\nnormal;CtNewArray#annotation;READ_ONLY\nnormal;CtNewArray#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtUsedService#annotation;READ_ONLY\nnormal;CtUsedService#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtIntersectionTypeReference#bound;READ_ONLY\nnormal;CtIntersectionTypeReference#typeArgument;READ_ONLY\nFailed check of;CtIntersectionTypeReference#interface\nnormal;CtIntersectionTypeReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtThrow#annotation;READ_ONLY\nnormal;CtThrow#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtLiteral#cast;READ_ONLY\nnormal;CtLiteral#annotation;READ_ONLY\nnormal;CtLiteral#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtReturn#annotation;READ_ONLY\nnormal;CtReturn#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtJavaDocTag#annotation;READ_ONLY\nnormal;CtJavaDocTag#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtField#annotation;READ_ONLY\nnormal;CtField#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtTypeAccess#cast;READ_ONLY\nnormal;CtTypeAccess#annotation;READ_ONLY\nnormal;CtTypeAccess#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtCodeSnippetStatement#annotation;READ_ONLY\nnormal;CtCodeSnippetStatement#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtDo#annotation;READ_ONLY\nnormal;CtDo#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtAnnotation#value;READ_ONLY\nnormal;CtAnnotation#annotation;READ_ONLY\nnormal;CtAnnotation#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtFieldRead#cast;READ_ONLY\nnormal;CtFieldRead#annotation;READ_ONLY\nnormal;CtFieldRead#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtBreak#annotation;READ_ONLY\nnormal;CtBreak#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtFieldReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtEnum#value;READ_ONLY\nderived;CtEnum#field;MUTABLE_DETACHED\nderived;CtEnum#method;MUTABLE_DETACHED\nderived;CtEnum#annonymousExecutable;MUTABLE_DETACHED\nderived;CtEnum#constructor;MUTABLE_DETACHED\nnormal;CtEnum#typeMember;READ_ONLY\nderived;CtEnum#nestedType;MUTABLE_DETACHED\nnormal;CtEnum#interface;READ_ONLY\nnormal;CtEnum#annotation;READ_ONLY\nnormal;CtEnum#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtNewClass#argument;READ_ONLY\nnormal;CtNewClass#cast;READ_ONLY\nnormal;CtNewClass#annotation;READ_ONLY\nnormal;CtNewClass#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtLocalVariableReference#annotation;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "derived;CtAnnotationType#method;MUTABLE_DETACHED\nnormal;CtAnnotationType#typeMember;READ_ONLY\nderived;CtAnnotationType#field;MUTABLE_DETACHED\nderived;CtAnnotationType#nestedType;MUTABLE_DETACHED\nnormal;CtAnnotationType#annotation;READ_ONLY\nnormal;CtAnnotationType#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtCatchVariable#multiType;READ_ONLY\nnormal;CtCatchVariable#annotation;READ_ONLY\nnormal;CtCatchVariable#comment;READ_ONLY",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "normal;CtExecutableReferenceExpression#cast;READ_ONLY\nnormal;CtExecutableReferenceExpression#annotation;READ_ONLY\nnormal;CtExecutableReferenceExpression#comment;READ_ONLY",
          "isError": false
        }
      ],
      "nbFailures": 79,
      "nbErrors": 0
    },
    {
      "className": "spoon.MavenLauncherTest",
      "failingMethods": [
        "spoon.MavenLauncherTest#spoonMavenLauncherTest",
        "spoon.MavenLauncherTest#mavenLauncherTestMultiModulesAndVariables"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Content of classpath: ",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c7\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    }
  ]
}