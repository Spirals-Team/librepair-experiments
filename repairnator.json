{
  "totalNumberSkippingTests": 1,
  "bugType": "only_fail",
  "totalNumberErroringTests": 19,
  "repo": "graphhopper/graphhopper",
  "metrics": {
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 389834200,
      "ComputeClasspath": 215357120,
      "ComputeTestDir": 286761312,
      "ResolveDependency": 276779136,
      "BuildProject": 259891704,
      "NPERepair": 216515824,
      "ComputeSourceDir": 215357120,
      "InitRepoToPush": 207188024,
      "CloneRepository": 416806552,
      "NopolRepair": 4670183096,
      "CheckoutPatchedBuild": 5074124432,
      "TestProject": 251449088,
      "GatherTestInformation": 229004496,
      "PushIncriminatedBuild": 216515824,
      "CommitPatch": 5078874504
    },
    "ReproductionDate": "Sep 17, 2017 5:09:33 PM",
    "BuggyBuildId": 276528276,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/graphhopper/graphhopper/builds/276528276",
    "BuggyBuildDate": "Sep 17, 2017 4:56:45 PM",
    "BugCommit": "b6f1af1b839599b5c16403c98d2daeccf4c110db",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 1341,
    "NbLibraries": 13,
    "NbFileApp": 0,
    "NbFileTests": 0,
    "NbCPU": 8,
    "FreeMemory": 5074124432,
    "TotalMemory": 7389839360,
    "AngelicValuesByTest": {},
    "BugCommitUrl": "http://github.com/graphhopper/graphhopper/commit/b6f1af1b839599b5c16403c98d2daeccf4c110db",
    "NbFailingTests": 121,
    "FailureNames": [
      "java.lang.UnsupportedOperationException",
      "java.lang.AssertionError",
      "java.lang.ArrayIndexOutOfBoundsException",
      "java.lang.IllegalArgumentException",
      "org.junit.ComparisonFailure",
      "skipped"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 3,
      "ComputeTestDir": 0,
      "ResolveDependency": 15,
      "BuildProject": 131,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 6,
      "CloneRepository": 32,
      "NopolRepair": 19104,
      "CheckoutPatchedBuild": 0,
      "TestProject": 28,
      "GatherTestInformation": 0,
      "PushIncriminatedBuild": 7,
      "CommitPatch": 132
    }
  },
  "bugCommit": "https://github.com/graphhopper/graphhopper/compare/7d0303fbb26e...b6f1af1b8395",
  "failingModule": "/root/workspace/graphhopper/graphhopper/276528276/core",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 102,
  "error-types": [
    "java.lang.UnsupportedOperationException",
    "java.lang.AssertionError",
    "java.lang.ArrayIndexOutOfBoundsException",
    "java.lang.IllegalArgumentException",
    "org.junit.ComparisonFailure",
    "skipped"
  ],
  "totalNumberRunningTests": 1341,
  "failing-test-cases": [
    {
      "className": "com.graphhopper.storage.GraphHopperStorageTest",
      "failingMethods": [
        "com.graphhopper.storage.GraphHopperStorageTest#testClone",
        "com.graphhopper.storage.GraphHopperStorageTest#test8BytesFlags",
        "com.graphhopper.storage.GraphHopperStorageTest#testCreateDuplicateEdges"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c3\u003e but was:\u003c2\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c3074457345618258602\u003e but was:\u003c-6148914693384000854\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.reader.dem.TunnelElevationInterpolatorTest",
      "failingMethods": [
        "com.graphhopper.reader.dem.TunnelElevationInterpolatorTest#interpolatesElevationOfTunnelWithTwoOuterNodes",
        "com.graphhopper.reader.dem.TunnelElevationInterpolatorTest#interpolatesElevationOfTunnelWithFourOuterNodes",
        "com.graphhopper.reader.dem.TunnelElevationInterpolatorTest#interpolatesElevationOfTunnelWithThreeOuterNodes",
        "com.graphhopper.reader.dem.TunnelElevationInterpolatorTest#doesNotInterpolateElevationOfTunnelWithZeroOuterNodes",
        "com.graphhopper.reader.dem.TunnelElevationInterpolatorTest#interpolatesElevationOfTunnelWithSingleOuterNode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[3, 1]\u003e but was:\u003c[1]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[]\u003e but was:\u003c[0]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[3, 1, 6]\u003e but was:\u003c[1]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[3, 1, 6, 8]\u003e but was:\u003c[1]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[2]\u003e but was:\u003c[0]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 5,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.storage.index.LocationIndexTreeCHTest",
      "failingMethods": [
        "com.graphhopper.storage.index.LocationIndexTreeCHTest#testDifferentVehicles",
        "com.graphhopper.storage.index.LocationIndexTreeCHTest#testSearchWithFilter_issue318"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c2\u003e but was:\u003c1\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.routing.PathTest",
      "failingMethods": [
        "com.graphhopper.routing.PathTest#testCalcInstructionsForDataFlagEncoder",
        "com.graphhopper.routing.PathTest#testCalcInstructionsRoundaboutIssue353"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[At roundabout, take exit 1 onto MainStreet 1 11, Arrive at destination]\u003e but was:\u003c[Continue onto 6-10, Arrive at destination]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.util.BitUtilLittleTest",
      "failingMethods": [
        "com.graphhopper.util.BitUtilLittleTest#testToBitString"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...00000000000000000000[100000000000000000000000000000001]\u003e but was:\u003c...00000000000000000000[000000000000000000000000000000000]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.routing.util.MotorcycleFlagEncoderTest",
      "failingMethods": [
        "com.graphhopper.routing.util.MotorcycleFlagEncoderTest#testAccess"
      ],
      "erroringMethods": [
        "com.graphhopper.routing.util.MotorcycleFlagEncoderTest#testSetSpeed0_issue367",
        "com.graphhopper.routing.util.MotorcycleFlagEncoderTest#testCurvature"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Cannot find encoded value motorcycle.curvature in existing collection: {surface\u003dsurface, car.max_speed\u003dcar.max_speed, roundabout\u003droundabout, road_class\u003droad_class, road_environment\u003droad_environment, motorcycle.access\u003dmotorcycle.access, motorcycle.average_speed\u003dmotorcycle.average_speed, motorcycle.priority\u003dcom.graphhopper.routing.util.MotorcycleFlagEncoder$2@4b8729ff, curvature\u003dcom.graphhopper.routing.util.MotorcycleFlagEncoder$3@61710c6, foot.average_speed\u003dfoot.average_speed, foot.priority\u003dfoot.priority, foot.access\u003dfoot.access}",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Cannot find encoded value motorcycle.curvature in existing collection: {surface\u003dsurface, car.max_speed\u003dcar.max_speed, roundabout\u003droundabout, road_class\u003droad_class, road_environment\u003droad_environment, motorcycle.access\u003dmotorcycle.access, motorcycle.average_speed\u003dmotorcycle.average_speed, motorcycle.priority\u003dcom.graphhopper.routing.util.MotorcycleFlagEncoder$2@5f9edf14, curvature\u003dcom.graphhopper.routing.util.MotorcycleFlagEncoder$3@68746f22, foot.average_speed\u003dfoot.average_speed, foot.priority\u003dfoot.priority, foot.access\u003dfoot.access}",
          "isError": true
        }
      ],
      "nbFailures": 1,
      "nbErrors": 2
    },
    {
      "className": "com.graphhopper.storage.GraphHopperStorageForDataFlagEncoderTest",
      "failingMethods": [],
      "erroringMethods": [
        "com.graphhopper.storage.GraphHopperStorageForDataFlagEncoderTest#testStorageProperties"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "entry in encoder list not supported surface",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
      "failingMethods": [
        "com.graphhopper.routing.ch.PrepareContractionHierarchiesTest#testUnpackingOrder_Fastest",
        "com.graphhopper.routing.ch.PrepareContractionHierarchiesTest#testDirectedGraph",
        "com.graphhopper.routing.ch.PrepareContractionHierarchiesTest#testMoreComplexGraph",
        "com.graphhopper.routing.ch.PrepareContractionHierarchiesTest#testUnpackingOrder",
        "com.graphhopper.routing.ch.PrepareContractionHierarchiesTest#testFindShortcuts_Roundabout",
        "com.graphhopper.routing.ch.PrepareContractionHierarchiesTest#testMultiplePreparationsDifferentView",
        "com.graphhopper.routing.ch.PrepareContractionHierarchiesTest#testDirectedGraph3",
        "com.graphhopper.routing.ch.PrepareContractionHierarchiesTest#testRoundaboutUnpacking",
        "com.graphhopper.routing.ch.PrepareContractionHierarchiesTest#testMultiplePreparationsIdenticalView",
        "com.graphhopper.routing.ch.PrepareContractionHierarchiesTest#testDirectedGraph2"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "node 2 is invalid. Not in [0,2)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c2\u003e but was:\u003c0\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c9\u003e but was:\u003c2\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "3-\u003e2, weight:12.0 (5,4)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c60\u003e but was:\u003c46\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "node 2 is invalid. Not in [0,2)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "fastest|car expected:\u003c7\u003e but was:\u003c5\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "shortest|car expected:\u003c7\u003e but was:\u003c5\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c29\u003e but was:\u003c27\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c2\u003e but was:\u003c1\u003e",
          "isError": false
        }
      ],
      "nbFailures": 10,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.reader.dem.BridgeElevationInterpolatorTest",
      "failingMethods": [
        "com.graphhopper.reader.dem.BridgeElevationInterpolatorTest#interpolatesElevationOfPillarNodes"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[3, 1, 2, 6, 8]\u003e but was:\u003c[2]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.storage.index.Location2IDFullIndexTest",
      "failingMethods": [
        "com.graphhopper.storage.index.Location2IDFullIndexTest#testDifferentVehicles"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c2\u003e but was:\u003c-1\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest",
      "failingMethods": [
        "com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest#testDifferentVehicles"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c2\u003e but was:\u003c-1\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.routing.util.Car4WDFlagEncoderTest",
      "failingMethods": [
        "com.graphhopper.routing.util.Car4WDFlagEncoderTest#testAccess"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.storage.GraphHopperStorageCHTest",
      "failingMethods": [
        "com.graphhopper.storage.GraphHopperStorageCHTest#test8BytesFlags",
        "com.graphhopper.storage.GraphHopperStorageCHTest#testGetWeight",
        "com.graphhopper.storage.GraphHopperStorageCHTest#testCreateDuplicateEdges",
        "com.graphhopper.storage.GraphHopperStorageCHTest#testDisconnectEdge",
        "com.graphhopper.storage.GraphHopperStorageCHTest#testSimpleShortcutCreationAndTraversal",
        "com.graphhopper.storage.GraphHopperStorageCHTest#testClone"
      ],
      "erroringMethods": [
        "com.graphhopper.storage.GraphHopperStorageCHTest#testShortcutCreationAndAccessForManyVehicles"
      ],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c1\u003e but was:\u003c0\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[3, 4]\u003e but was:\u003c[3]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Cannot find encoded value bike2.access in existing collection: {surface\u003dsurface, car.max_speed\u003dcar.max_speed, roundabout\u003droundabout, road_class\u003droad_class, road_environment\u003droad_environment, car.average_speed\u003dcar.average_speed, car.access\u003dcar.access, foot.average_speed\u003dfoot.average_speed, foot.priority\u003dfoot.priority, foot.access\u003dfoot.access}",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c3\u003e but was:\u003c2\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c3074457345618258602\u003e but was:\u003c-6148914693384000854\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 6,
      "nbErrors": 1
    },
    {
      "className": "com.graphhopper.routing.util.DataFlagEncoderTest",
      "failingMethods": [
        "com.graphhopper.routing.util.DataFlagEncoderTest#testLargeMaxspeed",
        "com.graphhopper.routing.util.DataFlagEncoderTest#testMaxspeed",
        "com.graphhopper.routing.util.DataFlagEncoderTest#testHighwaySpeed",
        "com.graphhopper.routing.util.DataFlagEncoderTest#testInsufficientEncoderBitLength",
        "com.graphhopper.routing.util.DataFlagEncoderTest#reverseEdge",
        "com.graphhopper.routing.util.DataFlagEncoderTest#acceptWay",
        "com.graphhopper.routing.util.DataFlagEncoderTest#setAccess"
      ],
      "erroringMethods": [
        "com.graphhopper.routing.util.DataFlagEncoderTest#testHighway",
        "com.graphhopper.routing.util.DataFlagEncoderTest#testSpatialId",
        "com.graphhopper.routing.util.DataFlagEncoderTest#testBridge",
        "com.graphhopper.routing.util.DataFlagEncoderTest#testTunnel",
        "com.graphhopper.routing.util.DataFlagEncoderTest#testFord",
        "com.graphhopper.routing.util.DataFlagEncoderTest#testDestinationTag"
      ],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.UnsupportedOperationException",
          "failureDetail": "Not supported. Edge is empty.",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Expected exception: java.lang.IllegalArgumentException",
          "isError": false
        },
        {
          "failureName": "java.lang.ArrayIndexOutOfBoundsException",
          "failureDetail": "3",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Cannot find encoded value generic.spatial_id in existing collection: {surface\u003dsurface, car.max_speed\u003dcar.max_speed, roundabout\u003droundabout, road_class\u003droad_class, road_environment\u003droad_environment, generic.average_speed\u003dgeneric.average_speed, access_class\u003daccess_class, generic.access\u003dgeneric.access, spatial_rule_id\u003dspatial_rule_id}",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[0.0, [100.0, 100.0, 90.0, 9]0.0, 90.0]\u003e but was:\u003c[0.0, [0.0, 0.0, 0.0, ]0.0, 90.0]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.UnsupportedOperationException",
          "failureDetail": "Not supported. Edge is empty.",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c140.0\u003e but was:\u003c0.0\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c10.0\u003e but was:\u003c0.0\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.UnsupportedOperationException",
          "failureDetail": "Not supported. Edge is empty.",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c10.0\u003e but was:\u003c0.0\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.UnsupportedOperationException",
          "failureDetail": "Not supported. Edge is empty.",
          "isError": true
        }
      ],
      "nbFailures": 7,
      "nbErrors": 6
    },
    {
      "className": "com.graphhopper.storage.index.LocationIndexTreeTest",
      "failingMethods": [
        "com.graphhopper.storage.index.LocationIndexTreeTest#testSearchWithFilter_issue318",
        "com.graphhopper.storage.index.LocationIndexTreeTest#testDifferentVehicles"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c2\u003e but was:\u003c1\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.routing.util.EncodingManagerNewTest",
      "failingMethods": [
        "com.graphhopper.routing.util.EncodingManagerNewTest#testValueBoundaryCheck"
      ],
      "erroringMethods": [
        "com.graphhopper.routing.util.EncodingManagerNewTest#testSplittingAtVirtualEdges",
        "com.graphhopper.routing.util.EncodingManagerNewTest#testDirectionDependentBit",
        "com.graphhopper.routing.util.EncodingManagerNewTest#testDefaultValue",
        "com.graphhopper.routing.util.EncodingManagerNewTest#testNotInitializedProperty",
        "com.graphhopper.routing.util.EncodingManagerNewTest#importValues",
        "com.graphhopper.routing.util.EncodingManagerNewTest#testNonOSMDataSet",
        "com.graphhopper.routing.util.EncodingManagerNewTest#testDirectionDependentDecimal",
        "com.graphhopper.routing.util.EncodingManagerNewTest#testWeighting"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Cannot add parser car.max_speed. Already existing: car.max_speed",
          "isError": true
        },
        {
          "failureName": "skipped",
          "failureDetail": "skipped",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Cannot add parser car.max_speed. Already existing: car.max_speed",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Cannot add parser car.max_speed. Already existing: car.max_speed",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Cannot add parser car.max_speed. Already existing: car.max_speed",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Cannot add parser car.max_speed. Already existing: car.max_speed",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Cannot add parser car.max_speed. Already existing: car.max_speed",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Cannot add parser car.max_speed. Already existing: car.max_speed",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Cannot add parser car.max_speed. Already existing: car.max_speed",
          "isError": true
        }
      ],
      "nbFailures": 1,
      "nbErrors": 8
    },
    {
      "className": "com.graphhopper.routing.util.BikeFlagEncoderTest",
      "failingMethods": [
        "com.graphhopper.routing.util.BikeFlagEncoderTest#testPriority",
        "com.graphhopper.routing.util.BikeFlagEncoderTest#testHandleWayTagsCallsHandlePriority",
        "com.graphhopper.routing.util.BikeFlagEncoderTest#testHandleCommonWayTags",
        "com.graphhopper.routing.util.BikeFlagEncoderTest#testHandleWayTags",
        "com.graphhopper.routing.util.BikeFlagEncoderTest#testHandleWayTagsInfluencedByRelation",
        "com.graphhopper.routing.util.BikeFlagEncoderTest#testCalcPriority"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c1.0\u003e but was:\u003c7.0\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[small way, unpaved]\u003e but was:\u003c[]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[get off the bike, unpaved]\u003e but was:\u003c[]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c1.0\u003e but was:\u003c7.0\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[get off the bike]\u003e but was:\u003c[]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c0.8571428571428571\u003e but was:\u003c6.0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 6,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.util.InstructionListTest",
      "failingMethods": [
        "com.graphhopper.util.InstructionListTest#testInstructionsWithTimeAndPlace"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c1604120\u003e but was:\u003c1440000\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.util.GHUtilityTest",
      "failingMethods": [
        "com.graphhopper.util.GHUtilityTest#testCopy"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.routing.util.RacingBikeFlagEncoderTest",
      "failingMethods": [
        "com.graphhopper.routing.util.RacingBikeFlagEncoderTest#testHandleWayTagsInfluencedByRelation",
        "com.graphhopper.routing.util.RacingBikeFlagEncoderTest#testTramStations",
        "com.graphhopper.routing.util.RacingBikeFlagEncoderTest#testHandleCommonWayTags",
        "com.graphhopper.routing.util.RacingBikeFlagEncoderTest#testPriority",
        "com.graphhopper.routing.util.RacingBikeFlagEncoderTest#testHandleWayTagsCallsHandlePriority"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[small way, unpaved]\u003e but was:\u003c[]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c1.0\u003e but was:\u003c7.0\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Values should be different. Actual: 0",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[get off the bike]\u003e but was:\u003c[]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c0.8571428571428571\u003e but was:\u003c6.0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 5,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.routing.util.Bike2WeightFlagEncoderTest",
      "failingMethods": [
        "com.graphhopper.routing.util.Bike2WeightFlagEncoderTest#testCalcPriority",
        "com.graphhopper.routing.util.Bike2WeightFlagEncoderTest#testPriority",
        "com.graphhopper.routing.util.Bike2WeightFlagEncoderTest#testHandleCommonWayTags",
        "com.graphhopper.routing.util.Bike2WeightFlagEncoderTest#testApplyWayTags",
        "com.graphhopper.routing.util.Bike2WeightFlagEncoderTest#testHandleWayTags",
        "com.graphhopper.routing.util.Bike2WeightFlagEncoderTest#testHandleWayTagsInfluencedByRelation",
        "com.graphhopper.routing.util.Bike2WeightFlagEncoderTest#testSetSpeed0_issue367",
        "com.graphhopper.routing.util.Bike2WeightFlagEncoderTest#testHandleWayTagsCallsHandlePriority"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c10.0\u003e but was:\u003c0.0\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c18.0\u003e but was:\u003c2.0\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c1.0\u003e but was:\u003c7.0\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[small way, unpaved]\u003e but was:\u003c[]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[get off the bike, unpaved]\u003e but was:\u003c[]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c1.0\u003e but was:\u003c7.0\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[get off the bike]\u003e but was:\u003c[]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c0.8571428571428571\u003e but was:\u003c6.0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 8,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
      "failingMethods": [
        "com.graphhopper.routing.ch.DijkstraBidirectionCHTest#testBidirectional",
        "com.graphhopper.routing.ch.DijkstraBidirectionCHTest#testDirectedGraphBug2",
        "com.graphhopper.routing.ch.DijkstraBidirectionCHTest#testBaseGraphMultipleVehicles",
        "com.graphhopper.routing.ch.DijkstraBidirectionCHTest#testViaEdges_BiGraph",
        "com.graphhopper.routing.ch.DijkstraBidirectionCHTest#testMultipleVehicles_issue548",
        "com.graphhopper.routing.ch.DijkstraBidirectionCHTest#testWithCoordinates",
        "com.graphhopper.routing.ch.DijkstraBidirectionCHTest#testRekeyBugOfIntBinHeap",
        "com.graphhopper.routing.ch.DijkstraBidirectionCHTest#testTwoWeightsPerEdge2",
        "com.graphhopper.routing.ch.DijkstraBidirectionCHTest#testPathRecursiveUnpacking",
        "com.graphhopper.routing.ch.DijkstraBidirectionCHTest#testCalcFastestPath"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[0, 4, 6, 7]\u003e but was:\u003c[]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[0, 4, 6, 7, 5, 3]\u003e but was:\u003c[0, 1, 5, 3]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "distance:895.973, edges:4 expected:\u003c[0, 7, 6, 8, 3, 4]\u003e but was:\u003c[0, 7, 6, 5, 4]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[0, 1, 2, 3]\u003e but was:\u003c[0, 1, 3]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[0, 1, 5, 6, 7]\u003e but was:\u003c[]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "distance:885.4188788045922, edges:5 expected:\u003c[10, 7, 6, 8, 3, 9]\u003e but was:\u003c[10, 7, 6, 5, 4, 9]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[2, 0, 1]\u003e but was:\u003c[2, 3, 1]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[34, 35, 36]\u003e but was:\u003c[34, 44, 54, 55, 56, 46, 36]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c444535.0\u003e but was:\u003c786333.1001\u003e",
          "isError": false
        }
      ],
      "nbFailures": 10,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest",
      "failingMethods": [
        "com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest#testClone",
        "com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest#test8BytesFlags",
        "com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest#testCreateDuplicateEdges"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c3\u003e but was:\u003c2\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c3074457345618258602\u003e but was:\u003c-6148914693384000854\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.routing.util.FootFlagEncoderTest",
      "failingMethods": [
        "com.graphhopper.routing.util.FootFlagEncoderTest#testAccess",
        "com.graphhopper.routing.util.FootFlagEncoderTest#testSlowHiking",
        "com.graphhopper.routing.util.FootFlagEncoderTest#handleWayTagsRoundabout",
        "com.graphhopper.routing.util.FootFlagEncoderTest#testMixSpeedAndSafe",
        "com.graphhopper.routing.util.FootFlagEncoderTest#testRailPlatformIssue366"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c0\u003e but was:\u003c[0 0]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c0\u003e but was:\u003c[0 0]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c5.0\u003e but was:\u003c0.0\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 5,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.routing.util.EncodingManagerTest",
      "failingMethods": [
        "com.graphhopper.routing.util.EncodingManagerTest#testCompatibilityBug",
        "com.graphhopper.routing.util.EncodingManagerTest#testCompatibility",
        "com.graphhopper.routing.util.EncodingManagerTest#testToDetailsStringIncludesEncoderVersionNumber",
        "com.graphhopper.routing.util.EncodingManagerTest#testWrongEncoders",
        "com.graphhopper.routing.util.EncodingManagerTest#testCombineRelations",
        "com.graphhopper.routing.util.EncodingManagerTest#testMixBikeTypesAndRelationCombination",
        "com.graphhopper.routing.util.EncodingManagerTest#testFullBitMask"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...perties|version\u003d10, []roundabout, road_cla...\u003e but was:\u003c...perties|version\u003d10, [surface, car.max_speed, ]roundabout, road_cla...\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Values should be different. Actual: foot",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Too few space reserved for EncodedValues data. Maximum bits: 64, requested 64. Current EncodedValue racingbike.priority, all: {surface\u003dsurface, car.max_speed\u003dcar.max_speed, roundabout\u003droundabout, road_class\u003droad_class, road_environment\u003droad_environment, foot.average_speed\u003dfoot.average_speed, foot.priority\u003dfoot.priority, foot.access\u003dfoot.access, car.average_speed\u003dcar.average_speed, car.access\u003dcar.access, bike.access\u003dbike.access, bike.average_speed\u003dbike.average_speed, bike.priority\u003dbike.priority, mtb.priority\u003dmtb.priority, mtb.access\u003dmtb.access, mtb.average_speed\u003dmtb.average_speed, racingbike.average_speed\u003dracingbike.average_speed, racingbike.access\u003dracingbike.access, racingbike.priority\u003dracingbike.priority}. Decrease the number of vehicles or increase graph.bytes_for_flags to allow more bytes",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c4.0\u003e but was:\u003c0.0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 7,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworksTest",
      "failingMethods": [
        "com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworksTest#testRemoveNode",
        "com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworksTest#testRemoveSubnetworkWhenMultipleVehicles"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c9\u003e but was:\u003c7\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.storage.GraphStorageViaMMapTest",
      "failingMethods": [
        "com.graphhopper.storage.GraphStorageViaMMapTest#testCreateDuplicateEdges",
        "com.graphhopper.storage.GraphStorageViaMMapTest#testClone",
        "com.graphhopper.storage.GraphStorageViaMMapTest#test8BytesFlags"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c3\u003e but was:\u003c2\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c3074457345618258602\u003e but was:\u003c-6148914693384000854\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.routing.weighting.GenericWeightingTest",
      "failingMethods": [
        "com.graphhopper.routing.weighting.GenericWeightingTest#testCalcTime",
        "com.graphhopper.routing.weighting.GenericWeightingTest#testRoadAttributeRestriction"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c566111.0\u003e but was:\u003cInfinity\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c566111.0\u003e but was:\u003c9.223372036854776E18\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.routing.util.MountainBikeFlagEncoderTest",
      "failingMethods": [
        "com.graphhopper.routing.util.MountainBikeFlagEncoderTest#testHandleWayTags",
        "com.graphhopper.routing.util.MountainBikeFlagEncoderTest#testTramStations",
        "com.graphhopper.routing.util.MountainBikeFlagEncoderTest#testPriority",
        "com.graphhopper.routing.util.MountainBikeFlagEncoderTest#testHandleWayTagsInfluencedByRelation",
        "com.graphhopper.routing.util.MountainBikeFlagEncoderTest#testHandleCommonWayTags",
        "com.graphhopper.routing.util.MountainBikeFlagEncoderTest#testHandleWayTagsCallsHandlePriority"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[small way, unpaved]\u003e but was:\u003c[]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[small way, unpaved]\u003e but was:\u003c[]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c1.0\u003e but was:\u003c7.0\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Values should be different. Actual: 0",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[get off the bike]\u003e but was:\u003c[]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c0.8571428571428571\u003e but was:\u003c6.0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 6,
      "nbErrors": 0
    },
    {
      "className": "com.graphhopper.storage.GraphHopperStorageLMTest",
      "failingMethods": [],
      "erroringMethods": [
        "com.graphhopper.storage.GraphHopperStorageLMTest#testLoad"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "entry in encoder list not supported surface",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ]
}