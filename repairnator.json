{
  "totalNumberSkippingTests": 0,
  "bugType": "failing_passing",
  "totalNumberErroringTests": 0,
  "repo": "prestodb/presto",
  "failingModule": "/root/workspace/prestodb/presto/315171376/presto-tests",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 14,
  "error-types": [
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 6616,
  "failing-test-cases": [
    {
      "className": "com.facebook.presto.tests.TestTpchDistributedQueries",
      "failingMethods": [
        "com.facebook.presto.tests.TestTpchDistributedQueries#testCorrelatedExistsSubqueries",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testExistsSubquery",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testJoinWithScalarSubqueryInOnClause",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testScalarSubquery",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testExistsSubqueryWithGroupBy",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testScalarSubqueryWithGroupBy",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testJoinWithMultipleScalarSubqueryClauses",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testCorrelatedScalarSubqueriesWithScalarAggregation"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT count(*) FROM (SELECT * FROM orders ORDER BY orderkey LIMIT 10) o1 JOIN (SELECT * FROM orders ORDER BY orderkey LIMIT 5) o2 ON NOT EXISTS(SELECT 1 FROM orders i WHERE o1.orderkey \u003c o2.orderkey AND i.orderkey % 10000 \u003d 0)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT count(*) FROM (SELECT * FROM orders ORDER BY orderkey LIMIT 10) o1 JOIN (SELECT * FROM orders ORDER BY orderkey LIMIT 5) o2 ON NOT 1 \u003d (SELECT avg(i.orderkey) FROM orders i WHERE o1.orderkey \u003c o2.orderkey AND i.orderkey % 10000 \u003d 0)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT o1.orderkey, COUNT(*) FROM orders o1 LEFT JOIN (SELECT * FROM orders LIMIT 10) o2 ON (SELECT avg(orderkey) FROM ORDERS) \u003e 3 GROUP BY o1.orderkey ORDER BY o1.orderkey LIMIT 5",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT linenumber, min(orderkey), EXISTS(SELECT orderkey FROM orders WHERE orderkey \u003c 7)FROM lineitem GROUP BY linenumber, EXISTS(SELECT orderkey FROM orders WHERE orderkey \u003c 7)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT * FROM (VALUES 1,2,3,4) t(x)  JOIN (VALUES 1,2,3,5) t2(y) ON (x \u003d (VALUES 1)) \u003d (y \u003d (VALUES 1)) AND (x \u003d (SELECT 2)) !\u003d (y \u003d (SELECT 3))",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT count() FROM nation a INNER JOIN nation b ON a.name \u003d (SELECT max(name) FROM nation) INNER JOIN nation c ON c.name \u003d split_part(b.name,\u0027\u003c\u0027,2)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT o1.orderkey, COUNT(*) FROM orders o1 RIGHT JOIN (SELECT * FROM orders ORDER BY orderkey LIMIT 10) o2 ON o1.orderkey BETWEEN (SELECT avg(orderkey) FROM orders) - 10 AND (SELECT avg(orderkey) FROM orders) + 10 GROUP BY o1.orderkey",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT linenumber, min(orderkey), (SELECT max(orderkey) FROM orders WHERE orderkey \u003c 7)FROM lineitem GROUP BY linenumber, (SELECT max(orderkey) FROM orders WHERE orderkey \u003c 7)",
          "isError": false
        }
      ],
      "nbFailures": 8,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.tests.TestDistributedSpilledQueries",
      "failingMethods": [
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testExistsSubqueryWithGroupBy",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testJoinWithMultipleScalarSubqueryClauses",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testScalarSubquery",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testExistsSubquery",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testScalarSubqueryWithGroupBy",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testCorrelatedScalarSubqueriesWithScalarAggregation"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT count(*) FROM (SELECT * FROM orders ORDER BY orderkey LIMIT 10) o1 JOIN (SELECT * FROM orders ORDER BY orderkey LIMIT 5) o2 ON NOT 1 \u003d (SELECT avg(i.orderkey) FROM orders i WHERE o1.orderkey \u003c o2.orderkey AND i.orderkey % 10000 \u003d 0)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT o1.orderkey, COUNT(*) FROM orders o1 LEFT JOIN (SELECT * FROM orders LIMIT 10) o2 ON (SELECT avg(orderkey) FROM ORDERS) \u003e 3 GROUP BY o1.orderkey ORDER BY o1.orderkey LIMIT 5",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT linenumber, min(orderkey), EXISTS(SELECT orderkey FROM orders WHERE orderkey \u003c 7)FROM lineitem GROUP BY linenumber, EXISTS(SELECT orderkey FROM orders WHERE orderkey \u003c 7)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT * FROM (VALUES 1,2,3,4) t(x) right JOIN (VALUES 1,2,3,5) t2(y) ON (x \u003d (VALUES 1)) AND (y \u003d (VALUES 2)) AND (x in (VALUES 2)) \u003d (y in (VALUES 1))",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT o1.orderkey, COUNT(*) FROM (SELECT * FROM orders ORDER BY orderkey LIMIT 5) o1 LEFT JOIN (SELECT * FROM orders ORDER BY orderkey LIMIT 10) o2 ON o1.orderkey BETWEEN (SELECT avg(orderkey) FROM orders) - 10 AND (SELECT avg(orderkey) FROM orders) + 10 GROUP BY o1.orderkey",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT linenumber, min(orderkey), (SELECT max(orderkey) FROM orders WHERE orderkey \u003c 7)FROM lineitem GROUP BY linenumber, (SELECT max(orderkey) FROM orders WHERE orderkey \u003c 7)",
          "isError": false
        }
      ],
      "nbFailures": 6,
      "nbErrors": 0
    }
  ]
}