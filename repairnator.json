{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 110,
  "repo": "spring-projects/spring-data-mongodb",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 5,
      "ComputeTestDir": 0,
      "ResolveDependency": 133,
      "BuildProject": 112,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 4,
      "CloneRepository": 6,
      "NopolRepair": 7,
      "CheckoutPatchedBuild": 0,
      "TestProject": 4018,
      "GatherTestInformation": 0,
      "PushIncriminatedBuild": 7,
      "AstorRepair": 6000,
      "CommitPatch": 5
    },
    "FailureNames": [
      "java.lang.IllegalStateException"
    ],
    "NbFailingTests": 110,
    "BugCommitUrl": "http://github.com/spring-projects/spring-data-mongodb/commit/1acf00b03928c08b8ebff35625d534390779e9d7",
    "ReproductionDate": "May 11, 2018 4:03:53 PM",
    "BuggyBuildId": 377738736,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/spring-projects/spring-data-mongodb/builds/377738736",
    "BuggyBuildDate": "May 11, 2018 4:03:45 PM",
    "BugCommit": "1acf00b03928c08b8ebff35625d534390779e9d7",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 122,
    "NbLibraries": 85,
    "NbFileApp": 824,
    "NbFileTests": 760,
    "NbCPU": 32,
    "FreeMemory": 316454712,
    "TotalMemory": 1021313024,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 628076544,
      "ComputeClasspath": 517105464,
      "ComputeTestDir": 565203704,
      "ResolveDependency": 627578632,
      "BuildProject": 514021440,
      "NPERepair": 519347008,
      "ComputeSourceDir": 517105464,
      "InitRepoToPush": 468814288,
      "CloneRepository": 647700648,
      "NopolRepair": 420929384,
      "CheckoutPatchedBuild": 316454712,
      "TestProject": 601524656,
      "GatherTestInformation": 588702704,
      "PushIncriminatedBuild": 519347008,
      "AstorRepair": 644134400,
      "CommitPatch": 316454712
    }
  },
  "bugCommit": "https://github.com/spring-projects/spring-data-mongodb/compare/85aef4836d49...1acf00b03928",
  "failingModule": "/root/workspace/spring-projects/spring-data-mongodb/377738736/spring-data-mongodb",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 0,
  "error-types": [
    "java.lang.IllegalStateException"
  ],
  "totalNumberRunningTests": 122,
  "failing-test-cases": [
    {
      "className": "org.springframework.data.mongodb.repository.config.MongoRepositoriesRegistrarIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.repository.config.MongoRepositoriesRegistrarIntegrationTests#testConfiguration"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonByShippingAddressesCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByFirstNameIgnoreCase",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#bindsDateParameterForLessThanPredicateCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#exposesPersistentEntity",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldSupportSortingWithQSort",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByLocationWithinBox",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#readsOpenProjection",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesGeoPageQueryForWithPageRequestForPageInBetween",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deletesPersonsByFirstname",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByUUIDShouldReturnCorrectResult",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonsByFirstnameAsArray",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonInAgeRangeCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldNotLimitPagedQueryWhenPageRequestWithinBounds",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#assertDefaultMappingContextIsWired",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByNamedQuery",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldFindByFirstnameAndCurrentUserWithCustomQuery",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findSingleEntityThrowsErrorWhenNotUnique",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deleteByUsingAnnotatedQueryShouldReturnListOfDeletedElementsWhenRetunTypeIsCollectionLike",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesGeoPageQueryForWithPageRequestForJustOneElement",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesPagedFinderWithAnnotatedQueryCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesDerivedExistsProjectionToBoolean",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#countsPersonsByFirstname",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deleteByUsingAnnotatedQueryShouldReturnNumberOfDocumentsRemovedIfReturnTypeIsLong",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesAnnotatedExistProjection",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesDerivedEndsWithQueryCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#bindsDateParameterForManuallyDefinedQueryCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#existsWorksCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsSliceOfPersons",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByLocationNear",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesGeoPageQueryForResultsCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deleteByShouldReturnListOfDeletedElementsWhenRetunTypeIsCollectionLike",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#gettingNonFirstPageWorksWithoutLimitBeingSet",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deletesPersonCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#rejectsDuplicateEmailAddressOnSave",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByLocationWithinCircle",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#readsClosedProjection",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByLocationNearUsingGeoJsonType",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#appliesStaticAndDynamicSorting",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByExampleShouldResolveStuffCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deleteByUsingAnnotatedQueryShouldRemoveElementsMatchingDerivedQuery",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#returnsOrderedResultsForQuerydslOrderSpecifier",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesGeoPageQueryForWithPageRequestForJustOneElementEmptyPage",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#considersSortForAnnotatedQuery",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByCustomQueryLastnameAndStreetInList",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#bindsDateParameterToBeforePredicateCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldLimitCollectionQueryToMaxResultsWhenPresent",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findFirstEntityReturnsFirstResultEvenForNonUniqueMatches",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesQueryWithDBRefReferenceCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByLastnameAndOrdersCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByQueryDslLastnameSpec",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonByAddressCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonsByFirstnameNotContains",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonsByFirstnameNotLike",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldReturnEmptyWhenPageRequestedPageIsTotallyOutOfScopeForLimit",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deleteByShouldReturnZeroInCaseNoDocumentHasBeenRemovedAndReturnTypeIsNumber",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesAnnotatedCountProjection",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findBySkillsContains",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByCustomQueryFirstnamesInListAndLastname",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesGeoPageQueryForWithPageRequestForPageAtTheEnd",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesDerivedCountProjectionToInt",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findOptionalSingleEntityThrowsErrorWhenNotUnique",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#bindsDateParameterForGreaterThanPredicateCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesDerivedCountProjection",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldExecuteFindOnDbRefCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesSingleEntityQueryWithProjectionCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldFindByFirstnameForSpELExpressionWithParameterVariableOnly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPagedPersons",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesDerivedStartsWithQueryCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldBindPlaceholdersUsedAsKeysCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldSupportSortingWithQSortByQueryDslOrderSpecifier",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findBySkillsNotContains",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesAndQueryCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonsByLastname",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonById",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesPagedFinderCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByFirstnameStartingWithIgnoreCase",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleBySexPaginated",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldFindPersonsWhenUsingQueryDslPerdicatedOnIdProperty",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldAllowReturningJava8StreamInCustomQuery",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByNestedPropertyInCollectionShouldFindMatchingDocuments",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByFirstNameIgnoreCaseWithNull",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#bindsDateParameterForAfterPredicateCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByFirstnameEndingWithIgnoreCase",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findAllByExampleShouldResolveStuffCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonsByFirstname",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldFindByFirstnameForSpELExpressionWithParameterIndexOnly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByZipCode",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByFirstnameContainingIgnoreCase",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByFirstnameLikeWithNull",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsAllMusicians",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByFirstnameNotIgnoreCase",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldSupportSortingByQueryDslOrderSpecifier",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deleteByShouldReturnNumberOfDocumentsRemovedIfReturnTypeIsLong",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleBySexCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesGeoNearQueryForResultsCorrectlyWhenGivenMinAndMaxDistance",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#sliceShouldTraverseElementsWithoutSkippingOnes",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#readsDocumentsWithNestedPolymorphismCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findUsingAnnotatedQueryOnDBRef",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesGeoNearQueryForResultsCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPagedPeopleByPredicate",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonsByFirstnameLike",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsAllWithGivenIds",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deleteByShouldRemoveElementsMatchingDerivedQuery",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByLocationWithinPolygon",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deletesPersonByIdCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByzipCodePredicate",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleUsingNotPredicate",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deleteByShouldReturnEmptyListInCaseNoDocumentHasBeenRemovedAndReturnTypeIsCollectionLike",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldLimitPagedQueryWhenPageRequestExceedsUpperBoundary"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 109
    }
  ]
}