{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 7,
  "repo": "RossBlassingame/JPL-CUSeniorProjects",
  "bugCommit": "https://github.com/RossBlassingame/JPL-CUSeniorProjects/compare/ae71cfa01245...5d39483ef352",
  "failingModule": "/root/workspace/RossBlassingame/JPL-CUSeniorProjects/362864844",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 42,
  "error-types": [
    "junit.framework.AssertionFailedError",
    "junit.framework.ComparisonFailure",
    "java.lang.IllegalArgumentException",
    "java.lang.NullPointerException"
  ],
  "totalNumberRunningTests": 92,
  "failing-test-cases": [
    {
      "className": "mars.MapTest",
      "failingMethods": [],
      "erroringMethods": [
        "mars.MapTest#testGeotiffMaxHeight",
        "mars.MapTest#testGeotiffMinlessthanMax",
        "mars.MapTest#testGeotiffGetValueBad",
        "mars.MapTest#testGeotiffGetValueValid",
        "mars.MapTest#testGeotiffMinHeight"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "No input stream for the provided source",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "No input stream for the provided source",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "No input stream for the provided source",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "No input stream for the provided source",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "No input stream for the provided source",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "mars.OutputTest",
      "failingMethods": [
        "mars.OutputTest#testMultipleOutputRequestFormatting"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cFile...\u003e but was:\u003cTerminal...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "mars.AppTest",
      "failingMethods": [
        "mars.AppTest#testRoverTestSlopeValid"
      ],
      "erroringMethods": [
        "mars.AppTest#testpixeltoLatLong",
        "mars.AppTest#testRoverGetSlopeZero"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "No input stream for the provided source",
          "isError": true
        }
      ],
      "nbFailures": 1,
      "nbErrors": 2
    },
    {
      "className": "mars.AlgorithmTest",
      "failingMethods": [
        "mars.AlgorithmTest#testAstarAlgorithmUnlimitedNonRecursiveFlatCase",
        "mars.AlgorithmTest#testBreadthFirstSearchAlgorithmLimitedNoBacktrack",
        "mars.AlgorithmTest#testDijkstraAlgorithmLimitedSlopedCase",
        "mars.AlgorithmTest#testBestFirstAlgorithmLimitedFlatCase",
        "mars.AlgorithmTest#testDijkstraAlgorithmUnlimitedFlatCase",
        "mars.AlgorithmTest#testGreedyAlgorithmUnlimitedFlatCase",
        "mars.AlgorithmTest#testBestFirstAlgorithmUnlimitedSlopedCase",
        "mars.AlgorithmTest#testBestFirstAlgorithmUnlimitedFlatCase",
        "mars.AlgorithmTest#testIDAStarAlgorithmLimitedFlatCase",
        "mars.AlgorithmTest#testAstarAlgorithmLimitedCheckIfViewedGood",
        "mars.AlgorithmTest#testBestFirstAlgorithmUnlimitedNoBacktrack",
        "mars.AlgorithmTest#testAstarAlgorithmUnlimitedFlatCase",
        "mars.AlgorithmTest#testGreedyAlgorithmLimitedFlatCase",
        "mars.AlgorithmTest#testBestFirstAlgorithmLimitedSlopedCase",
        "mars.AlgorithmTest#testBreadthFirstSearchAlgorithmLimitedFlatCase",
        "mars.AlgorithmTest#testGreedyAlgorithmUnlimitedSlopedCase",
        "mars.AlgorithmTest#testBreadthFirstSearchAlgorithmLimitedValidRoute",
        "mars.AlgorithmTest#testBreadthFirstSearchAlgorithmUnlimitedValidRoute",
        "mars.AlgorithmTest#testAstarAlgorithmLimitedSlopedCase",
        "mars.AlgorithmTest#testDijkstraAlgorithmUnlimitedValidRoute",
        "mars.AlgorithmTest#testDijkstraAlgorithmUnlimitedNoBacktrack",
        "mars.AlgorithmTest#testAstarAlgorithmLimitedFlatCase",
        "mars.AlgorithmTest#testDijkstraAlgorithmLimitedValidRoute",
        "mars.AlgorithmTest#testBestFirstAlgorithmLimitedNoBacktrack",
        "mars.AlgorithmTest#testGreedyAlgorithmComparedFlatCase",
        "mars.AlgorithmTest#testBreadthFirstSearchAlgorithmUnlimitedNoBacktrack",
        "mars.AlgorithmTest#testDijkstraAlgorithmUnlimitedSlopedCase",
        "mars.AlgorithmTest#testGreedyAlgorithmUnlimitedValidRoute",
        "mars.AlgorithmTest#testGreedyAlgorithmUnlimitedNoBacktrack",
        "mars.AlgorithmTest#testAstarAlgorithmLimitedCheckIfViewedBad",
        "mars.AlgorithmTest#testBestFirstAlgorithmUnlimitedValidRoute",
        "mars.AlgorithmTest#testDijkstraAlgorithmLimitedFlatCase",
        "mars.AlgorithmTest#testBestFirstAlgorithmLimitedValidRoute",
        "mars.AlgorithmTest#testBreadthFirstSearchAlgorithmUnlimitedFlatCase",
        "mars.AlgorithmTest#testAStarAlgorithmLimitedValidRoute",
        "mars.AlgorithmTest#testAstarAlgorithmLimitedCheckIfViewedRepeated",
        "mars.AlgorithmTest#testBreadthFirstSearchAlgorithmLimitedSlopedCase",
        "mars.AlgorithmTest#testBreadthFirstSearchAlgorithmUnlimitedSlopedCase",
        "mars.AlgorithmTest#testDijkstraAlgorithmLimitedBacktrack",
        "mars.AlgorithmTest#testAstarAlgorithmComparedSlopedCase"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.IndexOutOfBoundsException",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "java.lang.Exception",
          "isError": false
        }
      ],
      "nbFailures": 40,
      "nbErrors": 0
    }
  ]
}