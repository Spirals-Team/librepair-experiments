{
  "totalNumberSkippingTests": 4,
  "bugType": "only_fail",
  "totalNumberErroringTests": 4,
  "repo": "INRIA/spoon",
  "metrics": {
    "ReproductionDate": "May 26, 2018 1:32:58 PM",
    "BuggyBuildId": 384059134,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/INRIA/spoon/builds/384059134",
    "BuggyBuildDate": "May 26, 2018 1:32:34 PM",
    "BugCommit": "2626b273390efb16bf2bcbd5b05b55deb169a50d",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 1,
    "NbLibraries": 14,
    "NbFileApp": 1122,
    "NbFileTests": 664,
    "NbCPU": 32,
    "FreeMemory": 4285307136,
    "TotalMemory": 6142558208,
    "AngelicValuesByTest": {
      "spoon/test/factory/FactoryTest": 0,
      "spoon/processing/CtGenerationTest": 0,
      "spoon/MavenLauncherTest": 0,
      "spoon/test/main/MainTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 394507368,
      "ComputeClasspath": 470827112,
      "ComputeTestDir": 377541376,
      "BuildProject": 369627288,
      "ComputeSourceDir": 470827112,
      "InitRepoToPush": 474840360,
      "AstorJMut": 4416286136,
      "CloneRepository": 502986712,
      "CheckoutPatchedBuild": 4285307136,
      "Nopol": 4814682840,
      "NPEFix": 4814682840,
      "TestProject": 356434624,
      "GatherTestInformation": 741708728,
      "CommitPatch": 4285307136
    },
    "NbSucceedingTests": 1424,
    "FailureNames": [
      "spoon.SpoonException",
      "java.lang.AssertionError"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 3,
      "ComputeClasspath": 5,
      "ComputeTestDir": 0,
      "BuildProject": 41,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 7,
      "AstorJMut": 12,
      "CloneRepository": 6,
      "CheckoutPatchedBuild": 0,
      "Nopol": 62,
      "NPEFix": 0,
      "TestProject": 376,
      "GatherTestInformation": 0,
      "CommitPatch": 5
    },
    "NbFailingTests": 2,
    "NbErroringTests": 4,
    "NbSkippingTests": 4,
    "NbRunningTests": 1430,
    "BugCommitUrl": "http://github.com/INRIA/spoon/commit/2626b273390efb16bf2bcbd5b05b55deb169a50d"
  },
  "failingModule": "/root/workspace/INRIA/spoon/384059134",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 2,
  "error-types": [
    "spoon.SpoonException",
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 1430,
  "failing-test-cases": [
    {
      "className": "spoon.test.main.MainTest",
      "failingMethods": [],
      "erroringMethods": [
        "testTest",
        "testMain_checkGenericContracts"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "java.lang.InstantiationException: spoon.support.reflect.declaration.CtPackageImpl$1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "java.lang.InstantiationException: spoon.support.reflect.declaration.CtPackageImpl$1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.processing.CtGenerationTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGenerateCloneVisitor"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Get more than one setter. Please make an more ingenious method to get setter method. 0 @spoon.reflect.annotations.MetamodelPropertyField(role \u003d spoon.reflect.path.CtRole.SUB_PACKAGE)\nprotected spoon.support.util.ModelSet\u003cspoon.reflect.declaration.CtPackage\u003e packs \u003d new spoon.support.util.ModelSet\u003cspoon.reflect.declaration.CtPackage\u003e(spoon.support.comparator.QualifiedNameComparator.INSTANCE) {\n private static final long serialVersionUID \u003d 1L;\n\n @java.lang.Override\n protected spoon.reflect.declaration.CtElement getOwner() {\n  return spoon.support.reflect.declaration.CtPackageImpl.this;\n }\n\n @java.lang.Override\n protected spoon.reflect.path.CtRole getRole() {\n  return spoon.reflect.path.CtRole.SUB_PACKAGE;\n }\n\n @java.lang.Override\n public boolean add(spoon.reflect.declaration.CtPackage pack) {\n  if (pack \u003d\u003d null) {\n   return false;\n  }\n  // they are the same\n  if (spoon.support.reflect.declaration.CtPackageImpl.this.getQualifiedName().equals(pack.getQualifiedName())) {\n   addAllTypes(pack, spoon.support.reflect.declaration.CtPackageImpl.this);\n   addAllPackages(pack, spoon.support.reflect.declaration.CtPackageImpl.this);\n   return false;\n  }\n  // it already exists\n  for (spoon.reflect.declaration.CtPackage p1 : packs) {\n   if (p1.getQualifiedName().equals(pack.getQualifiedName())) {\n    addAllTypes(pack, p1);\n    addAllPackages(pack, p1);\n    return false;\n   }\n  }\n  return super.add(pack);\n }\n};",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.MavenLauncherTest",
      "failingMethods": [
        "mavenLauncherTestMultiModulesAndVariables",
        "spoonMavenLauncherTest"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Content of classpath: ",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c7\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.factory.FactoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCtModel"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "java.lang.InstantiationException: spoon.support.reflect.declaration.CtPackageImpl$1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ]
}