{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 27,
  "repo": "Sammers21/vertx-rabbitmq-client",
  "bugCommit": "https://github.com/Sammers21/vertx-rabbitmq-client/compare/f48975fd6947...1101fb38f7fb",
  "failingModule": "/root/workspace/Sammers21/vertx-rabbitmq-client/363585585",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 0,
  "error-types": [
    "java.util.concurrent.ExecutionException"
  ],
  "totalNumberRunningTests": 32,
  "failing-test-cases": [
    {
      "className": "io.vertx.rabbitmq.RabbitMQClientReconnectTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.vertx.rabbitmq.RabbitMQClientReconnectTest#testReconnect"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "io.vertx.rabbitmq.RabbitMQConsumptionStreamingTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.vertx.rabbitmq.RabbitMQConsumptionStreamingTest#keepMostRecentOptionShouldWorks",
        "io.vertx.rabbitmq.RabbitMQConsumptionStreamingTest#endHandlerAndCancelShouldWorks",
        "io.vertx.rabbitmq.RabbitMQConsumptionStreamingTest#pauseAndResumeShouldWork",
        "io.vertx.rabbitmq.RabbitMQConsumptionStreamingTest#consumerTagShouldBeTheSameAsInAMessage",
        "io.vertx.rabbitmq.RabbitMQConsumptionStreamingTest#whenStreamIsPausedAndNoBufferingMessagesShouldNotBeStored"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "io.vertx.rabbitmq.RabbitMQServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.vertx.rabbitmq.RabbitMQServiceTest#testDeclareExchangeWithAlternateExchange",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testBasicConsumerWithErrorHandler",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testMessageOrderingWhenConsuming",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testIsConnected",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testBasicConsume",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testMessageOrderingWhenConsumingNewApi",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testBasicConsumerNoAutoAck",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testBasicPublish",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testBasicConsumer",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testBasicConsumeNoAutoAck",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testIsOpenChannel",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testBasicPublishWithConfirm",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testQueueDeclareAndDelete",
        "io.vertx.rabbitmq.RabbitMQServiceTest#consumerPrefetch",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testBasicPublishWithConfirmAndTimeout",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testBasicGet",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testBasicConsumeWithErrorHandler",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testDeclareExchangeWithDLX",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testQueueDeclareAndDeleteWithConfig",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testBasicPublishJson",
        "io.vertx.rabbitmq.RabbitMQServiceTest#testGetMessageCount"
      ],
      "failures": [
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        },
        {
          "failureName": "java.util.concurrent.ExecutionException",
          "failureDetail": "java.io.IOException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 21
    }
  ]
}