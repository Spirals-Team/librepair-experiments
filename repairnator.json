{
  "bugType": "only_fail",
  "hostname": "spirals-repairnator",
  "repo": "nosan/embedded-cassandra",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 18,
      "ComputeTestDir": 0,
      "BuildProject": 77,
      "InitRepoToPush": 2,
      "ComputeSourceDir": 1,
      "ComputeModules": 0,
      "AstorJMut": 158,
      "CloneRepository": 5,
      "CheckoutPatchedBuild": 0,
      "NopolAllTests": 7207,
      "NPEFix": 0,
      "TestProject": 122,
      "GatherTestInformation": 0,
      "CommitPatch": 6
    },
    "FailureNames": [
      "java.io.IOException",
      "java.lang.AssertionError"
    ],
    "NbFailingTests": 4,
    "NbErroringTests": 6,
    "NbSkippingTests": 0,
    "NbRunningTests": 74,
    "BugCommitUrl": "http://github.com/nosan/embedded-cassandra/commit/be2b488e11c85a2ff8afca97e007ccc323900e90",
    "ReproductionDate": "Jul 19, 2018 8:55:57 AM",
    "BuggyBuildId": 405786083,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/nosan/embedded-cassandra/builds/405786083",
    "BuggyBuildDate": "Jul 19, 2018 8:37:08 AM",
    "BugCommit": "be2b488e11c85a2ff8afca97e007ccc323900e90",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 31,
    "NbFileApp": 48,
    "NbFileTests": 46,
    "NbCPU": 4,
    "FreeMemory": 625183472,
    "TotalMemory": 932708352,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 215245840,
      "ComputeClasspath": 139366672,
      "ComputeTestDir": 130060888,
      "BuildProject": 207262256,
      "InitRepoToPush": 141349256,
      "ComputeSourceDir": 569720920,
      "ComputeModules": 565133760,
      "AstorJMut": 190344536,
      "CloneRepository": 217571224,
      "CheckoutPatchedBuild": 625183472,
      "NopolAllTests": 188557696,
      "NPEFix": 188557696,
      "TestProject": 191396728,
      "GatherTestInformation": 180748648,
      "CommitPatch": 625183472
    },
    "NbSucceedingTests": 64
  },
  "failing-test-cases": [
    {
      "className": "com.github.nosan.embedded.cassandra.process.CassandraStarterTests",
      "failingMethods": [
        "shouldStartCassandraWithDisableRpcAndNativeTransportPorts",
        "shouldFailWithTimeoutError",
        "shouldFailWithInvalidConfigurationError"
      ],
      "erroringMethods": [
        "shouldBePossibleToStartMultiplyInstances",
        "shouldStartCassandraUsingRpcTransport",
        "shouldBeRestartedUsingNativeTransportPort",
        "shouldStartCassandraWithNativeTransport"
      ],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of java.io.IOException and exception with message a string containing \"Missing required directive CommitLogSync\")\n     but: exception with message a string containing \"Missing required directive CommitLogSync\" message was \"Could not start a process \u0027829\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \n[P:829] Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.\n[P:829] If you really want to force running Cassandra as root, use -R command line option.\n\n--- END --- \"\nStacktrace was: java.io.IOException: Could not start a process \u0027829\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \n[P:829] Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.\n[P:829] If you really want to force running Cassandra as root, use -R command line option.\n\n--- END --- \n at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:114)\n at de.flapdoodle.embed.process.runtime.AbstractProcess.\u003cinit\u003e(AbstractProcess.java:116)\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.\u003cinit\u003e(CassandraProcess.java:67)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)\n at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.start(CassandraStarterTests.java:64)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.start(CassandraStarterTests.java:55)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.shouldFailWithInvalidConfigurationError(CassandraStarterTests.java:105)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)\n",
          "isError": false
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process \u0027898\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \n[P:898] Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.\n[P:898] If you really want to force running Cassandra as root, use -R command line option.\n\n--- END --- ",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of java.net.ConnectException and exception with message a string containing \"Connection refused\")\n     but: an instance of java.net.ConnectException \u003cjava.io.IOException: Could not start a process \u0027967\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \n[P:967] Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.\n[P:967] If you really want to force running Cassandra as root, use -R command line option.\n\n--- END --- \u003e is a java.io.IOException\nStacktrace was: java.io.IOException: Could not start a process \u0027967\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \n[P:967] Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.\n[P:967] If you really want to force running Cassandra as root, use -R command line option.\n\n--- END --- \n at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:114)\n at de.flapdoodle.embed.process.runtime.AbstractProcess.\u003cinit\u003e(AbstractProcess.java:116)\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.\u003cinit\u003e(CassandraProcess.java:67)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)\n at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.start(CassandraStarterTests.java:64)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.shouldStartCassandraWithDisableRpcAndNativeTransportPorts(CassandraStarterTests.java:137)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)\n",
          "isError": false
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process \u00271036\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \n[P:1036] Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.\n[P:1036] If you really want to force running Cassandra as root, use -R command line option.\n\n--- END --- ",
          "isError": true
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process \u00271105\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \n[P:1105] Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.\n[P:1105] If you really want to force running Cassandra as root, use -R command line option.\n\n--- END --- ",
          "isError": true
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process \u00271174\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \n[P:1174] Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.\n[P:1174] If you really want to force running Cassandra as root, use -R command line option.\n\n--- END --- ",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of java.io.IOException and exception with message a string containing \"Could not start a process.\")\n     but: exception with message a string containing \"Could not start a process.\" message was \"Could not start a process \u00271243\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \n[P:1243] Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.\n[P:1243] If you really want to force running Cassandra as root, use -R command line option.\n\n--- END --- \"\nStacktrace was: java.io.IOException: Could not start a process \u00271243\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \n[P:1243] Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.\n[P:1243] If you really want to force running Cassandra as root, use -R command line option.\n\n--- END --- \n at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:114)\n at de.flapdoodle.embed.process.runtime.AbstractProcess.\u003cinit\u003e(AbstractProcess.java:116)\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.\u003cinit\u003e(CassandraProcess.java:67)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)\n at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.start(CassandraStarterTests.java:64)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.start(CassandraStarterTests.java:55)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.shouldFailWithTimeoutError(CassandraStarterTests.java:114)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)\n",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 4
    },
    {
      "className": "com.github.nosan.embedded.cassandra.CassandraTests",
      "failingMethods": [
        "shouldNotStartCassandraIfCassandraHasBeenAlreadyStarted"
      ],
      "erroringMethods": [
        "shouldStartCassandraUsingDefaultConfiguration",
        "shouldBeAbleToRestartCassandra"
      ],
      "failures": [
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process \u0027414\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \n[P:414] Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.\n[P:414] If you really want to force running Cassandra as root, use -R command line option.\n\n--- END --- ",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of java.io.IOException and exception with message a string containing \"Cassandra has already been started\")\n     but: exception with message a string containing \"Cassandra has already been started\" message was \"Could not start a process \u0027483\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \n[P:483] Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.\n[P:483] If you really want to force running Cassandra as root, use -R command line option.\n\n--- END --- \"\nStacktrace was: java.io.IOException: Could not start a process \u0027483\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \n[P:483] Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.\n[P:483] If you really want to force running Cassandra as root, use -R command line option.\n\n--- END --- \n at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:114)\n at de.flapdoodle.embed.process.runtime.AbstractProcess.\u003cinit\u003e(AbstractProcess.java:116)\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.\u003cinit\u003e(CassandraProcess.java:67)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)\n at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)\n at com.github.nosan.embedded.cassandra.Cassandra.start(Cassandra.java:171)\n at com.github.nosan.embedded.cassandra.CassandraTests.start(CassandraTests.java:40)\n at com.github.nosan.embedded.cassandra.CassandraTests.shouldNotStartCassandraIfCassandraHasBeenAlreadyStarted(CassandraTests.java:62)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)\n",
          "isError": false
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process \u0027553\u0027.\nFailure:\u003cEOF\u003e\nOutput:\n--- START --- \n[P:553] Running Cassandra as root user or group is not recommended - please start Cassandra using a different system user.\n[P:553] If you really want to force running Cassandra as root, use -R command line option.\n\n--- END --- ",
          "isError": true
        }
      ],
      "nbFailures": 1,
      "nbErrors": 2
    }
  ],
  "failingModule": "/root/workspace/nosan/embedded-cassandra/405786083/embedded-cassandra",
  "bugCommit": "https://github.com/nosan/embedded-cassandra/compare/04b1154269f4...be2b488e11c8"
}