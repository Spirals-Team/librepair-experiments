{
  "totalNumberSkippingTests": 0,
  "bugType": "failing_passing",
  "totalNumberErroringTests": 0,
  "repo": "prestodb/presto",
  "failingModule": "/root/workspace/prestodb/presto/267319748/presto-tests",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 40,
  "error-types": [
    "com.facebook.presto.client.FailureInfo$FailureException",
    "java.lang.AssertionError",
    "com.facebook.presto.spi.PrestoException"
  ],
  "totalNumberRunningTests": 6152,
  "failing-test-cases": [
    {
      "className": "com.facebook.presto.tests.TestQuerySpillLimits",
      "failingMethods": [
        "com.facebook.presto.tests.TestQuerySpillLimits#testMaxSpillPerNodeLimit",
        "com.facebook.presto.tests.TestQuerySpillLimits#testQueryMaxSpillPerNodeLimit"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "com.facebook.presto.spi.PrestoException",
          "failureDetail": "No free space available for spill",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.spi.PrestoException",
          "failureDetail": "No free space available for spill",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.tests.TestDistributedSpilledQueries",
      "failingMethods": [
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testAggregationPushedBelowOuterJoin",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testApproxSetDoubleGroupBy",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testApproximateCountDistinctGroupBy",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testCube",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testCorrelatedInPredicateSubqueries",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testCorrelatedExistsSubqueriesWithPrunedCorrelationSymbols",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testCustomRank",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testExceptWithAggregation",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testCubeNoInput",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testDistinctHaving",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testCorrelatedExistsSubqueries",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testApproxSetGroupByWithOnlyNullsInOneGroup",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testExcept",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testDistinctJoin",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testAssignUniqueId",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testApproxSetBigintGroupBy",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testRollupOverUnion",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#test15WayGroupBy",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testApproxSetVarcharGroupBy",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testCustomSum",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testCorrelatedExistsSubqueriesWithEqualityPredicatesInWhere",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testP4ApproxSetGroupByWithNulls",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testP4ApproxSetVarcharGroupBy",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testApproximateCountDistinctGroupByWithStandardError",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testP4ApproxSetDoubleGroupBy",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testP4ApproxSetGroupByWithOnlyNullsInOneGroup",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testAggregationOverRightJoinOverSingleStreamProbe",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testSemiJoin",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testScalarSubqueryWithGroupBy",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testOrderByWithAggregation",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testDistinctWindow",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testDistinctGroupBy",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testCorrelatedScalarSubqueriesWithScalarAggregationAndEqualityPredicatesInWhere",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testDistinctMultipleFields",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testApproxPercentile",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testApproxSetGroupByWithNulls",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testCorrelatedScalarSubqueriesWithScalarAggregation",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testMaxMinStringWithNulls"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT     orderkey + 1, orderkey + 2, orderkey + 3, orderkey + 4, orderkey + 5,     orderkey + 6, orderkey + 7, orderkey + 8, orderkey + 9, orderkey + 10,     count(*) FROM orders GROUP BY     orderkey + 1, orderkey + 2, orderkey + 3, orderkey + 4, orderkey + 5,     orderkey + 6, orderkey + 7, orderkey + 8, orderkey + 9, orderkey + 10",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT\n  value\nFROM\n(\n    SELECT\n        key\n    FROM\n        (VALUES \u0027match\u0027) as a(key)\n        LEFT JOIN (SELECT * FROM (VALUES (0)) limit 0) AS x(ignored)\n        ON TRUE\n    GROUP BY 1\n) a\nRIGHT JOIN\n(\n    VALUES\n    (\u0027match\u0027, \u0027value\u0027),\n    (\u0027no-match\u0027, \u0027value\u0027)\n) AS b(key, value)\nON a.key \u003d b.key\nGROUP BY 1\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT max(name), min(name), count(nationkey) + 1, count(nationkey) FROM (SELECT DISTINCT regionkey FROM region) as r1 LEFT JOIN nation ON r1.regionkey \u003d nation.regionkey GROUP BY r1.regionkey HAVING sum(nationkey) \u003c 20",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.client.FailureInfo$FailureException",
          "failureDetail": "No free space available for spill",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.client.FailureInfo$FailureException",
          "failureDetail": "No free space available for spill",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.client.FailureInfo$FailureException",
          "failureDetail": "No free space available for spill",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.client.FailureInfo$FailureException",
          "failureDetail": "No free space available for spill",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.client.FailureInfo$FailureException",
          "failureDetail": "No free space available for spill",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.client.FailureInfo$FailureException",
          "failureDetail": "No free space available for spill",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.client.FailureInfo$FailureException",
          "failureDetail": "No free space available for spill",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.client.FailureInfo$FailureException",
          "failureDetail": "No free space available for spill",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT count(*) FROM (SELECT * FROM (   SELECT (SELECT count(*) WHERE c \u003d 1)    FROM (SELECT CASE orderkey WHEN 1 THEN orderkey ELSE 1 END        FROM (SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem UNION ALL SELECT * FROM lineitem)) o(c)) result(a) WHERE a \u003d 1)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT count(*) FROM orders o WHERE EXISTS(SELECT 1 FROM orders i WHERE o.orderkey \u003c i.orderkey AND i.orderkey % 1000 \u003d 0)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT EXISTS(SELECT 1 WHERE o.orderkey \u003d 1) FROM orders o",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT max(o.totalprice), o.orderkey FROM orders o GROUP BY o.orderkey, EXISTS (SELECT o.orderkey)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT orderkey, clerk IN (SELECT clerk FROM orders s WHERE s.custkey \u003d o.custkey AND s.orderkey \u003c o.orderkey) FROM orders o",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT count(*) FROM orders o WHERE (SELECT avg(i.orderkey) FROM orders i WHERE o.orderkey \u003c i.orderkey AND i.orderkey % 10000 \u003d 0) \u003e 100",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT (SELECT count(*) WHERE o.orderkey \u003d 1) FROM orders o",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT linenumber, suppkey, SUM(CAST(quantity AS BIGINT)) FROM lineitem GROUP BY CUBE (linenumber, suppkey)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT linenumber, suppkey, SUM(CAST(quantity AS BIGINT)) FROM lineitem WHERE quantity \u003c 0 GROUP BY CUBE (linenumber, suppkey)",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.client.FailureInfo$FailureException",
          "failureDetail": "No free space available for spill",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT orderstatus, custom_sum(orderkey) FROM orders GROUP BY orderstatus",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT COUNT(DISTINCT clerk) as count, orderdate FROM orders GROUP BY orderdate ORDER BY count, orderdate",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT COUNT(DISTINCT clerk) AS count FROM orders GROUP BY orderdate HAVING COUNT(DISTINCT clerk) \u003e 1",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT COUNT(DISTINCT CAST(b.quantity AS BIGINT)), a.orderstatus FROM orders a JOIN lineitem b ON a.orderkey \u003d b.orderkey GROUP BY a.orderstatus",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT DISTINCT custkey, orderstatus FROM ORDERS",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.client.FailureInfo$FailureException",
          "failureDetail": "No free space available for spill",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT num FROM (SELECT 1 as num FROM nation WHERE nationkey\u003d10 EXCEPT SELECT 2 FROM nation WHERE nationkey\u003d20) T",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT COUNT(*), SUM(2), regionkey FROM (SELECT nationkey, regionkey FROM nation EXCEPT SELECT regionkey, regionkey FROM nation) n GROUP BY regionkey HAVING regionkey \u003c 3",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT custkey, MAX(NULLIF(orderstatus, \u0027O\u0027)), MIN(NULLIF(orderstatus, \u0027O\u0027)) FROM orders GROUP BY custkey",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: select count(*) , letter from (select substr(name,1,1) letter from nation) x group by x.letter order by letter",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.client.FailureInfo$FailureException",
          "failureDetail": "No free space available for spill",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.client.FailureInfo$FailureException",
          "failureDetail": "No free space available for spill",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.client.FailureInfo$FailureException",
          "failureDetail": "No free space available for spill",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.client.FailureInfo$FailureException",
          "failureDetail": "No free space available for spill",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT orderstatus, sum(orderkey)\nFROM (SELECT orderkey, orderstatus\n      FROM orders\n      UNION ALL\n      SELECT orderkey, orderstatus\n      FROM orders) x\nGROUP BY ROLLUP (orderstatus)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT linenumber, min(orderkey), (SELECT max(orderkey) FROM orders WHERE orderkey \u003c 7)FROM lineitem GROUP BY linenumber, (SELECT max(orderkey) FROM orders WHERE orderkey \u003c 7)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT linenumber, min(orderkey) FROM lineitem GROUP BY linenumber HAVING min(orderkey) IN (SELECT orderkey FROM orders WHERE orderkey \u003e 1)",
          "isError": false
        }
      ],
      "nbFailures": 38,
      "nbErrors": 0
    }
  ]
}