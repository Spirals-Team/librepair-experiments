{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 3,
  "repo": "opentracing-contrib/java-spring-cloud",
  "failingModule": "/root/workspace/opentracing-contrib/java-spring-cloud/366104974/opentracing-spring-cloud-starter-jaeger",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 0,
  "error-types": [
    "org.assertj.core.util.introspection.IntrospectionError",
    "org.springframework.beans.factory.UnsatisfiedDependencyException"
  ],
  "totalNumberRunningTests": 61,
  "failing-test-cases": [
    {
      "className": "io.opentracing.contrib.spring.cloud.starter.jaeger.basic.JaegerTracerServiceNoSenderConfiguredSpringTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.opentracing.contrib.spring.cloud.starter.jaeger.basic.JaegerTracerServiceNoSenderConfiguredSpringTest#testExpectedReporter"
      ],
      "failures": [
        {
          "failureName": "org.assertj.core.util.introspection.IntrospectionError",
          "failureDetail": " Can\u0027t find any field or property with name \u0027sender\u0027. Error when introspecting properties was : - No getter for property \u0027sender\u0027 in com.uber.jaeger.reporters.LoggingReporter  Error when introspecting fields was : - Unable to obtain the value of the field \u003c\u0027sender\u0027\u003e from \u003cLoggingReporter(logger\u003dLogger[com.uber.jaeger.reporters.LoggingReporter])\u003e",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "io.opentracing.contrib.spring.cloud.starter.jaeger.customizer.JaegerTracerB3CustomerizerEnabledWithEnvVariableSpringTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.opentracing.contrib.spring.cloud.starter.jaeger.customizer.JaegerTracerB3CustomerizerEnabledWithEnvVariableSpringTest#testCustomizersShouldContainB3Customizer"
      ],
      "failures": [
        {
          "failureName": "org.springframework.beans.factory.UnsatisfiedDependencyException",
          "failureDetail": "Error creating bean with name \u0027io.opentracing.contrib.spring.cloud.starter.jaeger.customizer.JaegerTracerB3CustomerizerEnabledWithEnvVariableSpringTest\u0027: Unsatisfied dependency expressed through field \u0027customizers\u0027; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type \u0027java.util.List\u003cio.opentracing.contrib.spring.cloud.starter.jaeger.TracerBuilderCustomizer\u003e\u0027 available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required\u003dtrue)}",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "io.opentracing.contrib.spring.cloud.starter.jaeger.basic.JaegerTracerServiceHttpSenderConfiguredSpringTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.opentracing.contrib.spring.cloud.starter.jaeger.basic.JaegerTracerServiceHttpSenderConfiguredSpringTest#testExpectedReporter"
      ],
      "failures": [
        {
          "failureName": "org.assertj.core.util.introspection.IntrospectionError",
          "failureDetail": " Can\u0027t find any field or property with name \u0027sender\u0027. Error when introspecting properties was : - No getter for property \u0027sender\u0027 in com.uber.jaeger.reporters.LoggingReporter  Error when introspecting fields was : - Unable to obtain the value of the field \u003c\u0027sender\u0027\u003e from \u003cLoggingReporter(logger\u003dLogger[com.uber.jaeger.reporters.LoggingReporter])\u003e",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ]
}