{
  "totalNumberSkippingTests": 4,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "everit-org/json-schema",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 2,
      "ComputeClasspath": 3,
      "ComputeTestDir": 0,
      "ResolveDependency": 14,
      "BuildProject": 15,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 1,
      "CloneRepository": 3,
      "NopolRepair": 3,
      "CheckoutPatchedBuild": 0,
      "TestProject": 17,
      "GatherTestInformation": 0,
      "PushIncriminatedBuild": 4,
      "AstorRepair": 0,
      "CommitPatch": 3
    },
    "FailureNames": [
      "java.lang.AssertionError"
    ],
    "BugCommitUrl": "http://github.com/everit-org/json-schema/commit/dac663dba61c4a0a8f6b2a53ac18eb88514e3a9e",
    "NbFailingTests": 36,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/everit-org/json-schema/builds/331266133",
    "BuggyBuildDate": "Jan 20, 2018 7:47:50 PM",
    "BugCommit": "dac663dba61c4a0a8f6b2a53ac18eb88514e3a9e",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 3087,
    "NbLibraries": 25,
    "NbFileApp": 136,
    "NbFileTests": 122,
    "NbCPU": 8,
    "FreeMemory": 398859760,
    "TotalMemory": 568852480,
    "AngelicValuesByTest": {
      "org/everit/json/schema/V7TestSuiteTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 278218400,
      "ComputeClasspath": 209086336,
      "ComputeTestDir": 269686832,
      "ResolveDependency": 255124528,
      "BuildProject": 247195032,
      "NPERepair": 210671936,
      "ComputeSourceDir": 209086336,
      "InitRepoToPush": 283101704,
      "CloneRepository": 317980944,
      "NopolRepair": 433935960,
      "CheckoutPatchedBuild": 398859760,
      "TestProject": 231334552,
      "GatherTestInformation": 214270600,
      "PushIncriminatedBuild": 210671936,
      "AstorRepair": 204830976,
      "CommitPatch": 398859760
    },
    "ReproductionDate": "Jan 20, 2018 7:47:55 PM",
    "BuggyBuildId": 331266133
  },
  "failingModule": "/root/workspace/everit-org/json-schema/331266133/tests",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 36,
  "error-types": [
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 3087,
  "failing-test-cases": [
    {
      "className": "org.everit.json.schema.V7TestSuiteTest",
      "failingMethods": [
        "org.everit.json.schema.V7TestSuiteTest#testInCollectingMode[[idn-hostname.json]/validation of internationalized host names]",
        "org.everit.json.schema.V7TestSuiteTest#testInEarlyFailingMode[[propertyNames.json]/propertyNames validation]",
        "org.everit.json.schema.V7TestSuiteTest#testInEarlyFailingMode[[uri.json]/validation of URIs]",
        "org.everit.json.schema.V7TestSuiteTest#testInEarlyFailingMode[[if-then-else.json]/if and else without then]",
        "org.everit.json.schema.V7TestSuiteTest#testInCollectingMode[[iri-reference.json]/validation of IRI References]",
        "org.everit.json.schema.V7TestSuiteTest#testInEarlyFailingMode[[anyOf.json]/anyOf complex types]",
        "org.everit.json.schema.V7TestSuiteTest#testInCollectingMode[[if-then-else.json]/validate against correct branch, then vs else]",
        "org.everit.json.schema.V7TestSuiteTest#testInEarlyFailingMode[[propertyNames.json]/propertyNames with boolean schema false]",
        "org.everit.json.schema.V7TestSuiteTest#testInCollectingMode[[iri.json]/validation of IRIs]",
        "org.everit.json.schema.V7TestSuiteTest#testInCollectingMode[[propertyNames.json]/propertyNames validation]",
        "org.everit.json.schema.V7TestSuiteTest#testInCollectingMode[[regex.json]/validation of regular expressions]",
        "org.everit.json.schema.V7TestSuiteTest#testInEarlyFailingMode[[idn-email.json]/validation of an internationalized e-mail addresses]",
        "org.everit.json.schema.V7TestSuiteTest#testInEarlyFailingMode[[iri.json]/validation of IRIs]",
        "org.everit.json.schema.V7TestSuiteTest#testInCollectingMode[[if-then-else.json]/if and else without then]",
        "org.everit.json.schema.V7TestSuiteTest#testInCollectingMode[[uri.json]/validation of URIs]",
        "org.everit.json.schema.V7TestSuiteTest#testInEarlyFailingMode[[idn-hostname.json]/validation of internationalized host names]",
        "org.everit.json.schema.V7TestSuiteTest#testInCollectingMode[[idn-email.json]/validation of an internationalized e-mail addresses]",
        "org.everit.json.schema.V7TestSuiteTest#testInEarlyFailingMode[[if-then-else.json]/validate against correct branch, then vs else]",
        "org.everit.json.schema.V7TestSuiteTest#testInEarlyFailingMode[[iri-reference.json]/validation of IRI References]",
        "org.everit.json.schema.V7TestSuiteTest#testInEarlyFailingMode[[if-then-else.json]/if and then without else]",
        "org.everit.json.schema.V7TestSuiteTest#testInCollectingMode[[if-then-else.json]/if and then without else]",
        "org.everit.json.schema.V7TestSuiteTest#testInCollectingMode[[propertyNames.json]/propertyNames with boolean schema false]",
        "org.everit.json.schema.V7TestSuiteTest#testInEarlyFailingMode[[oneOf.json]/oneOf complex types]",
        "org.everit.json.schema.V7TestSuiteTest#testInEarlyFailingMode[[regex.json]/validation of regular expressions]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [regex.json]/a regular expression with unclosed parens is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [regex.json]/a regular expression with unclosed parens is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [anyOf.json]/neither anyOf valid (complex)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [iri.json]/an invalid relative IRI Reference",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [iri.json]/an invalid relative IRI Reference",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [iri.json]/an invalid IRI",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [iri.json]/an invalid IRI",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [iri.json]/an invalid IRI though valid IRI reference",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [iri.json]/an invalid IRI though valid IRI reference",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [idn-hostname.json]/illegal first char U+302E Hangul single dot tone mark",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [idn-hostname.json]/illegal first char U+302E Hangul single dot tone mark",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [idn-hostname.json]/contains illegal char U+302E Hangul single dot tone mark",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [idn-hostname.json]/contains illegal char U+302E Hangul single dot tone mark",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [idn-hostname.json]/a host name with a component too long",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [idn-hostname.json]/a host name with a component too long",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [uri.json]/an invalid protocol-relative URI Reference",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [uri.json]/an invalid protocol-relative URI Reference",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [idn-email.json]/an invalid idn e-mail address",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [idn-email.json]/an invalid idn e-mail address",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [oneOf.json]/neither oneOf valid (complex)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [if-then-else.json]/invalid through then",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [if-then-else.json]/invalid through then",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [if-then-else.json]/invalid through else",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [if-then-else.json]/invalid through else",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [if-then-else.json]/invalid through then",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [if-then-else.json]/invalid through then",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [if-then-else.json]/invalid through else",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [if-then-else.json]/invalid through else",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [propertyNames.json]/some property names invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [propertyNames.json]/some property names invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [propertyNames.json]/object with any properties is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [propertyNames.json]/object with any properties is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [iri-reference.json]/an invalid IRI Reference",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [iri-reference.json]/an invalid IRI Reference",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [iri-reference.json]/an invalid IRI fragment",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [iri-reference.json]/an invalid IRI fragment",
          "isError": false
        }
      ],
      "nbFailures": 36,
      "nbErrors": 0
    }
  ]
}