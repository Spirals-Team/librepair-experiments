{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "prestodb/presto",
  "failingModule": "/root/workspace/prestodb/presto/312762977/presto-main",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 2,
  "error-types": [
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 4183,
  "failing-test-cases": [
    {
      "className": "com.facebook.presto.sql.planner.TestLogicalPlanner",
      "failingMethods": [
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testDistinctLimitOverInequalityJoin",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testInnerInequalityJoinWithEquiJoinConjuncts"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Plan does not match, expected [\n\n- anyTree\n    - node(DistinctLimitNode)\n        - anyTree\n            - node(JoinNode)\n                JoinMatcher{equiCriteria\u003d[O_SHIPPRIORITY \u003d L_LINENUMBER], filter\u003d(\"O_ORDERKEY\" \u003c \"L_ORDERKEY\"), dynamicFilter\u003dOptional.empty}\n                StrictSymbolsMatcher{exact outputs\u003d[O_ORDERKEY]}\n                - node\n                    - node(TableScanNode)\n                        TableScanMatcher{expectedTableName\u003dorders}\n                        bind O_SHIPPRIORITY -\u003e Column orders:shippriority\n                        bind O_ORDERKEY -\u003e Column orders:orderkey\n                - anyTree\n                    - node(TableScanNode)\n                        TableScanMatcher{expectedTableName\u003dlineitem}\n                        bind L_LINENUMBER -\u003e Column lineitem:linenumber\n                        bind L_ORDERKEY -\u003e Column lineitem:orderkey\n\n] but found [\n\n- Output[orderkey] \u003d\u003e [orderkey:bigint]\n    - Project[] \u003d\u003e [orderkey:bigint]\n        - DistinctLimit[1][$hashvalue] \u003d\u003e [orderkey:bigint, $hashvalue:bigint]\n            - LocalExchange[SINGLE] () \u003d\u003e orderkey:bigint, $hashvalue:bigint\n                    Cost: {rows: 120350, bytes: ?}\n                - Project[] \u003d\u003e [orderkey:bigint, $hashvalue_13:bigint]\n                        Cost: {rows: 120350, bytes: ?}\n                        $hashvalue_13 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"orderkey\"), 0))\n                    - InnerJoin[(\"shippriority\" \u003d \"linenumber\") AND (\"orderkey\" \u003c \"orderkey_0\")][$hashvalue_10, $hashvalue_11] \u003d\u003e [orderkey:bigint]\n                            dynamicFilterAssignments \u003d {df \u003c- \"linenumber\"}\n                            SortExpression[\"orderkey_0\"]\n                            Cost: {rows: 120350, bytes: ?}\n                        - ScanFilterProject[table \u003d local:tpch:orders:sf0.01, originalConstraint \u003d true, filterPredicate \u003d true, dynamicFilter \u003d {df -\u003e \"shippriority\"}] \u003d\u003e [orderkey:bigint, shippriority:integer, $hashvalue_10:bigint]\n                                Cost: {rows: 15000, bytes: ?}/{rows: 7500, bytes: ?}/{rows: 7500, bytes: ?}\n                                $hashvalue_10 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"shippriority\"), 0))\n                                orderkey :\u003d tpch:orderkey\n                                shippriority :\u003d tpch:shippriority\n                        - LocalExchange[SINGLE] () \u003d\u003e orderkey_0:bigint, linenumber:integer, $hashvalue_11:bigint\n                                Cost: {rows: 60175, bytes: ?}\n                            - ScanProject[table \u003d local:tpch:lineitem:sf0.01, originalConstraint \u003d true] \u003d\u003e [orderkey_0:bigint, linenumber:integer, $hashvalue_12:bigint]\n                                    Cost: {rows: 60175, bytes: ?}/{rows: 60175, bytes: ?}\n                                    $hashvalue_12 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"linenumber\"), 0))\n                                    orderkey_0 :\u003d tpch:orderkey\n                                    linenumber :\u003d tpch:linenumber\n\n] which resolves to [\n\n- Output[orderkey] \u003d\u003e [orderkey:bigint]\n    - Project[] \u003d\u003e [orderkey:bigint]\n        - DistinctLimit[1][$hashvalue] \u003d\u003e [orderkey:bigint, $hashvalue:bigint]\n            - LocalExchange[SINGLE] () \u003d\u003e orderkey:bigint, $hashvalue:bigint\n                    Cost: {rows: 120350, bytes: ?}\n                - Project[] \u003d\u003e [orderkey:bigint, $hashvalue_13:bigint]\n                        Cost: {rows: 120350, bytes: ?}\n                        $hashvalue_13 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"orderkey\"), 0))\n                    - InnerJoin[(\"shippriority\" \u003d \"linenumber\") AND (\"orderkey\" \u003c \"orderkey_0\")][$hashvalue_10, $hashvalue_11] \u003d\u003e [orderkey:bigint]\n                            dynamicFilterAssignments \u003d {df \u003c- \"linenumber\"}\n                            SortExpression[\"orderkey_0\"]\n                            Cost: {rows: 120350, bytes: ?}\n                        - ScanFilterProject[table \u003d local:tpch:orders:sf0.01, originalConstraint \u003d true, filterPredicate \u003d true, dynamicFilter \u003d {df -\u003e \"shippriority\"}] \u003d\u003e [orderkey:bigint, shippriority:integer, $hashvalue_10:bigint]\n                                Cost: {rows: 15000, bytes: ?}/{rows: 7500, bytes: ?}/{rows: 7500, bytes: ?}\n                                $hashvalue_10 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"shippriority\"), 0))\n                                orderkey :\u003d tpch:orderkey\n                                shippriority :\u003d tpch:shippriority\n                        - LocalExchange[SINGLE] () \u003d\u003e orderkey_0:bigint, linenumber:integer, $hashvalue_11:bigint\n                                Cost: {rows: 60175, bytes: ?}\n                            - ScanProject[table \u003d local:tpch:lineitem:sf0.01, originalConstraint \u003d true] \u003d\u003e [orderkey_0:bigint, linenumber:integer, $hashvalue_12:bigint]\n                                    Cost: {rows: 60175, bytes: ?}/{rows: 60175, bytes: ?}\n                                    $hashvalue_12 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"linenumber\"), 0))\n                                    orderkey_0 :\u003d tpch:orderkey\n                                    linenumber :\u003d tpch:linenumber\n\n]",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Plan does not match, expected [\n\n- anyTree\n    - node\n        NotPlanNodeMatcher{excludedNodeClass\u003dclass com.facebook.presto.sql.planner.plan.FilterNode}\n        - node(JoinNode)\n            JoinMatcher{equiCriteria\u003d[O_SHIPPRIORITY \u003d L_LINENUMBER], filter\u003d(\"O_ORDERKEY\" \u003c \"L_ORDERKEY\"), dynamicFilter\u003dOptional.empty}\n            - node\n                - node(TableScanNode)\n                    TableScanMatcher{expectedTableName\u003dorders}\n                    bind O_SHIPPRIORITY -\u003e Column orders:shippriority\n                    bind O_ORDERKEY -\u003e Column orders:orderkey\n            - anyTree\n                - node(TableScanNode)\n                    TableScanMatcher{expectedTableName\u003dlineitem}\n                    bind L_LINENUMBER -\u003e Column lineitem:linenumber\n                    bind L_ORDERKEY -\u003e Column lineitem:orderkey\n\n] but found [\n\n- Output[_col0] \u003d\u003e [expr_6:integer]\n        Cost: {rows: 120350, bytes: ?}\n        _col0 :\u003d expr_6\n    - Project[] \u003d\u003e [expr_6:integer]\n            Cost: {rows: 120350, bytes: ?}\n            expr_6 :\u003d 1\n        - InnerJoin[(\"shippriority\" \u003d \"linenumber\") AND (\"orderkey\" \u003c \"orderkey_0\")][$hashvalue, $hashvalue_10] \u003d\u003e []\n                dynamicFilterAssignments \u003d {df \u003c- \"linenumber\"}\n                SortExpression[\"orderkey_0\"]\n                Cost: {rows: 120350, bytes: ?}\n            - ScanFilterProject[table \u003d local:tpch:orders:sf0.01, originalConstraint \u003d true, filterPredicate \u003d true, dynamicFilter \u003d {df -\u003e \"shippriority\"}] \u003d\u003e [orderkey:bigint, shippriority:integer, $hashvalue:bigint]\n                    Cost: {rows: 15000, bytes: ?}/{rows: 7500, bytes: ?}/{rows: 7500, bytes: ?}\n                    $hashvalue :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"shippriority\"), 0))\n                    orderkey :\u003d tpch:orderkey\n                    shippriority :\u003d tpch:shippriority\n            - LocalExchange[SINGLE] () \u003d\u003e orderkey_0:bigint, linenumber:integer, $hashvalue_10:bigint\n                    Cost: {rows: 60175, bytes: ?}\n                - ScanProject[table \u003d local:tpch:lineitem:sf0.01, originalConstraint \u003d true] \u003d\u003e [orderkey_0:bigint, linenumber:integer, $hashvalue_11:bigint]\n                        Cost: {rows: 60175, bytes: ?}/{rows: 60175, bytes: ?}\n                        $hashvalue_11 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"linenumber\"), 0))\n                        orderkey_0 :\u003d tpch:orderkey\n                        linenumber :\u003d tpch:linenumber\n\n] which resolves to [\n\n- Output[_col0] \u003d\u003e [expr_6:integer]\n        Cost: {rows: 120350, bytes: ?}\n        _col0 :\u003d expr_6\n    - Project[] \u003d\u003e [expr_6:integer]\n            Cost: {rows: 120350, bytes: ?}\n            expr_6 :\u003d 1\n        - InnerJoin[(\"shippriority\" \u003d \"linenumber\") AND (\"orderkey\" \u003c \"orderkey_0\")][$hashvalue, $hashvalue_10] \u003d\u003e []\n                dynamicFilterAssignments \u003d {df \u003c- \"linenumber\"}\n                SortExpression[\"orderkey_0\"]\n                Cost: {rows: 120350, bytes: ?}\n            - ScanFilterProject[table \u003d local:tpch:orders:sf0.01, originalConstraint \u003d true, filterPredicate \u003d true, dynamicFilter \u003d {df -\u003e \"shippriority\"}] \u003d\u003e [orderkey:bigint, shippriority:integer, $hashvalue:bigint]\n                    Cost: {rows: 15000, bytes: ?}/{rows: 7500, bytes: ?}/{rows: 7500, bytes: ?}\n                    $hashvalue :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"shippriority\"), 0))\n                    orderkey :\u003d tpch:orderkey\n                    shippriority :\u003d tpch:shippriority\n            - LocalExchange[SINGLE] () \u003d\u003e orderkey_0:bigint, linenumber:integer, $hashvalue_10:bigint\n                    Cost: {rows: 60175, bytes: ?}\n                - ScanProject[table \u003d local:tpch:lineitem:sf0.01, originalConstraint \u003d true] \u003d\u003e [orderkey_0:bigint, linenumber:integer, $hashvalue_11:bigint]\n                        Cost: {rows: 60175, bytes: ?}/{rows: 60175, bytes: ?}\n                        $hashvalue_11 :\u003d \"combine_hash\"(BIGINT \u00270\u0027, COALESCE(\"$operator$hash_code\"(\"linenumber\"), 0))\n                        orderkey_0 :\u003d tpch:orderkey\n                        linenumber :\u003d tpch:linenumber\n\n]",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    }
  ]
}