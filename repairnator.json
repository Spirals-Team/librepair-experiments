{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 19,
  "repo": "binaryoverload/JSON-Config",
  "failingModule": "/root/workspace/binaryoverload/JSON-Config/357118325",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 0,
  "error-types": [
    "java.lang.IllegalArgumentException",
    "java.lang.Exception"
  ],
  "totalNumberRunningTests": 30,
  "failing-test-cases": [
    {
      "className": "io.github.binaryoverload.JSONConfigTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.github.binaryoverload.JSONConfigTest#testSubConfigPositive",
        "io.github.binaryoverload.JSONConfigTest#testGetBooleanPositive",
        "io.github.binaryoverload.JSONConfigTest#testGetIntegerPositive",
        "io.github.binaryoverload.JSONConfigTest#testGetPositive",
        "io.github.binaryoverload.JSONConfigTest#testGetArrayNegative",
        "io.github.binaryoverload.JSONConfigTest#testGetIntegerNegative",
        "io.github.binaryoverload.JSONConfigTest#testGetDoubleNegative",
        "io.github.binaryoverload.JSONConfigTest#testSubConfigNegative",
        "io.github.binaryoverload.JSONConfigTest#testSetPositive",
        "io.github.binaryoverload.JSONConfigTest#testReloadFile",
        "io.github.binaryoverload.JSONConfigTest#testGetStringPositive",
        "io.github.binaryoverload.JSONConfigTest#testRemovePositive",
        "io.github.binaryoverload.JSONConfigTest#testGetDoublePositive",
        "io.github.binaryoverload.JSONConfigTest#testGetArrayPositive",
        "io.github.binaryoverload.JSONConfigTest#testGetLongPositive",
        "io.github.binaryoverload.JSONConfigTest#testGetLongNegative",
        "io.github.binaryoverload.JSONConfigTest#testGetBooleanNegative",
        "io.github.binaryoverload.JSONConfigTest#testGetStringNegative",
        "io.github.binaryoverload.JSONConfigTest#testRemoveNegative"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027type\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027id\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027title\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.IllegalStateException\u003e but was\u003cjava.lang.IllegalArgumentException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027exclusiveMinimum\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.IllegalStateException\u003e but was\u003cjava.lang.IllegalArgumentException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027date\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.IllegalStateException\u003e but was\u003cjava.lang.IllegalArgumentException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027date\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.IllegalStateException\u003e but was\u003cjava.lang.IllegalArgumentException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027title\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.IllegalStateException\u003e but was\u003cjava.lang.IllegalArgumentException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027date\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.IllegalStateException\u003e but was\u003cjava.lang.IllegalArgumentException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027items\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027required\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.IllegalStateException\u003e but was\u003cjava.lang.IllegalArgumentException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.IllegalStateException\u003e but was\u003cjava.lang.IllegalArgumentException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027title\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 19
    }
  ]
}