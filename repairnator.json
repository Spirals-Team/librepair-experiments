{
  "totalNumberSkippingTests": 4,
  "bugType": "only_fail",
  "totalNumberErroringTests": 606,
  "repo": "INRIA/spoon",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 4,
      "ComputeClasspath": 4,
      "ComputeTestDir": 0,
      "ResolveDependency": 20,
      "BuildProject": 29,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 4,
      "CloneRepository": 9,
      "NopolRepair": 1618,
      "CheckoutPatchedBuild": 0,
      "TestProject": 110,
      "GatherTestInformation": 0,
      "PushIncriminatedBuild": 10,
      "AstorRepair": 88,
      "CommitPatch": 6
    },
    "FailureNames": [
      "spoon.SpoonException",
      "java.lang.ArrayIndexOutOfBoundsException",
      "java.lang.AssertionError",
      "java.lang.NoClassDefFoundError",
      "java.lang.ExceptionInInitializerError",
      "java.lang.Exception"
    ],
    "NbFailingTests": 608,
    "BugCommitUrl": "http://github.com/INRIA/spoon/commit/95efbf5237790a1565dceb6f92bfc464e45c0aee",
    "ReproductionDate": "Apr 12, 2018 12:49:09 PM",
    "BuggyBuildId": 365545575,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/INRIA/spoon/builds/365545575",
    "BuggyBuildDate": "Apr 12, 2018 12:44:11 PM",
    "BugCommit": "95efbf5237790a1565dceb6f92bfc464e45c0aee",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 1079,
    "NbLibraries": 14,
    "NbFileApp": 1082,
    "NbFileTests": 1316,
    "NbCPU": 32,
    "FreeMemory": 5035166832,
    "TotalMemory": 6640107520,
    "AngelicValuesByTest": {
      "spoon/test/secondaryclasses/ClassesTest": 0,
      "spoon/test/methodreference/MethodReferenceTest": 0,
      "spoon/test/factory/FactoryTest": 0,
      "spoon/processing/CtGenerationTest": 0,
      "spoon/test/refactoring/MethodsRefactoringTest": 0,
      "spoon/test/eval/EvalTest": 0,
      "spoon/test/model/SwitchCaseTest": 0,
      "spoon/test/strings/StringTest": 0,
      "spoon/test/imports/ImportTest": 0,
      "spoon/test/reference/ExecutableReferenceGenericTest": 0,
      "spoon/testing/CtPackageAssertTest": 0,
      "spoon/test/main/MainTest": 0,
      "spoon/test/initializers/InitializerTest": 0,
      "spoon/test/visitor/VisitorTest": 0,
      "spoon/test/staticFieldAccess/StaticAccessTest": 0,
      "spoon/test/modifiers/TestModifiers": 0,
      "spoon/support/compiler/jdt/JDTBatchCompilerTest": 0,
      "spoon/test/intercession/IntercessionContractTest": 0,
      "spoon/test/constructorcallnewclass/ConstructorCallTest": 0,
      "spoon/test/parent/ParentContractTest": 0,
      "spoon/test/comment/CommentTest": 0,
      "spoon/test/pkg/PackageTest": 0,
      "spoon/test/prettyprinter/QualifiedThisRefTest": 0,
      "spoon/test/invocations/InvocationTest": 0,
      "spoon/test/ctElement/MetadataTest": 0,
      "spoon/test/serializable/SerializableTest": 0,
      "spoon/test/position/PositionTest": 0,
      "spoon/test/compilationunit/GetBinaryFilesTest": 0,
      "spoon/test/targeted/TargetedExpressionTest": 0,
      "spoon/test/reference/ExecutableReferenceTest": 0,
      "spoon/test/parent/ParentTest": 0,
      "spoon/reflect/declaration/CtTypeInformationTest": 0,
      "spoon/test/api/NoClasspathTest": 0,
      "spoon/test/executable/ExecutableTest": 0,
      "spoon/test/factory/TypeFactoryTest": 0,
      "spoon/test/imports/ImportAndExtendWithPackageNameTest": 0,
      "spoon/test/varargs/VarArgsTest": 0,
      "spoon/test/architecture/SpoonArchitectureEnforcerTest": 0,
      "spoon/test/casts/CastTest": 0,
      "spoon/test/support/ResourceTest": 0,
      "spoon/test/parent/SetParentTest": 0,
      "spoon/test/generics/GenericsTest": 0,
      "spoon/test/prettyprinter/DefaultPrettyPrinterTest": 0,
      "spoon/test/loop/LoopTest": 0,
      "spoon/test/query_function/VariableReferencesTest": 0,
      "spoon/test/condition/ConditionalTest": 0,
      "spoon/test/visibility/VisibilityTest": 0,
      "spoon/testing/AbstractAssertTest": 0,
      "spoon/test/literal/LiteralTest": 0,
      "spoon/test/lambda/LambdaTest": 0,
      "spoon/test/prettyprinter/PrinterTest": 0,
      "spoon/test/jar/JarTest": 0,
      "spoon/test/imports/ImportScannerTest": 0,
      "spoon/test/model/AnonymousExecutableTest": 0,
      "spoon/test/annotation/AnnotationLoopTest": 0,
      "spoon/test/ctClass/CtClassTest": 0,
      "spoon/test/annotation/AnnotationValuesTest": 0,
      "spoon/reflect/ast/CloneTest": 0,
      "spoon/test/compilation/CompilationTest": 0,
      "spoon/test/enums/EnumsTest": 0,
      "spoon/test/field/FieldTest": 0,
      "spoon/test/api/APITest": 0,
      "spoon/test/sourcePosition/SourcePositionTest": 0,
      "spoon/test/ctBlock/TestCtBlock": 0,
      "spoon/test/compilationunit/TestCompilationUnit": 0,
      "spoon/test/serializable/SourcePositionTest": 0,
      "spoon/test/filters/FilterTest": 0,
      "spoon/MavenLauncherTest": 0,
      "spoon/test/type/TypeTest": 0,
      "spoon/reflect/visitor/CtVisitorTest": 0,
      "spoon/reflect/visitor/CtInheritanceScannerMethodsTest": 0,
      "spoon/test/constructorcallnewclass/NewClassTest": 0,
      "spoon/test/enums/EnumsTypeTest": 0,
      "spoon/testing/CtElementAssertTest": 0,
      "spoon/test/trycatch/TryCatchTest": 0,
      "spoon/test/executable/ExecutableRefTest": 0,
      "spoon/test/annotation/AnnotationTest": 0,
      "spoon/test/javadoc/JavaDocTest": 0,
      "spoon/test/reflect/meta/MetaModelTest": 0,
      "spoon/testing/FileAssertTest": 0,
      "spoon/reflect/ast/AstCheckerTest": 0,
      "spoon/test/jdtimportbuilder/ImportBuilderTest": 0,
      "spoon/test/replace/ReplaceParametrizedTest": 0,
      "spoon/test/variable/AccessTest": 0,
      "spoon/test/filters/CUFilterTest": 0,
      "spoon/test/intercession/IntercessionTest": 0,
      "spoon/test/constructor/ConstructorTest": 0,
      "spoon/test/visitor/AssignmentsEqualsTest": 0,
      "spoon/test/exceptions/ExceptionTest": 0,
      "spoon/test/reference/CloneReferenceTest": 0,
      "spoon/test/fieldaccesses/FieldAccessTest": 0,
      "spoon/test/template/TemplateTest": 0,
      "spoon/test/api/MetamodelTest": 0,
      "spoon/test/limits/utils/InternalTest": 0,
      "spoon/reflect/declaration/UnknownDeclarationTest": 0,
      "spoon/test/variable/AccessFullyQualifiedFieldTest": 0,
      "spoon/test/arrays/ArraysTest": 0,
      "spoon/test/factory/FieldFactoryTest": 0,
      "spoon/test/processing/ProcessingTest": 0,
      "spoon/test/reference/VariableAccessTest": 0,
      "spoon/test/replace/ReplaceTest": 0,
      "spoon/test/staticFieldAccess2/ImplicitStaticFieldReferenceTest": 0,
      "spoon/test/prettyprinter/LinesTest": 0,
      "spoon/test/ctType/CtTypeTest": 0,
      "spoon/test/labels/TestLabels": 0,
      "spoon/test/reference/TypeReferenceTest": 0,
      "spoon/test/reference/AnnotationFieldReferenceTest": 0,
      "spoon/test/method/MethodTest": 0,
      "spoon/reflect/visitor/CtScannerTest": 0,
      "spoon/processing/ProcessingTest": 0,
      "spoon/test/model/TypeTest": 0,
      "spoon/LauncherTest": 0,
      "spoon/test/parameters/ParameterTest": 0,
      "spoon/test/control/ControlTest": 0,
      "spoon/support/compiler/jdt/ExtendedStringLiteralTest": 0,
      "spoon/test/ctCase/SwitchCaseTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 368742192,
      "ComputeClasspath": 475422240,
      "ComputeTestDir": 352036720,
      "ResolveDependency": 522106272,
      "BuildProject": 474081912,
      "NPERepair": 477353256,
      "ComputeSourceDir": 475422240,
      "InitRepoToPush": 540084752,
      "CloneRepository": 460651952,
      "NopolRepair": 5169168920,
      "CheckoutPatchedBuild": 5035166832,
      "TestProject": 442683952,
      "GatherTestInformation": 409095536,
      "PushIncriminatedBuild": 477353256,
      "AstorRepair": 347057264,
      "CommitPatch": 5035166832
    }
  },
  "failingModule": "/root/workspace/INRIA/spoon/365545575",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 2,
  "error-types": [
    "spoon.SpoonException",
    "java.lang.ArrayIndexOutOfBoundsException",
    "java.lang.AssertionError",
    "java.lang.NoClassDefFoundError",
    "java.lang.ExceptionInInitializerError",
    "java.lang.Exception"
  ],
  "totalNumberRunningTests": 1079,
  "failing-test-cases": [
    {
      "className": "spoon.test.modifiers.TestModifiers",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.modifiers.TestModifiers#testMethodWithVarargsDoesNotBecomeTransient",
        "spoon.test.modifiers.TestModifiers#testGetModifiersHelpers",
        "spoon.test.modifiers.TestModifiers#testSetVisibility",
        "spoon.test.modifiers.TestModifiers#testCtModifiableAddRemoveReturnCtModifiable"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.staticFieldAccess.StaticAccessTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.staticFieldAccess.StaticAccessTest#testProcessAndCompile",
        "spoon.test.staticFieldAccess.StaticAccessTest#testReferences"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.field.FieldTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.field.FieldTest#testFieldImplicitTarget",
        "spoon.test.field.FieldTest#testAddFieldsAtTop",
        "spoon.test.field.FieldTest#testGetDefaultExpression"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.imports.ImportAndExtendWithPackageNameTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.imports.ImportAndExtendWithPackageNameTest#testBuildModel"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.casts.CastTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.casts.CastTest#testCase4",
        "spoon.test.casts.CastTest#testTypeAnnotationOnCast"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.ctBlock.TestCtBlock",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.ctBlock.TestCtBlock#testAddStatementInCase",
        "spoon.test.ctBlock.TestCtBlock#testAddStatementInBlock",
        "spoon.test.ctBlock.TestCtBlock#testRemoveStatement"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.annotation.AnnotationValuesTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.annotation.AnnotationValuesTest#testValuesOnJava7Annotation",
        "spoon.test.annotation.AnnotationValuesTest#testValuesOnJava8Annotation",
        "spoon.test.annotation.AnnotationValuesTest#testAnnotationPrintAnnotation"
      ],
      "failures": [
        {
          "failureName": "java.lang.ArrayIndexOutOfBoundsException",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "java.lang.ArrayIndexOutOfBoundsException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.constructorcallnewclass.NewClassTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.constructorcallnewclass.NewClassTest#testMoreThan9NewClass"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.sourcePosition.SourcePositionTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.sourcePosition.SourcePositionTest#testSourcePositionOfSecondPrimitiveType"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.api.APITest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.api.APITest#testOutputDestinationHandler",
        "spoon.test.api.APITest#testSetterInNodes",
        "spoon.test.api.APITest#testDestinationOfSpoon",
        "spoon.test.api.APITest#testDuplicateFilePlusFolder",
        "spoon.test.api.APITest#testInvalidateCacheOfCompiler",
        "spoon.test.api.APITest#testDuplicateFolder",
        "spoon.test.api.APITest#testDuplicateEntry",
        "spoon.test.api.APITest#testBasicAPIUsage",
        "spoon.test.api.APITest#testSourceClasspathDoesNotAcceptDotClass",
        "spoon.test.api.APITest#testPrintNotAllSourcesWithFilter",
        "spoon.test.api.APITest#testOverrideOutputWriter",
        "spoon.test.api.APITest#testOutputWithNoOutputProduceNoFolder",
        "spoon.test.api.APITest#testOutputOfSpoon",
        "spoon.test.api.APITest#testPrintNotAllSourcesInCommandLine",
        "spoon.test.api.APITest#testAddProcessorMethodInSpoonAPI",
        "spoon.test.api.APITest#testPrintNotAllSourcesWithNames"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 16
    },
    {
      "className": "spoon.test.template.TemplateTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.template.TemplateTest#substituteTypeAccessReference",
        "spoon.test.template.TemplateTest#testTemplateMatcherMatchTwoSnippets",
        "spoon.test.template.TemplateTest#testTemplateInterfaces",
        "spoon.test.template.TemplateTest#createTypeFromTemplate",
        "spoon.test.template.TemplateTest#testExtensionBlock",
        "spoon.test.template.TemplateTest#testSubstituteInnerClass",
        "spoon.test.template.TemplateTest#testTemplateWithWrongUsedStringParam",
        "spoon.test.template.TemplateTest#testCheckBoundTemplate",
        "spoon.test.template.TemplateTest#testExtensionDecoupledSubstitutionVisitor",
        "spoon.test.template.TemplateTest#testTemplateMatcherWithWholePackage",
        "spoon.test.template.TemplateTest#testTemplateMatcher",
        "spoon.test.template.TemplateTest#testTemplateC1",
        "spoon.test.template.TemplateTest#testTemplateInheritance",
        "spoon.test.template.TemplateTest#testSubstitutionInsertAllNtoN",
        "spoon.test.template.TemplateTest#testAnotherFieldAccessNameSubstitution"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 15
    },
    {
      "className": "spoon.test.condition.ConditionalTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.condition.ConditionalTest#testNoBlockInConditionAndLoop",
        "spoon.test.condition.ConditionalTest#testConditional",
        "spoon.test.condition.ConditionalTest#testBlockInConditionAndLoop",
        "spoon.test.condition.ConditionalTest#testConditionalWithAssignment"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.query_function.VariableReferencesTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.query_function.VariableReferencesTest#testPotentialVariableAccessFromStaticMethod",
        "spoon.test.query_function.VariableReferencesTest#testVariableReferenceFunction",
        "spoon.test.query_function.VariableReferencesTest#testCheckModelConsistency",
        "spoon.test.query_function.VariableReferencesTest#testLocalVariableReferenceDeclarationFunction",
        "spoon.test.query_function.VariableReferencesTest#testCatchVariableReferenceFunction",
        "spoon.test.query_function.VariableReferencesTest#testParameterReferenceFunction",
        "spoon.test.query_function.VariableReferencesTest#testVariableScopeFunction",
        "spoon.test.query_function.VariableReferencesTest#testLocalVariableReferenceFunction"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "spoon.test.support.ResourceTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.support.ResourceTest#testFilteringFolder"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.prettyprinter.PrinterTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.prettyprinter.PrinterTest#testPrinterTokenListener",
        "spoon.test.prettyprinter.PrinterTest#testChangeAutoImportModeWorks",
        "spoon.test.prettyprinter.PrinterTest#testPrintingOfOrphanFieldReference",
        "spoon.test.prettyprinter.PrinterTest#testAutoimportModeDontImportUselessStatic",
        "spoon.test.prettyprinter.PrinterTest#testRuleCanBeBuild"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "spoon.reflect.visitor.CtVisitorTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.reflect.visitor.CtVisitorTest#testMethodsInVisitor"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.reference.ExecutableReferenceGenericTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.reference.ExecutableReferenceGenericTest#testMultiReferenceWithGenericMethodOutOfTheClass",
        "spoon.test.reference.ExecutableReferenceGenericTest#testMethodGenericWithoutReferences",
        "spoon.test.reference.ExecutableReferenceGenericTest#testOneReferenceBetweenMethodsInSameClass",
        "spoon.test.reference.ExecutableReferenceGenericTest#testOneReferenceWithGenericMethodOutOfTheClass",
        "spoon.test.reference.ExecutableReferenceGenericTest#testMultiReferenceBetweenMethodsWithGenericInSameClass",
        "spoon.test.reference.ExecutableReferenceGenericTest#testOneReferenceWithMethodNotGenericOutOfTheClass",
        "spoon.test.reference.ExecutableReferenceGenericTest#testReferencesBetweenConstructors",
        "spoon.test.reference.ExecutableReferenceGenericTest#testReferencesBetweenConstructorsInOtherClass",
        "spoon.test.reference.ExecutableReferenceGenericTest#testExecutableReferences",
        "spoon.test.reference.ExecutableReferenceGenericTest#testMethodWithoutReferences",
        "spoon.test.reference.ExecutableReferenceGenericTest#testReferencesBetweenMethods",
        "spoon.test.reference.ExecutableReferenceGenericTest#testMultiReferencesBetweenMethodsWithoutGenericInSameClass"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 12
    },
    {
      "className": "spoon.test.targeted.TargetedExpressionTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.targeted.TargetedExpressionTest#testStaticTargetsOfInv",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldAccessInInnerClass",
        "spoon.test.targeted.TargetedExpressionTest#testClassDeclaredInALambda",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldAccess",
        "spoon.test.targeted.TargetedExpressionTest#testNotTargetedExpression",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldInAnonymousClass",
        "spoon.test.targeted.TargetedExpressionTest#testCtSuperAccess",
        "spoon.test.targeted.TargetedExpressionTest#testTargetOfFieldAccess",
        "spoon.test.targeted.TargetedExpressionTest#testCtThisAccess",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfInv",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfInvInInnerClass",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfInvInAnonymousClass",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfStaticFieldAccess"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 13
    },
    {
      "className": "spoon.test.jdtimportbuilder.ImportBuilderTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.jdtimportbuilder.ImportBuilderTest#testWithNoImport",
        "spoon.test.jdtimportbuilder.ImportBuilderTest#testWithStaticInheritedImport",
        "spoon.test.jdtimportbuilder.ImportBuilderTest#testWithStaticStarredImportFromInterface",
        "spoon.test.jdtimportbuilder.ImportBuilderTest#testSimpleStaticImport",
        "spoon.test.jdtimportbuilder.ImportBuilderTest#testWithImportFromItf"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "spoon.test.ctClass.CtClassTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.ctClass.CtClassTest#testCloneAnonymousClassInvocationWithAutoimports",
        "spoon.test.ctClass.CtClassTest#testSpoonShouldInferImplicitPackageInNoClasspath",
        "spoon.test.ctClass.CtClassTest#testDefaultConstructorAreOk",
        "spoon.test.ctClass.CtClassTest#testCloneAnonymousClassInvocation",
        "spoon.test.ctClass.CtClassTest#testNoClasspathWithSuperClassOfAClassInAnInterface",
        "spoon.test.ctClass.CtClassTest#testParentOfTheEnclosingClassOfStaticClass",
        "spoon.test.ctClass.CtClassTest#testAllTypeReferencesToALocalTypeShouldNotStartWithNumber"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 7
    },
    {
      "className": "spoon.test.variable.AccessFullyQualifiedFieldTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.variable.AccessFullyQualifiedFieldTest#testPrivateStaticImportShouldNotBeImportedInSameClass",
        "spoon.test.variable.AccessFullyQualifiedFieldTest#testNoFQNWhenUsedInLoop",
        "spoon.test.variable.AccessFullyQualifiedFieldTest#testNoFQNWhenShadowedByField",
        "spoon.test.variable.AccessFullyQualifiedFieldTest#testNoFQNWhenShadowedByLocalVariable",
        "spoon.test.variable.AccessFullyQualifiedFieldTest#testNoFQNAndStaticImport",
        "spoon.test.variable.AccessFullyQualifiedFieldTest#testNoFQNWhenUsedInInnerClassAndShadowedByLocalVariable",
        "spoon.test.variable.AccessFullyQualifiedFieldTest#testCheckAssignmentContracts",
        "spoon.test.variable.AccessFullyQualifiedFieldTest#testNoFQNWhenUsedInTryCatch",
        "spoon.test.variable.AccessFullyQualifiedFieldTest#testStaticImportWithAutoImport"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 9
    },
    {
      "className": "spoon.test.filters.FilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.filters.FilterTest#testOverriddenMethodFromInterface",
        "spoon.test.filters.FilterTest#testInvalidQueryStep",
        "spoon.test.filters.FilterTest#testClassCastExceptionOnForEach",
        "spoon.test.filters.FilterTest#testQueryWithOptionalNumberOfInputs",
        "spoon.test.filters.FilterTest#testSubInheritanceHierarchyResolver",
        "spoon.test.filters.FilterTest#testQueryStepScannWithConsumer",
        "spoon.test.filters.FilterTest#testEarlyTerminatingQuery",
        "spoon.test.filters.FilterTest#testgetTopDefinitions",
        "spoon.test.filters.FilterTest#testQueryBuilderWithFilterChain",
        "spoon.test.filters.FilterTest#testReflectionBasedTypeFilter",
        "spoon.test.filters.FilterTest#testOverriddenMethodsFromSubClassOfAbstractClass",
        "spoon.test.filters.FilterTest#testElementMapConsumableFunction",
        "spoon.test.filters.FilterTest#testReuseOfBaseQuery",
        "spoon.test.filters.FilterTest#testOverridingMethodFromInterface",
        "spoon.test.filters.FilterTest#testOverridingMethodFromAbstractClass",
        "spoon.test.filters.FilterTest#testQueryInQuery",
        "spoon.test.filters.FilterTest#testFilterQueryStep",
        "spoon.test.filters.FilterTest#testElementMapFunction",
        "spoon.test.filters.FilterTest#testOverriddenMethodFromSubClassOfInterface",
        "spoon.test.filters.FilterTest#testReuseOfQuery",
        "spoon.test.filters.FilterTest#testFilterChildrenWithoutFilterQueryStep",
        "spoon.test.filters.FilterTest#testOverridingMethodFromSubClassOfAbstractClass",
        "spoon.test.filters.FilterTest#testCtScannerListener",
        "spoon.test.filters.FilterTest#testParentFunction",
        "spoon.test.filters.FilterTest#testInvalidQueryStepFailurePolicyIgnore",
        "spoon.test.filters.FilterTest#testOverriddenMethodFromAbstractClass",
        "spoon.test.filters.FilterTest#testFunctionQueryStep",
        "spoon.test.filters.FilterTest#testOverridingMethodFromSubClassOfInterface",
        "spoon.test.filters.FilterTest#testInvocationFilterWithExecutableInLibrary"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 29
    },
    {
      "className": "spoon.test.control.ControlTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.control.ControlTest#testModelBuildingFor",
        "spoon.test.control.ControlTest#testModelBuildingDoWhile"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.literal.LiteralTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.literal.LiteralTest#testEscapedString",
        "spoon.test.literal.LiteralTest#testBuildLiternal",
        "spoon.test.literal.LiteralTest#testLiteralInForEachWithNoClasspath"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.reference.AnnotationFieldReferenceTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.reference.AnnotationFieldReferenceTest#testAnnotationFieldReference"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.support.compiler.jdt.JDTBatchCompilerTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.support.compiler.jdt.JDTBatchCompilerTest#testCompileGeneratedJavaFile"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.compilationunit.TestCompilationUnit",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.compilationunit.TestCompilationUnit#testGetUnitTypeWorksWithDeclaredType"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.reflect.declaration.UnknownDeclarationTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.reflect.declaration.UnknownDeclarationTest#testUnknownCalls"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.replace.ReplaceParametrizedTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.replace.ReplaceParametrizedTest#initializationError"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.reflect.declaration.CtTypeInformationTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.reflect.declaration.CtTypeInformationTest#testClassTypingContextContinueScanning",
        "spoon.reflect.declaration.CtTypeInformationTest#testGetAllMethodsWontReturnOverriddenMethod",
        "spoon.reflect.declaration.CtTypeInformationTest#testGetAllMethodsReturnsTheRightNumber",
        "spoon.reflect.declaration.CtTypeInformationTest#testGetSuperclass"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.arrays.ArraysTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.arrays.ArraysTest#testCtNewArrayInnerCtNewArray",
        "spoon.test.arrays.ArraysTest#testCtNewArrayWitComments",
        "spoon.test.arrays.ArraysTest#testArrayReferences"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.enums.EnumsTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.enums.EnumsTest#testModelBuildingEnum",
        "spoon.test.enums.EnumsTest#testAnnotationsOnEnum",
        "spoon.test.enums.EnumsTest#testEnumWithoutField",
        "spoon.test.enums.EnumsTest#testGetAllMethods"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.generics.GenericsTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.generics.GenericsTest#testIsSameSignatureWithReferencedGenerics",
        "spoon.test.generics.GenericsTest#testInvocationGenerics",
        "spoon.test.generics.GenericsTest#testClassTypingContextMethodSignature",
        "spoon.test.generics.GenericsTest#testTypeParameterReferenceAsActualTypeArgument",
        "spoon.test.generics.GenericsTest#testGenericsInConstructorCall",
        "spoon.test.generics.GenericsTest#testClassTypingContext",
        "spoon.test.generics.GenericsTest#testClassContextOnInnerClass",
        "spoon.test.generics.GenericsTest#testGenericTypeReference",
        "spoon.test.generics.GenericsTest#testAccessToGenerics",
        "spoon.test.generics.GenericsTest#testConstructorCallGenerics",
        "spoon.test.generics.GenericsTest#testGenericWithExtendsInDeclaration",
        "spoon.test.generics.GenericsTest#testGetExecDeclarationOfEnumSetOf",
        "spoon.test.generics.GenericsTest#testCannotAdaptTypeOfNonTypeScope",
        "spoon.test.generics.GenericsTest#testTypeParameterDeclarer",
        "spoon.test.generics.GenericsTest#testCtTypeReference_getSuperclass",
        "spoon.test.generics.GenericsTest#testDiamondComplexGenericsRxJava",
        "spoon.test.generics.GenericsTest#testIsSameSignatureWithMethodGenerics",
        "spoon.test.generics.GenericsTest#testisGeneric",
        "spoon.test.generics.GenericsTest#testName",
        "spoon.test.generics.GenericsTest#testGenericsInQualifiedNameInConstructorCall",
        "spoon.test.generics.GenericsTest#testGenericMethodCallWithExtend",
        "spoon.test.generics.GenericsTest#testMethodTypingContext",
        "spoon.test.generics.GenericsTest#testIsGenericTypeEqual",
        "spoon.test.generics.GenericsTest#testGenericInField",
        "spoon.test.generics.GenericsTest#testIsGenericsMethod",
        "spoon.test.generics.GenericsTest#testMethodsWithGenericsWhoExtendsObject",
        "spoon.test.generics.GenericsTest#testModelBuildingSimilarSignatureMethods",
        "spoon.test.generics.GenericsTest#testRecursiveTypeAdapting",
        "spoon.test.generics.GenericsTest#testDeclarationOfTypeParameterReference",
        "spoon.test.generics.GenericsTest#testGetDeclarationOfTypeParameterReference",
        "spoon.test.generics.GenericsTest#testTypeParameterReference",
        "spoon.test.generics.GenericsTest#testMethodTypingContextAdaptMethod",
        "spoon.test.generics.GenericsTest#testIsSameSignatureWithGenerics",
        "spoon.test.generics.GenericsTest#testGenericsOnLocalType",
        "spoon.test.generics.GenericsTest#testBugCommonCollection",
        "spoon.test.generics.GenericsTest#testNewClassGenerics",
        "spoon.test.generics.GenericsTest#testInstanceOfMapEntryGeneric"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 37
    },
    {
      "className": "spoon.test.model.SwitchCaseTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.model.SwitchCaseTest#testSwitchStatementOnAString"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.method.MethodTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.method.MethodTest#testGetAllMethodsAdaptingType",
        "spoon.test.method.MethodTest#testSearchMethodWithGeneric"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.variable.AccessTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.variable.AccessTest#testCanVisitArrayAccessAndSubClasses",
        "spoon.test.variable.AccessTest#testFieldWriteDeclaredInTheSuperclass",
        "spoon.test.variable.AccessTest#testCanVisitFieldAccessAndSubClasses",
        "spoon.test.variable.AccessTest#testCanVisitVariableAccessAndSubClasses",
        "spoon.test.variable.AccessTest#testStackedAssignments",
        "spoon.test.variable.AccessTest#testRHS"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "spoon.test.parent.SetParentTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.parent.SetParentTest#initializationError"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class spoon.test.parent.ParentContractTest",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.constructor.ConstructorTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.constructor.ConstructorTest#testTransformationOnConstructorWithInsertBegin",
        "spoon.test.constructor.ConstructorTest#testTypeAnnotationWithConstructorsOnFormalType",
        "spoon.test.constructor.ConstructorTest#testConstructorCallFactory",
        "spoon.test.constructor.ConstructorTest#testTransformationOnConstructorWithInsertBefore",
        "spoon.test.constructor.ConstructorTest#callParamConstructor",
        "spoon.test.constructor.ConstructorTest#testTypeAnnotationOnExceptionDeclaredInConstructors"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "spoon.test.parent.ParentTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.parent.ParentTest#testParentOfGenericInTypeReference",
        "spoon.test.parent.ParentTest#testParentOfCtPackageReference",
        "spoon.test.parent.ParentTest#testParentOfPrimitiveReference",
        "spoon.test.parent.ParentTest#testHasParent",
        "spoon.test.parent.ParentTest#testParentOfCtVariableReference",
        "spoon.test.parent.ParentTest#testParentOfCtExecutableReference"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.architecture.SpoonArchitectureEnforcerTest#metamodelPackageRule",
        "spoon.test.architecture.SpoonArchitectureEnforcerTest#testSpecPackage",
        "spoon.test.architecture.SpoonArchitectureEnforcerTest#testSrcMainJava",
        "spoon.test.architecture.SpoonArchitectureEnforcerTest#testStaticClasses",
        "spoon.test.architecture.SpoonArchitectureEnforcerTest#statelessFactory",
        "spoon.test.architecture.SpoonArchitectureEnforcerTest#testInterfacesAreCtScannable",
        "spoon.test.architecture.SpoonArchitectureEnforcerTest#testFactorySubFactory",
        "spoon.test.architecture.SpoonArchitectureEnforcerTest#testGoodTestClassNames"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "spoon.processing.CtGenerationTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.processing.CtGenerationTest#testGenerateReplacementVisitor",
        "spoon.processing.CtGenerationTest#testGenerateCloneVisitor",
        "spoon.processing.CtGenerationTest#testGenerateRoleHandler",
        "spoon.processing.CtGenerationTest#testGenerateCtBiScanner"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.testing.CtElementAssertTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.testing.CtElementAssertTest#testEqualityBetweenACtElementAndAString",
        "spoon.testing.CtElementAssertTest#testEqualityBetweenTwoCtElementWithTheSameSignatureButNotTheSameContent",
        "spoon.testing.CtElementAssertTest#testEqualityBetweenTwoDifferentCtElement",
        "spoon.testing.CtElementAssertTest#testEqualityBetweenTwoCtElement"
      ],
      "failures": [
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.AssertionError\u003e but was\u003cspoon.SpoonException\u003e",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.AssertionError\u003e but was\u003cspoon.SpoonException\u003e",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.exceptions.ExceptionTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.exceptions.ExceptionTest#testUnionCatchExceptionInsideLambdaInNoClasspath"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.executable.ExecutableTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.executable.ExecutableTest#testInfoInsideAnonymousExecutable",
        "spoon.test.executable.ExecutableTest#testBlockInExecutable",
        "spoon.test.executable.ExecutableTest#testGetReference"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.replace.ReplaceTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.replace.ReplaceTest#testReplaceExpression",
        "spoon.test.replace.ReplaceTest#testReplaceTwoMethods",
        "spoon.test.replace.ReplaceTest#testReplaceStmtByList",
        "spoon.test.replace.ReplaceTest#testReplaceAPackageReferenceByAnotherOne",
        "spoon.test.replace.ReplaceTest#testReplaceMethod",
        "spoon.test.replace.ReplaceTest#testReplaceStmtByListStatementsAndNull",
        "spoon.test.replace.ReplaceTest#testReplaceIntegerReference",
        "spoon.test.replace.ReplaceTest#testReplaceReplace",
        "spoon.test.replace.ReplaceTest#testReplaceExecutableReferenceByAnotherOne",
        "spoon.test.replace.ReplaceTest#testReplaceStmtByListStatements",
        "spoon.test.replace.ReplaceTest#testReplaceAllTypeRefenceWithGenerics",
        "spoon.test.replace.ReplaceTest#testReplaceSet",
        "spoon.test.replace.ReplaceTest#testReplaceField",
        "spoon.test.replace.ReplaceTest#testReplaceAParameterReferenceToFieldReference",
        "spoon.test.replace.ReplaceTest#testReplaceStatement",
        "spoon.test.replace.ReplaceTest#testReplaceBlockTry",
        "spoon.test.replace.ReplaceTest#testReplaceBlock"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 17
    },
    {
      "className": "spoon.test.compilationunit.GetBinaryFilesTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.compilationunit.GetBinaryFilesTest#testMultiClassInSingleFile",
        "spoon.test.compilationunit.GetBinaryFilesTest#testAnonymousClasses"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.type.TypeTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.type.TypeTest#testIntersectionTypeOnTopLevelType",
        "spoon.test.type.TypeTest#testTypeAccessForTypeAccessInInstanceOf",
        "spoon.test.type.TypeTest#testTypeReferenceInGenericsAndCasts",
        "spoon.test.type.TypeTest#testTypeAccessForDotClass",
        "spoon.test.type.TypeTest#testPolyTypBindingInTernaryExpression",
        "spoon.test.type.TypeTest#testTypeAccessOfArrayObjectInFullyQualifiedName",
        "spoon.test.type.TypeTest#testIntersectionTypeReferenceInGenericsAndCasts",
        "spoon.test.type.TypeTest#testTypeMemberOrder"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "spoon.reflect.visitor.CtInheritanceScannerMethodsTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.reflect.visitor.CtInheritanceScannerMethodsTest#testMethodsInInheritanceScanner"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.reflect.ast.CloneTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.reflect.ast.CloneTest#testCopyMethod",
        "spoon.reflect.ast.CloneTest#testCloneCastConditional",
        "spoon.reflect.ast.CloneTest#testCloneMethodsDeclaredInAST"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.factory.TypeFactoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.factory.TypeFactoryTest#testGetClassWithDollarAndNestedClass",
        "spoon.test.factory.TypeFactoryTest#testGetClassInAnInterface"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.intercession.IntercessionTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.intercession.IntercessionTest#testSettersAreAllGood"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.fieldaccesses.FieldAccessTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.fieldaccesses.FieldAccessTest#testTargetedAccessPosition",
        "spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessInLambda",
        "spoon.test.fieldaccesses.FieldAccessTest#testBCUBug20140402",
        "spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessDeclaredInADefaultClass",
        "spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessInAnonymousClass",
        "spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessWithoutAnyImport",
        "spoon.test.fieldaccesses.FieldAccessTest#testGetReference",
        "spoon.test.fieldaccesses.FieldAccessTest#testModelBuildingFieldAccesses",
        "spoon.test.fieldaccesses.FieldAccessTest#testBUG20160112",
        "spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessOnUnknownType",
        "spoon.test.fieldaccesses.FieldAccessTest#testTypeDeclaredInAnonymousClass",
        "spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessNoClasspath",
        "spoon.test.fieldaccesses.FieldAccessTest#testFieldWriteWithPlusEqualsOperation",
        "spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessAutoExplicit",
        "spoon.test.fieldaccesses.FieldAccessTest#testIncrementationOnAVarIsAUnaryOperator",
        "spoon.test.fieldaccesses.FieldAccessTest#testTypeOfFieldAccess"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 16
    },
    {
      "className": "spoon.test.trycatch.TryCatchTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.trycatch.TryCatchTest#testCatchWithExplicitFinalVariable",
        "spoon.test.trycatch.TryCatchTest#testCatchWithUnknownExceptions",
        "spoon.test.trycatch.TryCatchTest#testTryWithResources",
        "spoon.test.trycatch.TryCatchTest#testRethrowingExceptionsJava7",
        "spoon.test.trycatch.TryCatchTest#testTryWithOneResource",
        "spoon.test.trycatch.TryCatchTest#testMultiTryCatchWithCustomExceptions",
        "spoon.test.trycatch.TryCatchTest#testModelBuildingInitializer",
        "spoon.test.trycatch.TryCatchTest#testCompileMultiTryCatchWithCustomExceptions"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "spoon.MavenLauncherTest",
      "failingMethods": [
        "spoon.MavenLauncherTest#spoonMavenLauncherTest",
        "spoon.MavenLauncherTest#mavenLauncherTestMultiModulesAndVariables"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Content of classpath: ",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c7\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.imports.ImportTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.imports.ImportTest#testCanAccess",
        "spoon.test.imports.ImportTest#testFullQualifiedNameImport",
        "spoon.test.imports.ImportTest#testDeepNestedStaticPathWithTypedParameter",
        "spoon.test.imports.ImportTest#testShouldNotCreateAutoreference",
        "spoon.test.imports.ImportTest#testSpoonWithImports",
        "spoon.test.imports.ImportTest#testImportOfInvocationOfPrivateClass",
        "spoon.test.imports.ImportTest#testStaticImportForInvocationInNoClasspath",
        "spoon.test.imports.ImportTest#testJavaLangIsConsideredAsImported",
        "spoon.test.imports.ImportTest#testMultipleCU",
        "spoon.test.imports.ImportTest#testNestedAccessPathWithTypedParameterWithImports",
        "spoon.test.imports.ImportTest#testSortImportPutStaticImportAfterTypeImport",
        "spoon.test.imports.ImportTest#testImportOfInvocationOfStaticMethod",
        "spoon.test.imports.ImportTest#testImportStaticAndFieldAccessWithImport",
        "spoon.test.imports.ImportTest#testStaticMethodWithDifferentClassSameNameCollision",
        "spoon.test.imports.ImportTest#testSuperInheritanceHierarchyFunctionNoClasspath",
        "spoon.test.imports.ImportTest#testAccessToNestedClass",
        "spoon.test.imports.ImportTest#testWithInnerEnumDoesNotImportStaticInnerMethods",
        "spoon.test.imports.ImportTest#testImportOfAnInnerClassInASuperClassAvailableInLibrary",
        "spoon.test.imports.ImportTest#testImportOfAnInnerClassInASuperClassPackageFullQualified",
        "spoon.test.imports.ImportTest#testNestedStaticPathWithTypedParameter",
        "spoon.test.imports.ImportTest#testDeepNestedStaticPathWithTypedParameterWithImports",
        "spoon.test.imports.ImportTest#testImportStaticAndFieldAccess",
        "spoon.test.imports.ImportTest#testImportWithGenerics",
        "spoon.test.imports.ImportTest#testJavaLangIsConsideredAsImportedButNotForSubPackages",
        "spoon.test.imports.ImportTest#testSuperInheritanceHierarchyFunctionListener",
        "spoon.test.imports.ImportTest#testNestedAccessPathWithTypedParameter",
        "spoon.test.imports.ImportTest#testNestedStaticPathWithTypedParameterWithImports",
        "spoon.test.imports.ImportTest#testAccessType",
        "spoon.test.imports.ImportTest#testSuperInheritanceHierarchyFunction",
        "spoon.test.imports.ImportTest#testImportStarredPackageWithNonVisibleClass",
        "spoon.test.imports.ImportTest#testImportOfAnInnerClassInASuperClassPackageAutoImport",
        "spoon.test.imports.ImportTest#testStaticMethodWithDifferentClassSameNameJava3NoCollision",
        "spoon.test.imports.ImportTest#testMissingImport",
        "spoon.test.imports.ImportTest#testNotImportExecutableType",
        "spoon.test.imports.ImportTest#testAnotherMissingImport",
        "spoon.test.imports.ImportTest#testImportOfAnInnerClassInAClassPackage",
        "spoon.test.imports.ImportTest#testStaticMethodWithDifferentClassSameNameJava7NoCollision",
        "spoon.test.imports.ImportTest#testNewInnerClassDefinesInItsClassAndSuperClass",
        "spoon.test.imports.ImportTest#testAccessPath"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 39
    },
    {
      "className": "spoon.test.initializers.InitializerTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.initializers.InitializerTest#testModelBuildingInitializer",
        "spoon.test.initializers.InitializerTest#testModelBuildingStaticInitializer"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.reference.TypeReferenceTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.reference.TypeReferenceTest#testConstructorCallInNoClasspath",
        "spoon.test.reference.TypeReferenceTest#testIgnoreEnclosingClassInActualTypes",
        "spoon.test.reference.TypeReferenceTest#testSubTypeAnonymous",
        "spoon.test.reference.TypeReferenceTest#testToStringEqualityBetweenTwoGenericTypeDifferent",
        "spoon.test.reference.TypeReferenceTest#testPackageInNoClasspath",
        "spoon.test.reference.TypeReferenceTest#testTypeReferenceWithGenerics",
        "spoon.test.reference.TypeReferenceTest#testGetTypeDeclaration",
        "spoon.test.reference.TypeReferenceTest#testTypeReferenceSpecifiedInClassDeclarationInNoClasspathWithGenerics",
        "spoon.test.reference.TypeReferenceTest#testInvocationWithFieldAccessInNoClasspath",
        "spoon.test.reference.TypeReferenceTest#testRecursiveTypeReference",
        "spoon.test.reference.TypeReferenceTest#testTypeReferenceSpecifiedInClassDeclarationInNoClasspath",
        "spoon.test.reference.TypeReferenceTest#testArgumentOfAInvocationIsNotATypeAccess"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 12
    },
    {
      "className": "spoon.test.parent.ParentContractTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.parent.ParentContractTest#initializationError"
      ],
      "failures": [
        {
          "failureName": "java.lang.ExceptionInInitializerError",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.loop.LoopTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.loop.LoopTest#testForeachShouldHaveAlwaysABlockInItsBody",
        "spoon.test.loop.LoopTest#testAnnotationInForLoop"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.annotation.AnnotationLoopTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.annotation.AnnotationLoopTest#testAnnotationDeclaredInForInit"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.annotation.AnnotationTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.annotation.AnnotationTest#testOutputGeneratedByTypeAnnotation",
        "spoon.test.annotation.AnnotationTest#testCreateRepeatableAnnotation",
        "spoon.test.annotation.AnnotationTest#testAnnotatedElementTypes",
        "spoon.test.annotation.AnnotationTest#testRepeatableAnnotationAreManagedWithArrays",
        "spoon.test.annotation.AnnotationTest#testAnnotationArray",
        "spoon.test.annotation.AnnotationTest#testInnerAnnotationsWithArray",
        "spoon.test.annotation.AnnotationTest#testRepeatableAnnotationAreManaged",
        "spoon.test.annotation.AnnotationTest#testAnnotationAndShadowClassRetentionPolicy",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationInCast",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationInReturnTypeInMethod",
        "spoon.test.annotation.AnnotationTest#testAnnotationIntrospection",
        "spoon.test.annotation.AnnotationTest#testAnnotationTypeAndFieldOnField",
        "spoon.test.annotation.AnnotationTest#annotationAddValue",
        "spoon.test.annotation.AnnotationTest#testAbstractAllAnnotationProcessorWithGlobalAnnotation",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationInNewInstance",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationOnLocalVariableInMethod",
        "spoon.test.annotation.AnnotationTest#testCreateRepeatableAnnotationWithArrays",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationBeforeExceptionInSignatureOfMethod",
        "spoon.test.annotation.AnnotationTest#testUsageOfParametersInTypeAnnotation",
        "spoon.test.annotation.AnnotationTest#testWritingAnnotParamArray",
        "spoon.test.annotation.AnnotationTest#testAnnotationAndShadowDefaultRetentionPolicy",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationInExtendsImplementsOfAClass",
        "spoon.test.annotation.AnnotationTest#testAnnotationWithDefaultArrayValue",
        "spoon.test.annotation.AnnotationTest#testAbstractAllAnnotationProcessor",
        "spoon.test.annotation.AnnotationTest#testSpoonSpoonResult",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationWithGenericTypesInClassDeclaration",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationOnParameterInMethod",
        "spoon.test.annotation.AnnotationTest#testAnnotationAndShadowRuntimeRetentionPolicy",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationWithGenericTypesInStatements",
        "spoon.test.annotation.AnnotationTest#testGetAnnotationOuter"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 30
    },
    {
      "className": "spoon.test.invocations.InvocationTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.invocations.InvocationTest#testTargetNullForStaticMethod",
        "spoon.test.invocations.InvocationTest#testTypeOfStaticInvocation"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.strings.StringTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.strings.StringTest#testModelBuildingInitializer"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.jar.JarTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.jar.JarTest#testFile",
        "spoon.test.jar.JarTest#testJar"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.LauncherTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.LauncherTest#testLLauncherBuildModelReturnAModel",
        "spoon.LauncherTest#testLauncherInEmptyWorkingDir"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.pkg.PackageTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.pkg.PackageTest#testAddAnnotationToPackage",
        "spoon.test.pkg.PackageTest#testRenamePackageAndPrettyPrintWithProcessor",
        "spoon.test.pkg.PackageTest#testRenamePackageAndPrettyPrintNoclasspath",
        "spoon.test.pkg.PackageTest#testGetFQNSimple",
        "spoon.test.pkg.PackageTest#testAnnotationOnPackage",
        "spoon.test.pkg.PackageTest#testRenameRootPackageWithNullOrEmpty",
        "spoon.test.pkg.PackageTest#testPackage",
        "spoon.test.pkg.PackageTest#testRenamePackageAndPrettyPrint",
        "spoon.test.pkg.PackageTest#testRenameRootPackage"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 9
    },
    {
      "className": "spoon.test.varargs.VarArgsTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.varargs.VarArgsTest#testModelBuildingInitializer"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.intercession.IntercessionContractTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.intercession.IntercessionContractTest#initializationError"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.filters.CUFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.filters.CUFilterTest#testWithoutFilters",
        "spoon.test.filters.CUFilterTest#testSingleExcludeWithFilter",
        "spoon.test.filters.CUFilterTest#testSingleExcludeWithoutFilter"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.serializable.SourcePositionTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.serializable.SourcePositionTest#testSourcePosition"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.methodreference.MethodReferenceTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.methodreference.MethodReferenceTest#testReferenceToAClassParametrizedConstructor",
        "spoon.test.methodreference.MethodReferenceTest#testNoClasspathSuperExecutable",
        "spoon.test.methodreference.MethodReferenceTest#testNoClasspathExecutableReferenceExpression",
        "spoon.test.methodreference.MethodReferenceTest#testReferenceToAnInstanceMethodOfMultiParticularObject",
        "spoon.test.methodreference.MethodReferenceTest#testGetGenericMethodFromReference",
        "spoon.test.methodreference.MethodReferenceTest#testReferenceBuilderWithComplexGenerics",
        "spoon.test.methodreference.MethodReferenceTest#testCompileMethodReferenceGeneratedBySpoon",
        "spoon.test.methodreference.MethodReferenceTest#testReferenceToAnInstanceMethodOfAParticularObject",
        "spoon.test.methodreference.MethodReferenceTest#testReferenceToAJavaUtilClassConstructor",
        "spoon.test.methodreference.MethodReferenceTest#testReferenceToAStaticMethod",
        "spoon.test.methodreference.MethodReferenceTest#testReferenceToAnInstanceMethodOfAnArbitraryObjectOfAParticularType",
        "spoon.test.methodreference.MethodReferenceTest#testReferenceToAConstructor",
        "spoon.test.methodreference.MethodReferenceTest#testGetGenericExecutableReference"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 13
    },
    {
      "className": "spoon.test.executable.ExecutableRefTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.executable.ExecutableRefTest#constructorTest",
        "spoon.test.executable.ExecutableRefTest#methodTest",
        "spoon.test.executable.ExecutableRefTest#testGetActualClassTest",
        "spoon.test.executable.ExecutableRefTest#testOverridingMethod"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testAmbiguousImplicitFieldReference",
        "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testAmbiguousImplicitFieldReferenceAutoImport",
        "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testGenericsWithAmbiguousStaticField",
        "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testChildOfGenericsWithAmbiguousStaticFieldAutoImport",
        "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testImplicitStaticFieldReference",
        "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testImplicitStaticFieldReferenceAutoImport",
        "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testAnnotationInChildWithConstantsAutoImport",
        "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testGenericsWithAmbiguousMemberField",
        "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testAnnotationInChildWithConstants",
        "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testGenericsWithAmbiguousStaticFieldAutoImport",
        "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testImplicitFieldReferenceAutoImport",
        "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testImplicitFieldReference",
        "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testGenericsWithAmbiguousMemberFieldAutoImport",
        "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testChildOfGenericsWithAmbiguousStaticField"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 14
    },
    {
      "className": "spoon.test.ctCase.SwitchCaseTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.ctCase.SwitchCaseTest#insertBeforeStatementInSwitchCaseWithoutException",
        "spoon.test.ctCase.SwitchCaseTest#insertAfterStatementInSwitchCaseWithoutException"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.factory.FactoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.factory.FactoryTest#specificationCoreFactoryCreate",
        "spoon.test.factory.FactoryTest#testClassAccessCreatedFromFactories",
        "spoon.test.factory.FactoryTest#testCtModel",
        "spoon.test.factory.FactoryTest#testIncrementalModel"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.enums.EnumsTypeTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.enums.EnumsTypeTest#testEnumsType"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.constructorcallnewclass.ConstructorCallTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallWithGenericArray",
        "spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallObjectWithoutParameters",
        "spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallStringWithParameters",
        "spoon.test.constructorcallnewclass.ConstructorCallTest#testCoreConstructorCall",
        "spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallStringWithoutParameters",
        "spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallObjectWithParameters"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "spoon.test.labels.TestLabels",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.labels.TestLabels#testLabelsAreDetected"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.ctElement.MetadataTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.ctElement.MetadataTest#testMetadata"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.prettyprinter.LinesTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.prettyprinter.LinesTest#testIdenticalPrettyPrinter"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.api.NoClasspathTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.api.NoClasspathTest#test",
        "spoon.test.api.NoClasspathTest#testGetStaticDependency",
        "spoon.test.api.NoClasspathTest#testInheritanceInNoClassPathWithClasses"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.api.MetamodelTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.api.MetamodelTest#testGetterSetterFroRole",
        "spoon.test.api.MetamodelTest#testRoleOnField",
        "spoon.test.api.MetamodelTest#testGetAllMetamodelInterfacess"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.limits.utils.InternalTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.limits.utils.InternalTest#testStaticFinalFieldInAnonymousClass",
        "spoon.test.limits.utils.InternalTest#testInternalClasses"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.testing.CtPackageAssertTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.testing.CtPackageAssertTest#testEqualityBetweenTwoDifferentCtPackage",
        "spoon.testing.CtPackageAssertTest#testEqualityBetweenTwoCtPackageWithDifferentTypes",
        "spoon.testing.CtPackageAssertTest#testEqualityBetweenTwoCtPackage"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.AssertionError\u003e but was\u003cspoon.SpoonException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.AssertionError\u003e but was\u003cspoon.SpoonException\u003e",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.reflect.ast.AstCheckerTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.reflect.ast.AstCheckerTest#testAvoidSetCollectionSavedOnAST",
        "spoon.reflect.ast.AstCheckerTest#testPushToStackChanges"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.factory.FieldFactoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.factory.FieldFactoryTest#testCreateFromSource"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.position.PositionTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.position.PositionTest#testPositionOfAnnonymousType",
        "spoon.test.position.PositionTest#defaultConstructorPositionTest",
        "spoon.test.position.PositionTest#testPositionParameterTypeReference",
        "spoon.test.position.PositionTest#testPositionInterface",
        "spoon.test.position.PositionTest#testPositionStatement",
        "spoon.test.position.PositionTest#testPositionClass",
        "spoon.test.position.PositionTest#testPositionClassWithComments",
        "spoon.test.position.PositionTest#testPositionAbstractMethod",
        "spoon.test.position.PositionTest#testPositionField",
        "spoon.test.position.PositionTest#testPositionOfAnnonymousTypeByNewInterface",
        "spoon.test.position.PositionTest#getPositionOfImplicitBlock",
        "spoon.test.position.PositionTest#testPositionAnnotation"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 12
    },
    {
      "className": "spoon.test.model.TypeTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.model.TypeTest#superclassTest"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.reference.CloneReferenceTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.reference.CloneReferenceTest#testGetDeclarationOfFieldAfterClone",
        "spoon.test.reference.CloneReferenceTest#testGetDeclarationAfterClone"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.prettyprinter.QualifiedThisRefTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.prettyprinter.QualifiedThisRefTest#testPrintCtFieldAccessWorkEvenWhenParentNotInitialized",
        "spoon.test.prettyprinter.QualifiedThisRefTest#testCloneThisAccess",
        "spoon.test.prettyprinter.QualifiedThisRefTest#testQualifiedThisRef"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.reflect.visitor.CtScannerTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.reflect.visitor.CtScannerTest#testScannerCallsAllProperties",
        "spoon.reflect.visitor.CtScannerTest#testScan",
        "spoon.reflect.visitor.CtScannerTest#testScannerContract"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.refactoring.MethodsRefactoringTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.refactoring.MethodsRefactoringTest#testExecutableReferenceFilter",
        "spoon.test.refactoring.MethodsRefactoringTest#testSubInheritanceHierarchyFunction",
        "spoon.test.refactoring.MethodsRefactoringTest#testAllMethodsSameSignatureFunction",
        "spoon.test.refactoring.MethodsRefactoringTest#testCtParameterRemoveRefactoringValidationCheck",
        "spoon.test.refactoring.MethodsRefactoringTest#testCtParameterRemoveRefactoring"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "spoon.test.processing.ProcessingTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.processing.ProcessingTest#testCallProcessorWithMultipleTypes",
        "spoon.test.processing.ProcessingTest#testProcessorWithGenericType"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.reference.VariableAccessTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.reference.VariableAccessTest#testReferences",
        "spoon.test.reference.VariableAccessTest#testReferencesInInitExpression",
        "spoon.test.reference.VariableAccessTest#testSuperAccess",
        "spoon.test.reference.VariableAccessTest#testVariableAccessDeclarationInAnonymousClass",
        "spoon.test.reference.VariableAccessTest#testReferenceToLocalVariableDeclaredInLoop",
        "spoon.test.reference.VariableAccessTest#testDeclarationArray",
        "spoon.test.reference.VariableAccessTest#testMultipleDeclarationsOfLocalVariable",
        "spoon.test.reference.VariableAccessTest#testGetDeclarationAfterClone"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "spoon.test.secondaryclasses.ClassesTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.secondaryclasses.ClassesTest#testClassWithInternalPublicClassOrInterf",
        "spoon.test.secondaryclasses.ClassesTest#testAnonymousClass",
        "spoon.test.secondaryclasses.ClassesTest#testIsAnonymousMethodInCtClass",
        "spoon.test.secondaryclasses.ClassesTest#testAnonymousClassInStaticField"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.prettyprinter.DefaultPrettyPrinterTest#useFullyQualifiedNamesInCtElementImpl_toString",
        "spoon.test.prettyprinter.DefaultPrettyPrinterTest#testPrintAClassWithImports",
        "spoon.test.prettyprinter.DefaultPrettyPrinterTest#testPrintAMethodWithGeneric",
        "spoon.test.prettyprinter.DefaultPrettyPrinterTest#testPrintAMethodWithImports",
        "spoon.test.prettyprinter.DefaultPrettyPrinterTest#testIssue1501",
        "spoon.test.prettyprinter.DefaultPrettyPrinterTest#autoImportUsesFullyQualifiedNameWhenImportedNameAlreadyPresent"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "spoon.test.visitor.AssignmentsEqualsTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.visitor.AssignmentsEqualsTest#testEquals"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.comment.CommentTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.comment.CommentTest#testCommentsInComment1And2",
        "spoon.test.comment.CommentTest#testCombinedPackageInfoComment",
        "spoon.test.comment.CommentTest#testJavaDocCommentOnMac",
        "spoon.test.comment.CommentTest#testCodeFactory",
        "spoon.test.comment.CommentTest#testWildComments",
        "spoon.test.comment.CommentTest#testJavaDocEmptyCommentAndTag",
        "spoon.test.comment.CommentTest#testDocumentationContract",
        "spoon.test.comment.CommentTest#testCommentsInResourcesWithWindowsEOL",
        "spoon.test.comment.CommentTest#testInsertNewComment",
        "spoon.test.comment.CommentTest#testJavadocShortAndLongComment",
        "spoon.test.comment.CommentTest#testBlockComment",
        "spoon.test.comment.CommentTest#testInLineComment",
        "spoon.test.comment.CommentTest#testJavaDocCommentOnUnix",
        "spoon.test.comment.CommentTest#testCoreFactory",
        "spoon.test.comment.CommentTest#testRemoveComment"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 15
    },
    {
      "className": "spoon.test.imports.ImportScannerTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.imports.ImportScannerTest#testMultiCatchImport",
        "spoon.test.imports.ImportScannerTest#testComputeImportsInClassWithSameName"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.visibility.VisibilityTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.visibility.VisibilityTest#testVisibilityOfClassesNamedByClassesInJavaLangPackage",
        "spoon.test.visibility.VisibilityTest#testMethodeWithNonAccessibleTypeArgument",
        "spoon.test.visibility.VisibilityTest#testName",
        "spoon.test.visibility.VisibilityTest#testFullyQualifiedNameOfTypeReferenceWithGeneric"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.ctType.CtTypeTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.ctType.CtTypeTest#testIsSubTypeOfonTypeParameters",
        "spoon.test.ctType.CtTypeTest#testHasMethodInSuperClass",
        "spoon.test.ctType.CtTypeTest#testIsSubTypeOf",
        "spoon.test.ctType.CtTypeTest#testIsSubTypeOfonTypeReferences",
        "spoon.test.ctType.CtTypeTest#testHasMethodInDefaultMethod"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "spoon.testing.FileAssertTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.testing.FileAssertTest#testEqualsBetweenTwoSameFile",
        "spoon.testing.FileAssertTest#testEqualsBetweenTwoDifferentFile"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.AssertionError\u003e but was\u003cspoon.SpoonException\u003e",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.model.AnonymousExecutableTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.model.AnonymousExecutableTest#testStatements"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.processing.ProcessingTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.processing.ProcessingTest#testInterruptAProcessor"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.eval.EvalTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.eval.EvalTest#testVisitorPartialEvaluatorScanner",
        "spoon.test.eval.EvalTest#testDoNotSimplifyToExpressionWhenStatementIsExpected",
        "spoon.test.eval.EvalTest#testDoNotSimplify",
        "spoon.test.eval.EvalTest#testStringConcatenation",
        "spoon.test.eval.EvalTest#testTryCatchAndStatement",
        "spoon.test.eval.EvalTest#testArrayLength",
        "spoon.test.eval.EvalTest#testDoNotSimplifyCasts"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 7
    },
    {
      "className": "spoon.test.serializable.SerializableTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.serializable.SerializableTest#testSerializationModelStreamer",
        "spoon.test.serializable.SerializableTest#testSerialFile"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.reference.ExecutableReferenceTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.reference.ExecutableReferenceTest#testCallMethodOfClassNotPresent",
        "spoon.test.reference.ExecutableReferenceTest#testSuperClassInGetAllExecutables",
        "spoon.test.reference.ExecutableReferenceTest#testLambdaNoClasspath",
        "spoon.test.reference.ExecutableReferenceTest#testSpecifyGetAllExecutablesMethod",
        "spoon.test.reference.ExecutableReferenceTest#testInvokeEnumMethod"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "spoon.test.parameters.ParameterTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.parameters.ParameterTest#testGetParameterReferenceInLambdaNoClasspath",
        "spoon.test.parameters.ParameterTest#testParameterInNoClasspath",
        "spoon.test.parameters.ParameterTest#testMultiParameterLambdaTypeReference"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.main.MainTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.main.MainTest#spoon.test.main.MainTest"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.reflect.meta.MetaModelTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.reflect.meta.MetaModelTest#spoonMetaModelTest"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.visitor.VisitorTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.visitor.VisitorTest#testRecursiveDescent"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.lambda.LambdaTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.lambda.LambdaTest#testLambdaMethod",
        "spoon.test.lambda.LambdaTest#testFieldAccessInLambdaNoClassPathExternal1Example",
        "spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithParameterTyped",
        "spoon.test.lambda.LambdaTest#testLambdaExpressionWithStatementBodyAndWithoutParameters",
        "spoon.test.lambda.LambdaTest#testEqualsLambdaParameterRef",
        "spoon.test.lambda.LambdaTest#testGetOverriddenMethodWithFunction",
        "spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithMultiParametersTyped",
        "spoon.test.lambda.LambdaTest#testLambdaFilter",
        "spoon.test.lambda.LambdaTest#testTypeParameterWithImplicitArrayType",
        "spoon.test.lambda.LambdaTest#testTypeParameterOfLambdaWithoutType2",
        "spoon.test.lambda.LambdaTest#testGetDeclarationOnTypeParameterFromLambda",
        "spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithoutTypeForParameter",
        "spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithoutParameter",
        "spoon.test.lambda.LambdaTest#testFieldAccessInLambdaNoClassPath",
        "spoon.test.lambda.LambdaTest#testLambdaExpressionInIfConditional",
        "spoon.test.lambda.LambdaTest#testBuildExecutableReferenceFromLambda",
        "spoon.test.lambda.LambdaTest#testCompileLambdaGeneratedBySpoon",
        "spoon.test.lambda.LambdaTest#testTypeAccessInLambdaNoClassPath",
        "spoon.test.lambda.LambdaTest#testLambdaWithPrimitiveParameter",
        "spoon.test.lambda.LambdaTest#testTypeParameterOfLambdaWithoutType",
        "spoon.test.lambda.LambdaTest#testLambdaExpressionWithStatementBodyAndWithParameter",
        "spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithMultiParameters"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 22
    },
    {
      "className": "spoon.testing.AbstractAssertTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.testing.AbstractAssertTest#testTransformationWithProcessorInstantiated",
        "spoon.testing.AbstractAssertTest#testTransformationWithProcessorClass",
        "spoon.testing.AbstractAssertTest#testTransformationWithProcessorName",
        "spoon.testing.AbstractAssertTest#testTransformationFromCtElementWithProcessor"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.compilation.CompilationTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.compilation.CompilationTest#testNewInstanceFromExistingClass",
        "spoon.test.compilation.CompilationTest#compileCommandLineTest",
        "spoon.test.compilation.CompilationTest#testFilterResourcesDir",
        "spoon.test.compilation.CompilationTest#compileTest",
        "spoon.test.compilation.CompilationTest#testExoticClassLoader",
        "spoon.test.compilation.CompilationTest#testFilterResourcesFile",
        "spoon.test.compilation.CompilationTest#testPrecompile"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 7
    },
    {
      "className": "spoon.test.javadoc.JavaDocTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.javadoc.JavaDocTest#testJavadocNotPresentInAST",
        "spoon.test.javadoc.JavaDocTest#testJavaDocReprint"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.support.compiler.jdt.ExtendedStringLiteralTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.support.compiler.jdt.ExtendedStringLiteralTest#testExtendedStringLiteral"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ]
}