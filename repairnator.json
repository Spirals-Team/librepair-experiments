{
  "totalNumberSkippingTests": 59,
  "bugType": "only_fail",
  "totalNumberErroringTests": 371,
  "repo": "druid-io/druid",
  "failingModule": "/root/workspace/druid-io/druid/266657822/processing",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 0,
  "error-types": [
    "java.lang.NullPointerException"
  ],
  "totalNumberRunningTests": 75210,
  "failing-test-cases": [
    {
      "className": "io.druid.segment.filter.InFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.InFilterTest#testMatchWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMatchWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMatchWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMatchWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMatchWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMatchWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testMatchWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testMatchWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 48
    },
    {
      "className": "io.druid.segment.filter.InvalidFilteringTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.InvalidFilteringTest#testFilterTheUnfilterable[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.InvalidFilteringTest#testFilterTheUnfilterable[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.InvalidFilteringTest#testFilterTheUnfilterable[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.InvalidFilteringTest#testFilterTheUnfilterable[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "io.druid.segment.filter.SelectorFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.SelectorFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testSelectorWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testWithTimeExtractionFnNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testSelectorWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testWithTimeExtractionFnNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testSelectorWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testWithTimeExtractionFnNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testWithTimeExtractionFnNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testSelectorWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 56
    },
    {
      "className": "io.druid.segment.filter.BoundFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchWithNegatives[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testNumericMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testNumericMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchWithNegatives[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testNumericMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testNumericMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testNumericMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testNumericMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchWithNegatives[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchWithNegatives[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testNumericMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testNumericMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 64
    },
    {
      "className": "io.druid.query.timeseries.TimeseriesQueryRunnerTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithNonExistentFilter[noRollupMMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithFilterOnNonExistentDimensionSkipBuckets[mMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithFilterOnNonExistentDimension[mMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithNonExistentFilter[mMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithFilterOnNonExistentDimension[mergedRealtimeIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithNonExistentFilterAndMultiDim[mergedRealtimeIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithFilterOnNonExistentDimensionSkipBuckets[mergedRealtimeIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithNonExistentFilterAndMultiDim[noRollupMMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithFilterOnNonExistentDimension[noRollupMMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithNonExistentFilterAndMultiDim[mMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithFilterOnNonExistentDimensionSkipBuckets[noRollupMMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithNonExistentFilter[mergedRealtimeIndex:descending\u003dtrue]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 24
    },
    {
      "className": "io.druid.segment.filter.JavaScriptFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.JavaScriptFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testJavascriptFilterWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testJavascriptFilterWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testJavascriptFilterWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testJavascriptFilterWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 48
    },
    {
      "className": "io.druid.query.select.SelectQueryRunnerTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.query.select.SelectQueryRunnerTest#testFullSelectNoResults[noRollupMMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.select.SelectQueryRunnerTest#testFullSelectNoResults[mergedRealtimeIndex:descending\u003dtrue]",
        "io.druid.query.select.SelectQueryRunnerTest#testFullSelectNoResults[mMappedTestIndex:descending\u003dtrue]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "io.druid.segment.filter.FilterPartitionTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.FilterPartitionTest#testBasicPreAndPostFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.FilterPartitionTest#testBasicPreAndPostFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testBasicPreAndPostFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testSinglePreFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testSinglePostFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testBasicPreAndPostFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.FilterPartitionTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testSinglePreFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.FilterPartitionTest#testSinglePreFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testSinglePostFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testOrPostFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testSinglePreFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.FilterPartitionTest#testOrPostFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 32
    },
    {
      "className": "io.druid.segment.filter.RegexFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.RegexFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.RegexFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.RegexFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.RegexFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.RegexFilterTest#testRegexWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.RegexFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.RegexFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.RegexFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.RegexFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.RegexFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.RegexFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.RegexFilterTest#testRegexWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.RegexFilterTest#testRegexWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.RegexFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.RegexFilterTest#testRegexWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.RegexFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 32
    },
    {
      "className": "io.druid.segment.filter.ExpressionFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.ExpressionFilterTest#testConstantExpression[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.ExpressionFilterTest#testConstantExpression[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.ExpressionFilterTest#testMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.ExpressionFilterTest#testMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.ExpressionFilterTest#testMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.ExpressionFilterTest#testMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.ExpressionFilterTest#testConstantExpression[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.ExpressionFilterTest#testConstantExpression[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 16
    },
    {
      "className": "io.druid.segment.filter.SearchQueryFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.SearchQueryFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testSearchQueryWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testSearchQueryWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testSearchQueryWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testSearchQueryWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 32
    },
    {
      "className": "io.druid.segment.filter.AndFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.AndFilterTest#testAnd[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.AndFilterTest#testAnd[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.AndFilterTest#testAnd[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.AndFilterTest#testAnd[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    }
  ]
}