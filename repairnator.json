{
  "totalNumberSkippingTests": 4,
  "bugType": "only_fail",
  "totalNumberErroringTests": 2,
  "repo": "INRIA/spoon",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 4,
      "ComputeClasspath": 4,
      "ComputeTestDir": 0,
      "ResolveDependency": 30,
      "BuildProject": 25,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 5,
      "CloneRepository": 7,
      "NopolRepair": 65,
      "CheckoutPatchedBuild": 0,
      "TestProject": 357,
      "GatherTestInformation": 0,
      "PushIncriminatedBuild": 8,
      "AstorRepair": 184,
      "CommitPatch": 7
    },
    "FailureNames": [
      "java.lang.StringIndexOutOfBoundsException",
      "java.lang.AssertionError",
      "org.junit.ComparisonFailure"
    ],
    "NbFailingTests": 7,
    "BugCommitUrl": "http://github.com/INRIA/spoon/commit/1982823b6bfbe0ee4b5be6441db52f698d15baff",
    "ReproductionDate": "Mar 27, 2018 9:57:21 PM",
    "BuggyBuildId": 359059443,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/INRIA/spoon/builds/359059443",
    "BuggyBuildDate": "Mar 27, 2018 9:57:08 PM",
    "BugCommit": "1982823b6bfbe0ee4b5be6441db52f698d15baff",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 1396,
    "NbLibraries": 14,
    "NbFileApp": 1082,
    "NbFileTests": 1294,
    "NbCPU": 32,
    "FreeMemory": 4944488008,
    "TotalMemory": 6004146176,
    "AngelicValuesByTest": {
      "spoon/test/position/PositionTest": 0,
      "spoon/test/prettyprinter/PrintChangesTest": 0,
      "spoon/MavenLauncherTest": 0,
      "spoon/test/main/MainTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 379856336,
      "ComputeClasspath": 654410352,
      "ComputeTestDir": 363037680,
      "ResolveDependency": 743858344,
      "BuildProject": 695654048,
      "NPERepair": 656442688,
      "ComputeSourceDir": 654410352,
      "InitRepoToPush": 475256432,
      "CloneRepository": 489467256,
      "NopolRepair": 5081217120,
      "CheckoutPatchedBuild": 4944488008,
      "TestProject": 643690112,
      "GatherTestInformation": 621978688,
      "PushIncriminatedBuild": 656442688,
      "AstorRepair": 1059464008,
      "CommitPatch": 4944488008
    }
  },
  "failingModule": "/root/workspace/INRIA/spoon/359059443",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 5,
  "error-types": [
    "java.lang.StringIndexOutOfBoundsException",
    "java.lang.AssertionError",
    "org.junit.ComparisonFailure"
  ],
  "totalNumberRunningTests": 1396,
  "failing-test-cases": [
    {
      "className": "spoon.test.prettyprinter.PrintChangesTest",
      "failingMethods": [
        "spoon.test.prettyprinter.PrintChangesTest#testPrintUnchaged",
        "spoon.test.prettyprinter.PrintChangesTest#testPrintChanged"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...inter.testclasses;\n\n[import java.util.ArrayList;\nimport java.util.List;\n\n/**\n * The content of this file \n * \n\n *   should not be changed\n * Because DJPP should print only modified content again \n */\npublic\n@Deprecated\nabstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged\u003cT, K\u003e /*before extends*/ \n extends ArrayList\u003cT\u003e implements List\u003cT\u003e,\n Cloneable\n{\n \n \n /**/\n final\n //\n private String string \u003d \"a\"\n   + \"b\" + \"c\"+\"d\";\n \n //and spaces here are wanted too\n \n \n void andSomeOtherMethod(\n   int param1,\n   String param2)\n {\n  System.out.println(\"aaa\"\n    + \"xyz\");\n }\n}\n\n//and what about this comment? ]\u003e but was:\u003c...inter.testclasses;\n\n[\n/**\n * The content of this file \n * \n\n *   should not be changed\n * Because DJPP should print only modified content again \n */\npublic\n@Deprecated\nabstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged\u003cT, K\u003e /*before extends*/ \n extends ArrayList\u003cT\u003e implements List\u003cT\u003e,\n Cloneable\n{\n \n \n /**/\n final\n //\n private String string \u003d \"a\"\n   + \"b\" + \"c\"+\"d\";\n \n //and spaces here are wanted too\n \n \n void andSomeOtherMethod(\n   int param1,\n   String param2)\n {\n  System.out.println(\"aaa\"\n    + \"xyz\");\n }\n}\n\n]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...inter.testclasses;\n\n[import java.util.ArrayList;\nimport java.util.List;\n\n/**\n * The content of this file \n * \n\n *   should not be changed\n * Because DJPP should print only modified content again \n */\npublic\n@Deprecated\nabstract class /* even this comment stays here together with all SPACES and EOLs*/ ToBeChanged\u003cT, K\u003e /*before extends*/ \n extends ArrayList\u003cT\u003e implements List\u003cT\u003e,\n Cloneable\n{\n \n \n /**/\n final\n //\n private String string \u003d \"a\"\n   + \"b\" + \"c\"+\"d\";\n \n //and spaces here are wanted too\n \n \n void andSomeOtherMethod(\n   int param1,\n   String param2)\n {\n  System.out.println(\"aaa\"\n    + \"xyz\");\n }\n}\n\n//and what about this comment? ]\u003e but was:\u003c...inter.testclasses;\n\n[\nimport java.util.ArrayList;\nimport java.util.List;\n\n\n/**\n * The content of this file \n * \n\n *   should not be changed\n * Because DJPP should print only modified content again \n */\n\n/* even this comment stays here together with all SPACES and EOLs*/ \n/*before extends*/ \n@Deprecated\npublic abstract class ToBeChanged\u003cT, K\u003e extends ArrayList implements Cloneable , List {\n    /**/\n\n    //\n\n    private final String modified \u003d \"a\"\n   + \"b\" + \"c\"+\"d\";\n\n    //and spaces here are wanted too\n \n \n void andSomeOtherMethod(\n   int param1,\n   String param2)\n {\n  System.out.println(\"aaa\"\n    + \"xyz\");\n }\n}\n\n]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.main.MainTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.main.MainTest#testTest",
        "spoon.test.main.MainTest#testMain_checkGenericContracts"
      ],
      "failures": [
        {
          "failureName": "java.lang.StringIndexOutOfBoundsException",
          "failureDetail": "String index out of range: -1",
          "isError": true
        },
        {
          "failureName": "java.lang.StringIndexOutOfBoundsException",
          "failureDetail": "String index out of range: -1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.MavenLauncherTest",
      "failingMethods": [
        "spoon.MavenLauncherTest#spoonMavenLauncherTest",
        "spoon.MavenLauncherTest#mavenLauncherTestMultiModulesAndVariables"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Content of classpath: ",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c7\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.position.PositionTest",
      "failingMethods": [
        "spoon.test.position.PositionTest#testPositionClassWithComments"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...\npublic /*c2*/\n//lc2[]\u003e but was:\u003c...\npublic /*c2*/\n//lc2[\nclass]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ]
}