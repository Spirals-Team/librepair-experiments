{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 1,
  "repo": "zZ3phyR/ipi-java-340-ex",
  "bugCommit": "https://github.com/zZ3phyR/ipi-java-340-ex/compare/28fad5bba959...0d837fa0c764",
  "failingModule": "/root/workspace/zZ3phyR/ipi-java-340-ex/367449544",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 2,
  "error-types": [
    "org.springframework.dao.InvalidDataAccessResourceUsageException",
    "org.junit.ComparisonFailure"
  ],
  "totalNumberRunningTests": 18,
  "failing-test-cases": [
    {
      "className": "com.ipiecoles.java.java340.model.ManagerTest",
      "failingMethods": [
        "com.ipiecoles.java.java340.model.ManagerTest#getPrimeAnnuelleTest"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c1[600].0\u003e but was:\u003c1[259].0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.ipiecoles.java.java340.repository.EmployeRepositoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "com.ipiecoles.java.java340.repository.EmployeRepositoryTest#findByNomOrPrenomAllIgnoreCaseTest"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.InvalidDataAccessResourceUsageException",
          "failureDetail": "could not prepare statement; SQL [select employe0_.id as id1_1_, employe0_.dateEmbauche as dateEmba2_1_, employe0_.matricule as matricul3_1_, employe0_.nom as nom4_1_, employe0_.prenom as prenom5_1_, employe0_.salaire as salaire6_1_, employe0_1_.caAnnuel as caAnnuel1_0_, employe0_1_.performance as performa2_0_, employe0_3_.grade as grade1_3_, employe0_3_.manager_id as manager_3_3_, case when employe0_1_.id is not null then 1 when employe0_2_.id is not null then 2 when employe0_3_.id is not null then 3 when employe0_.id is not null then 0 end as clazz_ from Employe employe0_ left outer join Commercial employe0_1_ on employe0_.id\u003demploye0_1_.id left outer join Manager employe0_2_ on employe0_.id\u003demploye0_2_.id left outer join Technicien employe0_3_ on employe0_.id\u003demploye0_3_.id]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.ipiecoles.java.java340.model.ManagerParameterizedTest",
      "failingMethods": [
        "com.ipiecoles.java.java340.model.ManagerParameterizedTest#testgetPrimeAnnuelle[0]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c1[600].0\u003e but was:\u003c1[259].0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ]
}