{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "prestodb/presto",
  "metrics": {
    "FailureNames": [
      "java.lang.AssertionError"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 10,
      "ComputeClasspath": 5,
      "ComputeTestDir": 1,
      "ResolveDependency": 235,
      "BuildProject": 791,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 36,
      "CloneRepository": 45,
      "NopolRepair": 20,
      "CheckoutPatchedBuild": 0,
      "TestProject": 1692,
      "GatherTestInformation": 1,
      "PushIncriminatedBuild": 11,
      "CommitPatch": 40
    },
    "NbFailingTests": 7,
    "BugCommitUrl": "http://github.com/prestodb/presto/commit/072a22dcdf62180424e0c7b030230fa9ae91d175",
    "ReproductionDate": "Jul 6, 2017 5:00:05 PM",
    "BuggyBuildId": 250753807,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/prestodb/presto/builds/250753807",
    "BuggyBuildDate": "Jul 6, 2017 3:29:46 PM",
    "BugCommit": "072a22dcdf62180424e0c7b030230fa9ae91d175",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 5277,
    "NbLibraries": 141,
    "NbFileApp": 6400,
    "NbFileTests": 1992,
    "NbCPU": 8,
    "FreeMemory": 1298033600,
    "TotalMemory": 3108503552,
    "AngelicValuesByTest": {
      "com/facebook/presto/tests/TestTpchDistributedQueries": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 555997008,
      "ComputeClasspath": 175962744,
      "ComputeTestDir": 306368640,
      "ResolveDependency": 231429784,
      "BuildProject": 908635064,
      "ComputeSourceDir": 175962744,
      "InitRepoToPush": 299849920,
      "CloneRepository": 846114432,
      "NopolRepair": 1681484456,
      "CheckoutPatchedBuild": 1298033600,
      "TestProject": 874339784,
      "GatherTestInformation": 850938776,
      "PushIncriminatedBuild": 181907664,
      "CommitPatch": 1298033600
    }
  },
  "failingModule": "/root/workspace/prestodb/presto/250753807/presto-tests",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 7,
  "error-types": [
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 5277,
  "failing-test-cases": [
    {
      "className": "com.facebook.presto.tests.TestTpchDistributedQueries",
      "failingMethods": [
        "com.facebook.presto.tests.TestTpchDistributedQueries#testCorrelatedExistsSubqueriesWithEqualityPredicatesInWhere",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testCorrelatedScalarFilterScanSubqueries",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testCorrelatedScalarSubqueries",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testSubqueriesWithDisjunction",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testCorrelatedScalarSubqueriesWithScalarAggregationAndEqualityPredicatesInWhere",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testCorrelatedInPredicateSubqueries",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testUnsupportedCorrelatedExistsSubqueries"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Expected exception message \u0027Unexpected node: class com.facebook.presto.sql.planner.plan.LateralJoinNode\u0027 to match \u0027Unexpected node: com.facebook.presto.sql.planner.plan.LateralJoinNode\u0027 for query: SELECT count(*) FROM orders o WHERE EXISTS (SELECT avg(l.orderkey) FROM lineitem l WHERE o.orderkey \u003d l.orderkey GROUP BY l.linenumber)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Expected exception message \u0027Unexpected node: class com.facebook.presto.sql.planner.plan.ApplyNode\u0027 to match \u0027Unexpected node: com.facebook.presto.sql.planner.plan.ApplyNode\u0027 for query: SELECT orderkey FROM orders o WHERE clerk IN (SELECT clerk FROM orders s WHERE s.custkey \u003d o.custkey AND s.orderkey \u003c o.orderkey ORDER BY 1 LIMIT 1)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Expected exception message \u0027Unexpected node: class com.facebook.presto.sql.planner.plan.LateralJoinNode\u0027 to match \u0027Unexpected node: com.facebook.presto.sql.planner.plan.LateralJoinNode\u0027 for query: SELECT (SELECT o.orderkey * 2 WHERE o.orderkey \u003d 1) FROM orders o",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Expected exception message \u0027Unexpected node: class com.facebook.presto.sql.planner.plan.LateralJoinNode\u0027 to match \u0027Unexpected node: com.facebook.presto.sql.planner.plan.LateralJoinNode\u0027 for query: SELECT (SELECT l.orderkey) FROM lineitem l",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Expected exception message \u0027Unexpected node: class com.facebook.presto.sql.planner.plan.LateralJoinNode\u0027 to match \u0027Unexpected node: com.facebook.presto.sql.planner.plan.LateralJoinNode\u0027 for query: SELECT count(*) FROM nation n WHERE (SELECT avg(a) FROM (SELECT count(*) FROM region r WHERE n.regionkey \u003d r.regionkey) t(a)) \u003e 1",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Expected exception message \u0027Unexpected node: class com.facebook.presto.sql.planner.plan.LateralJoinNode\u0027 to match \u0027Unexpected node: com.facebook.presto.sql.planner.plan.LateralJoinNode\u0027 for query: SELECT (SELECT true FROM (SELECT 1) t(a) WHERE a \u003d nationkey) FROM nation WHERE (SELECT true FROM (SELECT 1) t(a) WHERE a \u003d nationkey) OR TRUE",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Expected exception message \u0027Unexpected node: class com.facebook.presto.sql.planner.plan.LateralJoinNode\u0027 to match \u0027Unexpected node: com.facebook.presto.sql.planner.plan.LateralJoinNode\u0027 for query: SELECT EXISTS(SELECT 1 WHERE l.orderkey \u003e 0 OR l.orderkey !\u003d 3) FROM lineitem l",
          "isError": false
        }
      ],
      "nbFailures": 7,
      "nbErrors": 0
    }
  ]
}