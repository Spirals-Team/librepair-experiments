{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 17,
  "repo": "nagpaulo/ponto-inteligente-api",
  "metrics": {
    "ReproductionDate": "Jul 3, 2018 10:01:05 PM",
    "BuggyBuildId": 399742004,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/nagpaulo/ponto-inteligente-api/builds/399742004",
    "BuggyBuildDate": "Jul 3, 2018 10:00:46 PM",
    "BugCommit": "61092a2575cd50edaaf75213952ff7c3889ccfb3",
    "NbLibraries": 106,
    "BugCommitUrl": "http://github.com/nagpaulo/ponto-inteligente-api/commit/61092a2575cd50edaaf75213952ff7c3889ccfb3",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 1,
    "NbFileApp": 0,
    "NbFileTests": 10,
    "NbCPU": 32,
    "FreeMemory": 2960818296,
    "TotalMemory": 3204972544,
    "AngelicValuesByTest": {
      "br/com/modelo/pontointeligente/api/controller/EmpresaControllerTest": 0,
      "br/com/modelo/pontointeligente/api/controller/LancamentoControllerTest": 0,
      "br/com/modelo/pontointeligente/api/repositories/FuncionarioRepositoryTest": 0,
      "br/com/modelo/pontointeligente/api/repositories/EmpresaRepositoryTest": 0,
      "br/com/modelo/pontointeligente/api/repositories/LancamentoRepositoryTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 746543000,
      "ComputeClasspath": 665879008,
      "ComputeTestDir": 665879008,
      "BuildProject": 723179872,
      "InitRepoToPush": 670776848,
      "ComputeSourceDir": 665879008,
      "AstorJMut": 2972391160,
      "CloneRepository": 750519104,
      "CheckoutPatchedBuild": 2960818296,
      "Nopol": 1837810192,
      "NPEFix": 1837810192,
      "TestProject": 694839064,
      "GatherTestInformation": 687075080,
      "CommitPatch": 2960818296
    },
    "NbSucceedingTests": 12,
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 33,
      "ComputeTestDir": 0,
      "BuildProject": 130,
      "InitRepoToPush": 1,
      "ComputeSourceDir": 0,
      "AstorJMut": 18,
      "CloneRepository": 3,
      "CheckoutPatchedBuild": 0,
      "Nopol": 186,
      "NPEFix": 0,
      "TestProject": 142,
      "GatherTestInformation": 0,
      "CommitPatch": 1
    },
    "FailureNames": [
      "java.lang.AssertionError",
      "org.springframework.transaction.CannotCreateTransactionException"
    ],
    "NbFailingTests": 2,
    "NbErroringTests": 17,
    "NbSkippingTests": 0,
    "NbRunningTests": 31
  },
  "bugCommit": "https://github.com/nagpaulo/ponto-inteligente-api/compare/dc9f9ee4fead...61092a2575cd",
  "failingModule": "/root/workspace/nagpaulo/ponto-inteligente-api/399742004",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 2,
  "error-types": [
    "java.lang.AssertionError",
    "org.springframework.transaction.CannotCreateTransactionException"
  ],
  "totalNumberRunningTests": 31,
  "failing-test-cases": [
    {
      "className": "br.com.modelo.pontointeligente.api.controller.LancamentoControllerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCadastrarLancamento"
      ],
      "failures": [
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "br.com.modelo.pontointeligente.api.repositories.LancamentoRepositoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "testBuscarLancamentosPorFuncionarioIdPaginado",
        "testBuscarLancamentosPorFuncionarioId"
      ],
      "failures": [
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        },
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        },
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        },
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "br.com.modelo.pontointeligente.api.repositories.FuncionarioRepositoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "testBuscarFuncionarioPorEmailECpfParaCpfInvalido",
        "testBuscarFuncionarioPorEmail",
        "testBuscarFuncionarioPorCpf",
        "testBuscarFuncionarioPorEmailECpfParaEmailInvalido",
        "testBucarFuncionarioPorEmailECpf"
      ],
      "failures": [
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        },
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        },
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        },
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        },
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        },
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        },
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        },
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        },
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        },
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 10
    },
    {
      "className": "br.com.modelo.pontointeligente.api.repositories.EmpresaRepositoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "testBuscarPorCnpj"
      ],
      "failures": [
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        },
        {
          "failureName": "org.springframework.transaction.CannotCreateTransactionException",
          "failureDetail": "Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "br.com.modelo.pontointeligente.api.controller.EmpresaControllerTest",
      "failingMethods": [
        "testBuscarEmpresaCnpjValido",
        "testBuscarEmpresaCnpjInvalido"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Status expected:\u003c200\u003e but was:\u003c403\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Status expected:\u003c400\u003e but was:\u003c403\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    }
  ]
}