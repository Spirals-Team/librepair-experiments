{
  "totalNumberSkippingTests": 2,
  "bugType": "only_fail",
  "totalNumberErroringTests": 2,
  "repo": "INRIA/spoon",
  "failingModule": "/root/workspace/INRIA/spoon/288626421",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 8,
  "error-types": [
    "java.lang.AssertionError",
    "spoon.compiler.ModelBuildingException"
  ],
  "totalNumberRunningTests": 1255,
  "failing-test-cases": [
    {
      "className": "spoon.MavenLauncherTest",
      "failingMethods": [
        "spoon.MavenLauncherTest#spoonMavenLauncherTest"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c5\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.imports.ImportTest",
      "failingMethods": [
        "spoon.test.imports.ImportTest#testSortingOfImports",
        "spoon.test.imports.ImportTest#testStaticMethodWithDifferentClassSameNameJava7NoCollision",
        "spoon.test.imports.ImportTest#testWithInnerEnumDoesNotImportStaticInnerMethods"
      ],
      "erroringMethods": [
        "spoon.test.imports.ImportTest#testSortImportPutStaticImportAfterTypeImport"
      ],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile spooned-staticmethod",
          "isError": false
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "The import java.nio.charset.Charset.forName cannot be resolved at /root/workspace/INRIA/spoon/288626421/StaticNoOrdered.java:9",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "import spoon.reflect.code.CtComment; should be before import spoon.reflect.code.CtComment.CommentType.INLINE;",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile spooned-innerenum",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.ctClass.CtClassTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.ctClass.CtClassTest#testDefaultConstructorAreOk"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "The import spoon.test.ctClass.testclasses.issue1306.test.BooleanArrays.arrayOf cannot be resolved at /root/workspace/INRIA/spoon/288626421/BooleanArraysBaseTest.java:3",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.variable.AccessFullyQualifiedFieldTest",
      "failingMethods": [
        "spoon.test.variable.AccessFullyQualifiedFieldTest#testNoFQNAndStaticImport",
        "spoon.test.variable.AccessFullyQualifiedFieldTest#testNoFQNWhenUsedInInnerClassAndShadowedByLocalVariable",
        "spoon.test.variable.AccessFullyQualifiedFieldTest#testStaticImportWithAutoImport"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile spooned-AccessFullyQualifiedFieldTest-MultiNoAutoImport",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile spooned-AccessFullyQualifiedFieldTest-MultiAutoImport",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile spooned-AccessFullyQualifiedFieldTest-StaticMethod",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
      "failingMethods": [
        "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest#testImplicitStaticFieldReference"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile ImplicitStaticFieldReference.java",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ]
}