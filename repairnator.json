{
  "totalNumberSkippingTests": 13,
  "bugType": "only_fail",
  "totalNumberErroringTests": 16,
  "repo": "zerocracy/farm",
  "bugCommit": "https://github.com/zerocracy/farm/compare/e6bd2b21ca15...32c9fc6e2599",
  "failingModule": "/root/workspace/zerocracy/farm/399907057",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 0,
  "error-types": [
    "java.lang.IllegalStateException",
    "java.lang.NullPointerException"
  ],
  "totalNumberRunningTests": 443,
  "failing-test-cases": [
    {
      "className": "com.zerocracy.farm.SmartFarmTest",
      "failingMethods": [],
      "erroringMethods": [
        "worksInManyThreads",
        "synchronizesBetweenProjects"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "com.zerocracy.pm.staff.ElectionsTest",
      "failingMethods": [],
      "erroringMethods": [
        "electsOnlyOnce"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.zerocracy.farm.reactive.RvProjectTest",
      "failingMethods": [],
      "erroringMethods": [
        "closesClaimsInThreads"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.zerocracy.farm.ruled.RdFarmTest",
      "failingMethods": [],
      "erroringMethods": [
        "worksInManyThreads"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.zerocracy.farm.sync.SyncFarmTest",
      "failingMethods": [],
      "erroringMethods": [
        "makesProjectsThreadSafe"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.zerocracy.BundlesTest",
      "failingMethods": [],
      "erroringMethods": [
        "oneBundleWorksFine[com/zerocracy/bundles/cleanup_elections]",
        "oneBundleWorksFine[com/zerocracy/bundles/not_assign_task_to_reporter]",
        "oneBundleWorksFine[com/zerocracy/bundles/assign_qa_user]",
        "oneBundleWorksFine[com/zerocracy/bundles/points_awarded_to_reporter_with_role]",
        "oneBundleWorksFine[com/zerocracy/bundles/elects_and_assigns_performer]",
        "oneBundleWorksFine[com/zerocracy/bundles/awards_points_to_arc_for_pull_request]",
        "oneBundleWorksFine[com/zerocracy/bundles/elections_dont_exceed_max_jobs_option]",
        "oneBundleWorksFine[com/zerocracy/bundles/collect_speed]",
        "oneBundleWorksFine[com/zerocracy/bundles/assigns_and_notifies_on_vacation]"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to acquire \"claims.xml\" in \"ASSIGNQAU\" in 2min: 640af8c474c9/14s/0/1/true/false by \u003cdisposed\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to acquire \"claims.xml\" in \"AWARDSPOI\" in 2min: 23241098e97d/27s/0/1/true/false by \u003cdisposed\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to acquire \"claims.xml\" in \"ASSIGNSAN\" in 2min: 496695460c78/26s/0/1/true/false by \u003cdisposed\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to acquire \"claims.xml\" in \"CLEANUPEL\" in 2min: a334d8937161/3s/0/1/true/false by \u003cdisposed\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to acquire \"claims.xml\" in \"COLLECTSP\" in 2min: 57e390defe1b/27s/0/1/true/false by \u003cdisposed\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to acquire \"claims.xml\" in \"ELECTIONS\" in 2min: 4137dbb190c5/9s/0/1/true/false by \u003cdisposed\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to acquire \"claims.xml\" in \"ELECTSAND\" in 2min: 091d5df6c243/7s/0/1/true/false by \u003cdisposed\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to acquire \"claims.xml\" in \"NOTASSIGN\" in 2min: 2b5a9d6e79e5/9s/0/1/true/false by \u003cdisposed\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to acquire \"claims.xml\" in \"POINTSAWA\" in 2min: d57b6dde8ea5/18s/0/1/true/false by \u003cdisposed\u003e",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 9
    },
    {
      "className": "com.zerocracy.pm.ClaimsTest",
      "failingMethods": [],
      "erroringMethods": [
        "modifiesInMultipleThreads"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ]
}