{
  "totalNumberSkippingTests": 11,
  "bugType": "only_fail",
  "totalNumberErroringTests": 409,
  "repo": "antlr/antlr4",
  "failingModule": "/root/workspace/antlr/antlr4/398894262/runtime-testsuite",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 580,
  "error-types": [
    "junit.framework.ComparisonFailure",
    "java.lang.AssertionError",
    "java.lang.RuntimeException",
    "java.lang.NullPointerException"
  ],
  "totalNumberRunningTests": 1735,
  "failing-test-cases": [
    {
      "className": "org.antlr.v4.test.runtime.javascript.node.TestLexerExec",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Node:RecursiveLexerRuleRefWithWildcardPlus_2]",
        "testOne[Node:PositionAdjustingLexer]",
        "testOne[Node:EOFSuffixInFirstRule_2]",
        "testOne[Node:CharSetWithQuote2]",
        "testOne[Node:ZeroLengthToken]",
        "testOne[Node:CharSetInSet]",
        "testOne[Node:RecursiveLexerRuleRefWithWildcardStar_2]",
        "testOne[Node:NonGreedyOptional]",
        "testOne[Node:KeywordID]",
        "testOne[Node:QuoteTranslation]",
        "testOne[Node:NonGreedyTermination1]",
        "testOne[Node:EOFByItself]",
        "testOne[Node:CharSetPlus]",
        "testOne[Node:NonGreedyPositiveClosure]",
        "testOne[Node:NonGreedyClosure]",
        "testOne[Node:GreedyPositiveClosure]",
        "testOne[Node:CharSet]",
        "testOne[Node:EOFSuffixInFirstRule_1]",
        "testOne[Node:LargeLexer]",
        "testOne[Node:CharSetWithEscapedChar]",
        "testOne[Node:CharSetRange]",
        "testOne[Node:NonGreedyConfigs]",
        "testOne[Node:ActionPlacement]",
        "testOne[Node:RecursiveLexerRuleRefWithWildcardPlus_1]",
        "testOne[Node:UnicodeCharSet]",
        "testOne[Node:CharSetWithQuote1]",
        "testOne[Node:HexVsID]",
        "testOne[Node:RecursiveLexerRuleRefWithWildcardStar_1]",
        "testOne[Node:GreedyOptional]",
        "testOne[Node:NonGreedyTermination2]",
        "testOne[Node:GreedyClosure]",
        "testOne[Node:RefToRuleDoesNotSetTokenNorEmitAnother]",
        "testOne[Node:GreedyConfigs]",
        "testOne[Node:CharSetNot]",
        "testOne[Node:Slashes]",
        "testOne[Node:Parentheses]",
        "testOne[Node:CharSetWithMissingEscapeChar]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 37
    },
    {
      "className": "org.antlr.v4.test.runtime.csharp.TestCompositeLexers",
      "failingMethods": [
        "testOne[CSharp:LexerDelegatorRuleOverridesDelegate]",
        "testOne[CSharp:LexerDelegatorInvokesDelegateRule]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cM.A\n[@0,0:1\u003d\u0027ab\u0027,\u003c1\u003e,1:0]\n[@1,2:1\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:2]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cS.A\n[@0,0:0\u003d\u0027a\u0027,\u003c3\u003e,1:0]\n[@1,1:1\u003d\u0027b\u0027,\u003c1\u003e,1:1]\n[@2,2:2\u003d\u0027c\u0027,\u003c4\u003e,1:2]\n[@3,3:2\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:3]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.go.TestSemPredEvalLexer",
      "failingMethods": [],
      "erroringMethods": [
        "org.antlr.v4.test.runtime.go.TestSemPredEvalLexer"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Missing system property:antlr-go",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.antlr.v4.test.runtime.csharp.TestSemPredEvalParser",
      "failingMethods": [
        "testOne[CSharp:DependentPredNotInOuterCtxShouldBeIgnored]",
        "testOne[CSharp:Order]",
        "testOne[CSharp:NoTruePredsThrowsNoViableAlt]",
        "testOne[CSharp:DepedentPredsInGlobalFOLLOW]",
        "testOne[CSharp:PredsInGlobalFOLLOW]",
        "testOne[CSharp:IndependentPredNotPassedOuterCtxToAvoidCastException]",
        "testOne[CSharp:PredicateDependentOnArg]",
        "testOne[CSharp:PredTestedEvenWhenUnAmbig_1]",
        "testOne[CSharp:ToLeft]",
        "testOne[CSharp:PredFromAltTestedInLoopBack_2]",
        "testOne[CSharp:AtomWithClosureInTranslatedLRRule]",
        "testOne[CSharp:TwoUnpredicatedAltsAndOneOrthogonalAlt]",
        "testOne[CSharp:RewindBeforePredEval]",
        "testOne[CSharp:ToLeftWithVaryingPredicate]",
        "testOne[CSharp:TwoUnpredicatedAlts]",
        "testOne[CSharp:SimpleValidate]",
        "testOne[CSharp:PredicateDependentOnArg2]",
        "testOne[CSharp:ValidateInDFA]",
        "testOne[CSharp:Simple]",
        "testOne[CSharp:DisabledAlternative]",
        "testOne[CSharp:PredTestedEvenWhenUnAmbig_2]",
        "testOne[CSharp:ActionsHidePredsInGlobalFOLLOW]",
        "testOne[CSharp:SimpleValidate2]",
        "testOne[CSharp:ActionHidesPreds]",
        "testOne[CSharp:UnpredicatedPathsInAlt]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 25,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.go.TestSets",
      "failingMethods": [],
      "erroringMethods": [
        "org.antlr.v4.test.runtime.go.TestSets"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Missing system property:antlr-go",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.antlr.v4.test.runtime.javascript.node.TestParseTrees",
      "failingMethods": [
        "testOne[Node:ExtraToken]",
        "testOne[Node:TwoAlts]",
        "testOne[Node:Token2]",
        "testOne[Node:TokenAndRuleContextString]",
        "testOne[Node:AltNum]",
        "testOne[Node:RuleRef]",
        "testOne[Node:Sync]",
        "testOne[Node:NoViableAlt]",
        "testOne[Node:TwoAltLoop]",
        "testOne[Node:ExtraTokensAndAltLabels]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(a y)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(a x y y x y x z)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[a, s]\n(a x)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(a x y)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 extraneous input \u0027z\u0027 expecting {\u0027y\u0027, \u0027!\u0027}\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(a (b y) x)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:0 mismatched input \u0027z\u0027 expecting {\u0027x\u0027, \u0027y\u0027}\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:3 extraneous input \u0027?\u0027 expecting {\u0027a\u0027, \u0027b\u0027}\nline 1:7 extraneous input \u0027?\u0027 expecting \u0027}\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 extraneous input \u0027z\u0027 expecting \u0027y\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(a:3 x (b:2 y) z)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        }
      ],
      "nbFailures": 10,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.csharp.TestListeners",
      "failingMethods": [
        "testOne[CSharp:LRWithLabels]",
        "testOne[CSharp:LR]",
        "testOne[CSharp:TokenGetters_1]",
        "testOne[CSharp:TokenGetters_2]",
        "testOne[CSharp:RuleGetters_2]",
        "testOne[CSharp:RuleGetters_1]",
        "testOne[CSharp:Basic]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 7,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.javascript.node.TestParserErrors",
      "failingMethods": [
        "testOne[Node:SingleTokenDeletion]",
        "testOne[Node:ConjuringUpTokenFromSet]",
        "testOne[Node:LLStar]",
        "testOne[Node:MultiTokenDeletionBeforeLoop]",
        "testOne[Node:InvalidEmptyInput]",
        "testOne[Node:MultiTokenDeletionDuringLoop2]",
        "testOne[Node:TokenMismatch]",
        "testOne[Node:ConjuringUpToken]",
        "testOne[Node:SingleTokenDeletionDuringLoop2]",
        "testOne[Node:SingleTokenDeletionBeforeAlt]",
        "testOne[Node:LL3]",
        "testOne[Node:TokenMismatch2]",
        "testOne[Node:SingleTokenDeletionConsumption]",
        "testOne[Node:SingleTokenDeletionDuringLoop]",
        "testOne[Node:SingleSetInsertionConsumption]",
        "testOne[Node:NoViableAltAvoidance]",
        "testOne[Node:SingleTokenDeletionBeforeLoop2]",
        "testOne[Node:SingleTokenDeletionExpectingSet]",
        "testOne[Node:MultiTokenDeletionDuringLoop]",
        "testOne[Node:SingleTokenDeletionBeforePredict]",
        "testOne[Node:SingleTokenInsertion]",
        "testOne[Node:LL1ErrorInfo]",
        "testOne[Node:ContextListGetters]",
        "testOne[Node:LL2]",
        "testOne[Node:TokenMismatch3]",
        "testOne[Node:MultiTokenDeletionBeforeLoop2]",
        "testOne[Node:SingleTokenDeletionBeforeLoop]",
        "testOne[Node:SingleSetInsertion]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:0 mismatched input \u0027\u003cEOF\u003e\u0027 expecting {\u0027(\u0027, BOOLEAN_LITERAL, ID, \u0027$\u0027}\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:2 mismatched input \u0027~FORCE_ERROR~\u0027 expecting {\u0027)\u0027, ID}\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 mismatched input \u0027a\u0027 expecting \u0027b\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 missing \u0027b\u0027 at \u0027c\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 extraneous input \u0027a\u0027 expecting {\u0027b\u0027, \u0027c\u0027}\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:2 extraneous input \u0027a\u0027 expecting {\u0027b\u0027, \u0027z\u0027, \u0027c\u0027}\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:2 extraneous input \u0027a\u0027 expecting {\u0027b\u0027, \u0027c\u0027}\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 extraneous input \u0027a\u0027 expecting {\u0027b\u0027, \u0027c\u0027}\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:0 extraneous input \u0027c\u0027 expecting \u0027a\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 extraneous input \u0027a\u0027 expecting {\u003cEOF\u003e, \u0027b\u0027, \u0027z\u0027}\nline 1:3 token recognition error at: \u0027c\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 extraneous input \u0027a\u0027 expecting {\u003cEOF\u003e, \u0027b\u0027}\nline 1:3 token recognition error at: \u0027c\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:0 extraneous input \u0027a\u0027 expecting {\u0027b\u0027, \u0027c\u0027}\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 extraneous input \u0027a\u0027 expecting \u0027b\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 missing {\u0027b\u0027, \u0027c\u0027} at \u0027d\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 missing {\u0027b\u0027, \u0027c\u0027} at \u0027d\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 mismatched input \u0027.\u0027 expecting \u0027!\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:2 extraneous input \u0027a\u0027 expecting {\u0027b\u0027, \u0027z\u0027, \u0027c\u0027}\nline 1:6 extraneous input \u0027a\u0027 expecting {\u0027b\u0027, \u0027z\u0027, \u0027c\u0027}\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:2 extraneous input \u0027a\u0027 expecting {\u0027b\u0027, \u0027c\u0027}\nline 1:6 extraneous input \u0027a\u0027 expecting {\u0027b\u0027, \u0027c\u0027}\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 extraneous input \u0027a\u0027 expecting {\u0027b\u0027, \u0027z\u0027, \u0027c\u0027}\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 extraneous input \u0027a\u0027 expecting {\u0027b\u0027, \u0027c\u0027}\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:3 no viable alternative at input \u0027aaae\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:2 no viable alternative at input \u0027abe\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 no viable alternative at input \u0027ae\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c{\u0027hardware\u0027, \u0027software\u0027}\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:0 mismatched input \u0027\u003cEOF\u003e\u0027 expecting ID\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cabab\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 missing {\u0027b\u0027, \u0027c\u0027} at \u0027d\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 missing \u0027b\u0027 at \u0027c\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        }
      ],
      "nbFailures": 28,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.csharp.TestFullContextParsing",
      "failingMethods": [
        "testOne[CSharp:LoopsSimulateTailRecursion]",
        "testOne[CSharp:SLLSeesEOFInLLGrammar]",
        "testOne[CSharp:FullContextIF_THEN_ELSEParse_2]",
        "testOne[CSharp:FullContextIF_THEN_ELSEParse_1]",
        "testOne[CSharp:CtxSensitiveDFATwoDiffInput]",
        "testOne[CSharp:FullContextIF_THEN_ELSEParse_6]",
        "testOne[CSharp:AmbigYieldsCtxSensitiveDFA]",
        "testOne[CSharp:FullContextIF_THEN_ELSEParse_5]",
        "testOne[CSharp:FullContextIF_THEN_ELSEParse_4]",
        "testOne[CSharp:FullContextIF_THEN_ELSEParse_3]",
        "testOne[CSharp:AmbiguityNoLoop]",
        "testOne[CSharp:ExprAmbiguity_2]",
        "testOne[CSharp:ExprAmbiguity_1]",
        "testOne[CSharp:CtxSensitiveDFA_1]",
        "testOne[CSharp:CtxSensitiveDFA_2]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 15,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.go.TestFullContextParsing",
      "failingMethods": [],
      "erroringMethods": [
        "org.antlr.v4.test.runtime.go.TestFullContextParsing"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Missing system property:antlr-go",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.antlr.v4.test.runtime.javascript.node.TestLexerErrors",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Node:DFAToATNThatMatchesThenFailsInATN]",
        "testOne[Node:StringsEmbeddedInActions_1]",
        "testOne[Node:StringsEmbeddedInActions_2]",
        "testOne[Node:InvalidCharInTokenAfterDFACache]",
        "testOne[Node:InvalidCharAtStartAfterDFACache]",
        "testOne[Node:LexerExecDFA]",
        "testOne[Node:ErrorInMiddle]",
        "testOne[Node:InvalidCharInToken]",
        "testOne[Node:EnforcedGreedyNestedBraces_1]",
        "testOne[Node:DFAToATNThatFailsBackToDFA]",
        "testOne[Node:EnforcedGreedyNestedBraces_2]",
        "testOne[Node:InvalidCharAtStart]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 12
    },
    {
      "className": "org.antlr.v4.test.runtime.python3.TestSemPredEvalParser",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Python3:ToLeftWithVaryingPredicate]",
        "testOne[Python3:RewindBeforePredEval]",
        "testOne[Python3:SimpleValidate]",
        "testOne[Python3:AtomWithClosureInTranslatedLRRule]",
        "testOne[Python3:PredsInGlobalFOLLOW]",
        "testOne[Python3:UnpredicatedPathsInAlt]",
        "testOne[Python3:PredicateDependentOnArg]",
        "testOne[Python3:ToLeft]",
        "testOne[Python3:TwoUnpredicatedAltsAndOneOrthogonalAlt]",
        "testOne[Python3:ActionsHidePredsInGlobalFOLLOW]",
        "testOne[Python3:TwoUnpredicatedAlts]",
        "testOne[Python3:IndependentPredNotPassedOuterCtxToAvoidCastException]",
        "testOne[Python3:DepedentPredsInGlobalFOLLOW]",
        "testOne[Python3:PredicateDependentOnArg2]",
        "testOne[Python3:DependentPredNotInOuterCtxShouldBeIgnored]",
        "testOne[Python3:Order]",
        "testOne[Python3:PredTestedEvenWhenUnAmbig_1]",
        "testOne[Python3:PredTestedEvenWhenUnAmbig_2]",
        "testOne[Python3:ActionHidesPreds]",
        "testOne[Python3:PredFromAltTestedInLoopBack_2]",
        "testOne[Python3:SimpleValidate2]",
        "testOne[Python3:Simple]",
        "testOne[Python3:NoTruePredsThrowsNoViableAlt]",
        "testOne[Python3:DisabledAlternative]",
        "testOne[Python3:ValidateInDFA]"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 25
    },
    {
      "className": "org.antlr.v4.test.runtime.csharp.TestParseTrees",
      "failingMethods": [
        "testOne[CSharp:AltNum]",
        "testOne[CSharp:TwoAltLoop]",
        "testOne[CSharp:Token2]",
        "testOne[CSharp:TokenAndRuleContextString]",
        "testOne[CSharp:NoViableAlt]",
        "testOne[CSharp:ExtraToken]",
        "testOne[CSharp:TwoAlts]",
        "testOne[CSharp:Sync]",
        "testOne[CSharp:RuleRef]",
        "testOne[CSharp:ExtraTokensAndAltLabels]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 10,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.python3.TestListeners",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Python3:TokenGetters_2]",
        "testOne[Python3:Basic]",
        "testOne[Python3:TokenGetters_1]",
        "testOne[Python3:LRWithLabels]",
        "testOne[Python3:RuleGetters_2]",
        "testOne[Python3:LR]",
        "testOne[Python3:RuleGetters_1]"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 7
    },
    {
      "className": "org.antlr.v4.test.runtime.go.TestParserExec",
      "failingMethods": [],
      "erroringMethods": [
        "org.antlr.v4.test.runtime.go.TestParserExec"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Missing system property:antlr-go",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.antlr.v4.test.runtime.javascript.node.TestSemPredEvalParser",
      "failingMethods": [
        "testOne[Node:ToLeftWithVaryingPredicate]",
        "testOne[Node:PredFromAltTestedInLoopBack_2]",
        "testOne[Node:NoTruePredsThrowsNoViableAlt]",
        "testOne[Node:ValidateInDFA]",
        "testOne[Node:Simple]",
        "testOne[Node:PredicateDependentOnArg]",
        "testOne[Node:SimpleValidate2]",
        "testOne[Node:Order]",
        "testOne[Node:PredsInGlobalFOLLOW]",
        "testOne[Node:ActionsHidePredsInGlobalFOLLOW]",
        "testOne[Node:UnpredicatedPathsInAlt]",
        "testOne[Node:ActionHidesPreds]",
        "testOne[Node:TwoUnpredicatedAltsAndOneOrthogonalAlt]",
        "testOne[Node:ToLeft]",
        "testOne[Node:TwoUnpredicatedAlts]",
        "testOne[Node:PredTestedEvenWhenUnAmbig_1]",
        "testOne[Node:PredTestedEvenWhenUnAmbig_2]",
        "testOne[Node:SimpleValidate]",
        "testOne[Node:RewindBeforePredEval]",
        "testOne[Node:DependentPredNotInOuterCtxShouldBeIgnored]",
        "testOne[Node:DepedentPredsInGlobalFOLLOW]",
        "testOne[Node:IndependentPredNotPassedOuterCtxToAvoidCastException]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:0 no viable alternative at input \u0027x\u0027\nline 1:4 no viable alternative at input \u0027y\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003calt 1\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:4 reportAttemptingFullContext d\u003d0 (a), input\u003d\u0027x\u0027\nline 1:4 reportAmbiguity d\u003d0 (a): ambigAlts\u003d{2, 3}, input\u003d\u0027x\u0027\nline 1:7 reportAttemptingFullContext d\u003d0 (a), input\u003d\u0027y\u0027\nline 1:7 reportAmbiguity d\u003d0 (a): ambigAlts\u003d{2, 3}, input\u003d\u0027y\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:0 reportAttemptingFullContext d\u003d0 (a), input\u003d\u0027x\u0027\nline 1:0 reportAmbiguity d\u003d0 (a): ambigAlts\u003d{1, 2}, input\u003d\u0027x\u0027\nline 1:3 reportAttemptingFullContext d\u003d0 (a), input\u003d\u0027y\u0027\nline 1:3 reportAmbiguity d\u003d0 (a): ambigAlts\u003d{1, 2}, input\u003d\u0027y\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003ci\u003d1\nalt 2\ni\u003d2\nalt 1\ni\u003d3\nalt 2\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003calt 2\nalt 2\nalt 2\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:4 no viable alternative at input \u0027x\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:0 no viable alternative at input \u0027x\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003calt 2\nalt 2\nalt 3\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003calt 2\nalt 1\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003ceval\u003dtrue\nparse\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003calt 2\nalt 1\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:0 no viable alternative at input \u0027enum\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cID abc\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(file_ (para (paraContent s) \\n \\n) (para (paraContent \\n x) \\n \\n) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003calt 1\nalt 1\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:0 no viable alternative at input \u0027y\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003calt 2\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003calt 2\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003ceval\u003dtrue\nparse\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003ceval\u003dtrue\nparse\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003calt 1\nalt 1\nalt 1\n\u003e but was:\u003cnull\u003e",
          "isError": false
        }
      ],
      "nbFailures": 22,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.python3.TestCompositeLexers",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Python3:LexerDelegatorInvokesDelegateRule]",
        "testOne[Python3:LexerDelegatorRuleOverridesDelegate]"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.antlr.v4.test.runtime.go.TestLexerExec",
      "failingMethods": [],
      "erroringMethods": [
        "org.antlr.v4.test.runtime.go.TestLexerExec"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Missing system property:antlr-go",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.antlr.v4.test.runtime.go.TestParserErrors",
      "failingMethods": [],
      "erroringMethods": [
        "org.antlr.v4.test.runtime.go.TestParserErrors"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Missing system property:antlr-go",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.antlr.v4.test.runtime.python3.TestParserErrors",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Python3:MultiTokenDeletionDuringLoop]",
        "testOne[Python3:ContextListGetters]",
        "testOne[Python3:SingleTokenDeletionConsumption]",
        "testOne[Python3:TokenMismatch2]",
        "testOne[Python3:MultiTokenDeletionBeforeLoop2]",
        "testOne[Python3:ConjuringUpToken]",
        "testOne[Python3:DuplicatedLeftRecursiveCall_4]",
        "testOne[Python3:DuplicatedLeftRecursiveCall_2]",
        "testOne[Python3:SingleTokenDeletionBeforeLoop]",
        "testOne[Python3:SingleTokenDeletionExpectingSet]",
        "testOne[Python3:InvalidEmptyInput]",
        "testOne[Python3:InvalidATNStateRemoval]",
        "testOne[Python3:LL1ErrorInfo]",
        "testOne[Python3:LL3]",
        "testOne[Python3:MultiTokenDeletionBeforeLoop]",
        "testOne[Python3:ConjuringUpTokenFromSet]",
        "testOne[Python3:TokenMismatch3]",
        "testOne[Python3:TokenMismatch]",
        "testOne[Python3:SingleTokenDeletionBeforePredict]",
        "testOne[Python3:SingleTokenDeletionBeforeLoop2]",
        "testOne[Python3:LLStar]",
        "testOne[Python3:NoViableAltAvoidance]",
        "testOne[Python3:MultiTokenDeletionDuringLoop2]",
        "testOne[Python3:SingleTokenDeletionDuringLoop]",
        "testOne[Python3:DuplicatedLeftRecursiveCall_3]",
        "testOne[Python3:SingleSetInsertionConsumption]",
        "testOne[Python3:DuplicatedLeftRecursiveCall_1]",
        "testOne[Python3:SingleTokenDeletionBeforeAlt]",
        "testOne[Python3:SingleTokenDeletion]",
        "testOne[Python3:SingleSetInsertion]",
        "testOne[Python3:SingleTokenDeletionDuringLoop2]",
        "testOne[Python3:SingleTokenInsertion]",
        "testOne[Python3:LL2]"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 33
    },
    {
      "className": "org.antlr.v4.test.runtime.csharp.TestLexerErrors",
      "failingMethods": [
        "testOne[CSharp:EnforcedGreedyNestedBraces_1]",
        "testOne[CSharp:InvalidCharAtStart]",
        "testOne[CSharp:DFAToATNThatMatchesThenFailsInATN]",
        "testOne[CSharp:DFAToATNThatFailsBackToDFA]",
        "testOne[CSharp:LexerExecDFA]",
        "testOne[CSharp:ErrorInMiddle]",
        "testOne[CSharp:EnforcedGreedyNestedBraces_2]",
        "testOne[CSharp:InvalidCharInTokenAfterDFACache]",
        "testOne[CSharp:InvalidCharInToken]",
        "testOne[CSharp:StringsEmbeddedInActions_2]",
        "testOne[CSharp:InvalidCharAtStartAfterDFACache]",
        "testOne[CSharp:StringsEmbeddedInActions_1]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,6:5\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:6]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:6\u003d\u0027[\"foo\"]\u0027,\u003c1\u003e,1:0]\n[@1,7:6\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:7]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:0\u003d\u0027x\u0027,\u003c3\u003e,1:0]\n[@1,2:2\u003d\u0027:\u0027,\u003c1\u003e,1:2]\n[@2,4:4\u003d\u0027x\u0027,\u003c3\u003e,1:4]\n[@3,5:4\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:5]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:1\u003d\u0027ab\u0027,\u003c1\u003e,1:0]\n[@1,4:3\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:4]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,2:1\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:2]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:1\u003d\u0027ab\u0027,\u003c1\u003e,1:0]\n[@1,3:2\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:3]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,1:0\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:1]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,3:2\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:3]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,5:4\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:5]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:6\u003d\u0027{ { } }\u0027,\u003c1\u003e,1:0]\n[@1,7:6\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:7]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:1\u003d\u0027ab\u0027,\u003c1\u003e,1:0]\n[@1,2:4\u003d\u0027abc\u0027,\u003c2\u003e,1:2]\n[@2,6:5\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:6]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:1\u003d\u0027ab\u0027,\u003c1\u003e,1:0]\n[@1,2:3\u003d\u0027ab\u0027,\u003c1\u003e,1:2]\n[@2,5:4\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:5]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        }
      ],
      "nbFailures": 12,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.javascript.node.TestCompositeLexers",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Node:LexerDelegatorInvokesDelegateRule]",
        "testOne[Node:LexerDelegatorRuleOverridesDelegate]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.antlr.v4.test.runtime.csharp.TestSets",
      "failingMethods": [
        "testOne[CSharp:UnicodeNegatedSMPSetIncludesBMPCodePoints]",
        "testOne[CSharp:LexerPlusSet]",
        "testOne[CSharp:SeqDoesNotBecomeSet]",
        "testOne[CSharp:OptionalSet]",
        "testOne[CSharp:ParserNotSet]",
        "testOne[CSharp:NotChar]",
        "testOne[CSharp:PlusLexerSingleElement]",
        "testOne[CSharp:StarLexerSingleElement_2]",
        "testOne[CSharp:NotCharSetWithRuleRef3]",
        "testOne[CSharp:UnicodeEscapedSMPRangeSet]",
        "testOne[CSharp:OptionalLexerSingleElement]",
        "testOne[CSharp:UnicodeEscapedBMPSet]",
        "testOne[CSharp:NotCharSet]",
        "testOne[CSharp:UnicodeUnescapedBMPSet]",
        "testOne[CSharp:CharSetLiteral]",
        "testOne[CSharp:ParserSet]",
        "testOne[CSharp:ParserNotToken]",
        "testOne[CSharp:PlusSet]",
        "testOne[CSharp:LexerOptionalSet]",
        "testOne[CSharp:ComplementSet]",
        "testOne[CSharp:StarLexerSingleElement_1]",
        "testOne[CSharp:UnicodeEscapedSMPRangeSetMismatch]",
        "testOne[CSharp:OptionalSingleElement]",
        "testOne[CSharp:StarSet]",
        "testOne[CSharp:UnicodeUnescapedBMPRangeSet]",
        "testOne[CSharp:LexerStarSet]",
        "testOne[CSharp:UnicodeNegatedBMPSetIncludesSMPCodePoints]",
        "testOne[CSharp:UnicodeEscapedSMPSet]",
        "testOne[CSharp:ParserNotTokenWithLabel]",
        "testOne[CSharp:RuleAsSet]",
        "testOne[CSharp:NotCharSetWithLabel]",
        "testOne[CSharp:UnicodeEscapedBMPRangeSet]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 32,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.csharp.TestPerformance",
      "failingMethods": [
        "testOne[CSharp:DropLoopEntryBranchInLRRule_5]",
        "testOne[CSharp:DropLoopEntryBranchInLRRule_3]",
        "testOne[CSharp:DropLoopEntryBranchInLRRule_4]",
        "testOne[CSharp:ExpressionGrammar_1]",
        "testOne[CSharp:DropLoopEntryBranchInLRRule_1]",
        "testOne[CSharp:DropLoopEntryBranchInLRRule_2]",
        "testOne[CSharp:ExpressionGrammar_2]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 7,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.go.TestSemPredEvalParser",
      "failingMethods": [],
      "erroringMethods": [
        "org.antlr.v4.test.runtime.go.TestSemPredEvalParser"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Missing system property:antlr-go",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.antlr.v4.test.runtime.javascript.node.TestSets",
      "failingMethods": [
        "testOne[Node:UnicodeEscapedSMPRangeSet]",
        "testOne[Node:ParserNotToken]",
        "testOne[Node:UnicodeEscapedBMPRangeSet]",
        "testOne[Node:UnicodeUnescapedBMPRangeSet]",
        "testOne[Node:StarSet]",
        "testOne[Node:ParserNotSet]",
        "testOne[Node:NotCharSet]",
        "testOne[Node:PlusLexerSingleElement]",
        "testOne[Node:StarLexerSingleElement_2]",
        "testOne[Node:LexerOptionalSet]",
        "testOne[Node:CharSetLiteral]",
        "testOne[Node:NotCharSetWithRuleRef3]",
        "testOne[Node:RuleAsSet]",
        "testOne[Node:UnicodeNegatedBMPSetIncludesSMPCodePoints]",
        "testOne[Node:StarLexerSingleElement_1]",
        "testOne[Node:PlusSet]",
        "testOne[Node:LexerPlusSet]",
        "testOne[Node:UnicodeUnescapedBMPSet]",
        "testOne[Node:NotCharSetWithLabel]",
        "testOne[Node:ParserNotTokenWithLabel]",
        "testOne[Node:UnicodeEscapedBMPSet]",
        "testOne[Node:LexerStarSet]",
        "testOne[Node:UnicodeEscapedSMPSet]",
        "testOne[Node:SeqDoesNotBecomeSet]",
        "testOne[Node:OptionalSingleElement]",
        "testOne[Node:OptionalSet]",
        "testOne[Node:ParserSet]",
        "testOne[Node:UnicodeEscapedSMPRangeSetMismatch]",
        "testOne[Node:NotChar]",
        "testOne[Node:ComplementSet]",
        "testOne[Node:UnicodeNegatedSMPSetIncludesBMPCodePoints]",
        "testOne[Node:OptionalLexerSingleElement]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cabc\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003ca😳😡😝🤓c\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 token recognition error at: \u0027🗿\u0027\nline 1:2 token recognition error at: \u0027🥄\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003ca😉🥂🜀d\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003ca𝗂𝗎𝖺c\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003caáäáâåd\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003caäあ亜c\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003caáäáâåd\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003caäあ亜c\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cabaac\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cc\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cbbbbc\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c34\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cb\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cabaac\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cbbbbc\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cx\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cz\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003czz\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cz\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cbc\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cac\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cbc\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cx\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cx\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cx\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cx\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cabaac\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cabaac\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cac\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:0 token recognition error at: \u0027a\u0027\nline 1:1 missing {} at \u0027\u003cEOF\u003e\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cA\na\nB\nb\n\u003e but was:\u003cnull\u003e",
          "isError": false
        }
      ],
      "nbFailures": 32,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.javascript.node.TestListeners",
      "failingMethods": [
        "testOne[Node:Basic]",
        "testOne[Node:RuleGetters_1]",
        "testOne[Node:LRWithLabels]",
        "testOne[Node:RuleGetters_2]",
        "testOne[Node:LR]",
        "testOne[Node:TokenGetters_2]",
        "testOne[Node:TokenGetters_1]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(a abc)\n[@0,0:2\u003d\u0027abc\u0027,\u003c4\u003e,1:0]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(a 1 2)\n1 2 [1, 2]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(a (b abc))\nabc\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(a (b 1) (b 2))\n1 2 1\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(e (e 1) ( (eList (e 2) , (e 3)) ))\n1\n2\n3\n1 [13 6]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(e (e 1) + (e (e 2) * (e 3)))\n1\n2\n3\n2 3 2\n1 2 1\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(a 1 2)\n1\n2\n\u003e but was:\u003cnull\u003e",
          "isError": false
        }
      ],
      "nbFailures": 7,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.go.TestParseTrees",
      "failingMethods": [],
      "erroringMethods": [
        "org.antlr.v4.test.runtime.go.TestParseTrees"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Missing system property:antlr-go",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.antlr.v4.test.runtime.javascript.node.TestLeftRecursion",
      "failingMethods": [
        "testOne[Node:ReturnValueAndActions_1]",
        "testOne[Node:TernaryExprExplicitAssociativity_2]",
        "testOne[Node:ReturnValueAndActionsAndLabels_3]",
        "testOne[Node:DirectCallToLeftRecursiveRule_2]",
        "testOne[Node:JavaExpressions_12]",
        "testOne[Node:Expressions_2]",
        "testOne[Node:JavaExpressions_1]",
        "testOne[Node:Declarations_3]",
        "testOne[Node:Declarations_7]",
        "testOne[Node:TernaryExpr_8]",
        "testOne[Node:Expressions_7]",
        "testOne[Node:PrefixOpWithActionAndLabel_3]",
        "testOne[Node:MultipleAlternativesWithCommonLabel_5]",
        "testOne[Node:MultipleActionsPredicatesOptions_3]",
        "testOne[Node:Declarations_2]",
        "testOne[Node:Expressions_3]",
        "testOne[Node:JavaExpressions_6]",
        "testOne[Node:MultipleAlternativesWithCommonLabel_1]",
        "testOne[Node:Simple_2]",
        "testOne[Node:LabelsOnOpSubrule_2]",
        "testOne[Node:ReturnValueAndActionsList2_1]",
        "testOne[Node:MultipleActions_1]",
        "testOne[Node:TernaryExpr_4]",
        "testOne[Node:ReturnValueAndActionsList1_4]",
        "testOne[Node:TernaryExprExplicitAssociativity_7]",
        "testOne[Node:ReturnValueAndActions_2]",
        "testOne[Node:TernaryExprExplicitAssociativity_3]",
        "testOne[Node:DirectCallToLeftRecursiveRule_1]",
        "testOne[Node:ReturnValueAndActionsAndLabels_2]",
        "testOne[Node:JavaExpressions_4]",
        "testOne[Node:Declarations_6]",
        "testOne[Node:JavaExpressions_11]",
        "testOne[Node:TernaryExpr_9]",
        "testOne[Node:MultipleActionsPredicatesOptions_2]",
        "testOne[Node:JavaExpressions_9]",
        "testOne[Node:Expressions_4]",
        "testOne[Node:Declarations_1]",
        "testOne[Node:SemPred]",
        "testOne[Node:MultipleAlternativesWithCommonLabel_2]",
        "testOne[Node:JavaExpressions_5]",
        "testOne[Node:TernaryExpr_1]",
        "testOne[Node:ReturnValueAndActionsList1_1]",
        "testOne[Node:Simple_3]",
        "testOne[Node:ReturnValueAndActionsList2_2]",
        "testOne[Node:LabelsOnOpSubrule_3]",
        "testOne[Node:TernaryExpr_5]",
        "testOne[Node:TernaryExprExplicitAssociativity_8]",
        "testOne[Node:TernaryExprExplicitAssociativity_4]",
        "testOne[Node:ReturnValueAndActions_3]",
        "testOne[Node:ReturnValueAndActionsAndLabels_1]",
        "testOne[Node:JavaExpressions_10]",
        "testOne[Node:JavaExpressions_3]",
        "testOne[Node:Declarations_5]",
        "testOne[Node:Declarations_9]",
        "testOne[Node:PrefixAndOtherAlt_2]",
        "testOne[Node:PrefixOpWithActionAndLabel_1]",
        "testOne[Node:MultipleActionsPredicatesOptions_1]",
        "testOne[Node:TernaryExpr_6]",
        "testOne[Node:Declarations_10]",
        "testOne[Node:JavaExpressions_8]",
        "testOne[Node:MultipleAlternativesWithCommonLabel_3]",
        "testOne[Node:Expressions_5]",
        "testOne[Node:MultipleActions_3]",
        "testOne[Node:ReturnValueAndActionsList1_2]",
        "testOne[Node:TernaryExprExplicitAssociativity_9]",
        "testOne[Node:ReturnValueAndActionsList2_3]",
        "testOne[Node:TernaryExpr_2]",
        "testOne[Node:TernaryExprExplicitAssociativity_5]",
        "testOne[Node:TernaryExprExplicitAssociativity_1]",
        "testOne[Node:ReturnValueAndActionsAndLabels_4]",
        "testOne[Node:ReturnValueAndActions_4]",
        "testOne[Node:DirectCallToLeftRecursiveRule_3]",
        "testOne[Node:JavaExpressions_2]",
        "testOne[Node:Declarations_4]",
        "testOne[Node:Expressions_1]",
        "testOne[Node:PrefixAndOtherAlt_1]",
        "testOne[Node:Declarations_8]",
        "testOne[Node:PrecedenceFilterConsidersContext]",
        "testOne[Node:TernaryExpr_7]",
        "testOne[Node:PrefixOpWithActionAndLabel_2]",
        "testOne[Node:MultipleAlternativesWithCommonLabel_4]",
        "testOne[Node:JavaExpressions_7]",
        "testOne[Node:Expressions_6]",
        "testOne[Node:Simple_1]",
        "testOne[Node:SemPredFailOption]",
        "testOne[Node:LabelsOnOpSubrule_1]",
        "testOne[Node:ReturnValueAndActionsList1_3]",
        "testOne[Node:MultipleActions_2]",
        "testOne[Node:ReturnValueAndActionsList2_4]",
        "testOne[Node:TernaryExpr_3]",
        "testOne[Node:TernaryExprExplicitAssociativity_6]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) ? (e b) : (e (e c) ? (e d) : (e e))) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) ? (e (e b) ? (e c) : (e d)) : (e e)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) ? (e (e b) \u003d (e c)) : (e d)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) ? (e (e b) + (e c)) : (e d)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) \u003d (e (e b) \u003d (e c))) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) ? (e b) : (e c)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) * (e b)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) + (e b)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e a) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) ? (e b) : (e (e c) ? (e d) : (e e))) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) ? (e (e b) ? (e c) : (e d)) : (e e)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) ? (e (e b) \u003d (e c)) : (e d)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) ? (e (e b) + (e c)) : (e d)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) \u003d (e (e b) \u003d (e c))) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) ? (e b) : (e c)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) * (e b)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) + (e b)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e a) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (a (a (a x) y) z))\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (a (a x) y))\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (a x))\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:4 rule a custom message\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (a (a (a x) y) z))\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c9\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c7\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c3\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c4\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (expr (expr (expr (expr (expr a) * (expr b)) , (expr c)) , (expr (expr x) * (expr y))) \u003e\u003e (expr r)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (expr x) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (expr (expr (expr a) , (expr c)) \u003e\u003e (expr x)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (expr (expr a) * (expr b)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (expr (expr (expr a) * (expr b)) , (expr c) , (expr (expr x) * (expr y)) \u003e\u003e (expr r)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (expr x) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (expr (expr a) , (expr c) \u003e\u003e (expr x)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (expr (expr a) * (expr b)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c12\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c7\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c3\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c4\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c((a\u003db)+c)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(a+b)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003ca\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (expr (expr (literal - 1)) (op +) (expr (literal - 1))) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (expr (literal - 1)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(prog (statement (letterA a)) (statement (letterA a)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c102\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c12\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c7\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c3\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c4\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e ( (e (e 1) / (e 2)) )) * (e 3)))\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e (e 1) * (e 2)) / (e 3)))\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e 4))\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e ( (e (e 1) / (e 2)) )) * (e 3)))\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e (e 1) * (e 2)) / (e 3)))\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e 4))\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e ( (e (e 1) / (e 2)) )) * (e 3)))\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e (e 1) * (e 2)) / (e 3)))\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e 4))\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e new (typespec T) [ (e (e ( (e (e ( (e (e n) - (e 1)) )) * (e x)) )) + (e 1)) ]) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e (e (e (e a) . f) ( )) . g) ( (expressionList (e x) , (e 1)) )) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e (e (e a) . f) ( (expressionList (e x)) )) \u003d\u003d (e (e T) . c)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e ( (typespec T) ) (e (e t) . f)) ( )) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e new (typespec A) ( )) . b) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e ( (typespec T) ) (e x)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) ^ (e (e b) ^ (e c))) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) \u003d (e (e b) \u003d (e c))) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) \u003e\u003e (e b)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) \u003e (e b)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e ( (e (e a) | (e b)) )) \u0026 (e c)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) | (e (e b) \u0026 (e c))) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e - (e a)) + (e b)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e - (e a)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) . this) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) . b) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e (e a) - (e 1)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e 1) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (e a) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(a (a (a x) y) z)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(a (a x) y)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(a x)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (declarator (declarator ( (declarator * (declarator a)) )) [ ]) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (declarator * (declarator (declarator a) [ ])) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (declarator (declarator (declarator a) [ ]) [ ]) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (declarator (declarator (declarator a) [ ]) ( )) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (declarator ( (declarator a) )) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (declarator (declarator b) [ ]) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (declarator (declarator a) [ (e 3) ]) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (declarator * (declarator * (declarator a))) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (declarator * (declarator a)) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(s (declarator a) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        }
      ],
      "nbFailures": 91,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.python3.TestFullContextParsing",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Python3:CtxSensitiveDFA_2]",
        "testOne[Python3:CtxSensitiveDFA_1]",
        "testOne[Python3:AmbigYieldsCtxSensitiveDFA]",
        "testOne[Python3:LoopsSimulateTailRecursion]",
        "testOne[Python3:SLLSeesEOFInLLGrammar]",
        "testOne[Python3:FullContextIF_THEN_ELSEParse_6]",
        "testOne[Python3:FullContextIF_THEN_ELSEParse_5]",
        "testOne[Python3:FullContextIF_THEN_ELSEParse_2]",
        "testOne[Python3:FullContextIF_THEN_ELSEParse_1]",
        "testOne[Python3:FullContextIF_THEN_ELSEParse_4]",
        "testOne[Python3:FullContextIF_THEN_ELSEParse_3]",
        "testOne[Python3:CtxSensitiveDFATwoDiffInput]",
        "testOne[Python3:AmbiguityNoLoop]",
        "testOne[Python3:ExprAmbiguity_2]",
        "testOne[Python3:ExprAmbiguity_1]"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 15
    },
    {
      "className": "org.antlr.v4.test.runtime.go.TestLeftRecursion",
      "failingMethods": [],
      "erroringMethods": [
        "org.antlr.v4.test.runtime.go.TestLeftRecursion"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Missing system property:antlr-go",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.antlr.v4.test.runtime.csharp.TestParserExec",
      "failingMethods": [
        "testOne[CSharp:MultipleEOFHandling]",
        "testOne[CSharp:Optional_1]",
        "testOne[CSharp:AorBStar_1]",
        "testOne[CSharp:ReferenceToATN_2]",
        "testOne[CSharp:ParserProperty]",
        "testOne[CSharp:Optional_3]",
        "testOne[CSharp:AorB]",
        "testOne[CSharp:LL1OptionalBlock_2]",
        "testOne[CSharp:OpenDeviceStatement_Case2]",
        "testOne[CSharp:EOFInClosure]",
        "testOne[CSharp:IfIfElseGreedyBinding2]",
        "testOne[CSharp:PredicatedIfIfElse]",
        "testOne[CSharp:AorAPlus]",
        "testOne[CSharp:ListLabelsOnSet]",
        "testOne[CSharp:AStar_1]",
        "testOne[CSharp:IfIfElseNonGreedyBinding1]",
        "testOne[CSharp:Wildcard]",
        "testOne[CSharp:AorAStar_1]",
        "testOne[CSharp:ListLabelForClosureContext]",
        "testOne[CSharp:ReferenceToATN_1]",
        "testOne[CSharp:Optional_2]",
        "testOne[CSharp:Optional_4]",
        "testOne[CSharp:OpenDeviceStatement_Case1]",
        "testOne[CSharp:AorBStar_2]",
        "testOne[CSharp:AorAStar_2]",
        "testOne[CSharp:LL1OptionalBlock_1]",
        "testOne[CSharp:OpenDeviceStatement_Case3]",
        "testOne[CSharp:Labels]",
        "testOne[CSharp:LabelAliasingAcrossLabeledAlternatives]",
        "testOne[CSharp:AStar_2]",
        "testOne[CSharp:IfIfElseGreedyBinding1]",
        "testOne[CSharp:IfIfElseNonGreedyBinding2]",
        "testOne[CSharp:APlus]",
        "testOne[CSharp:AorBPlus]",
        "testOne[CSharp:Basic]",
        "testOne[CSharp:PredictionIssue334]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 36,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.csharp.TestLexerExec",
      "failingMethods": [
        "testOne[CSharp:RecursiveLexerRuleRefWithWildcardStar_2]",
        "testOne[CSharp:Parentheses]",
        "testOne[CSharp:CharSetInSet]",
        "testOne[CSharp:NonGreedyConfigs]",
        "testOne[CSharp:EOFByItself]",
        "testOne[CSharp:NonGreedyTermination1]",
        "testOne[CSharp:NonGreedyClosure]",
        "testOne[CSharp:NonGreedyOptional]",
        "testOne[CSharp:CharSet]",
        "testOne[CSharp:LargeLexer]",
        "testOne[CSharp:CharSetWithQuote1]",
        "testOne[CSharp:CharSetWithEscapedChar]",
        "testOne[CSharp:HexVsID]",
        "testOne[CSharp:EOFSuffixInFirstRule_1]",
        "testOne[CSharp:PositionAdjustingLexer]",
        "testOne[CSharp:RefToRuleDoesNotSetTokenNorEmitAnother]",
        "testOne[CSharp:GreedyPositiveClosure]",
        "testOne[CSharp:GreedyOptional]",
        "testOne[CSharp:RecursiveLexerRuleRefWithWildcardPlus_1]",
        "testOne[CSharp:NonGreedyTermination2]",
        "testOne[CSharp:UnicodeCharSet]",
        "testOne[CSharp:GreedyClosure]",
        "testOne[CSharp:Slashes]",
        "testOne[CSharp:RecursiveLexerRuleRefWithWildcardStar_1]",
        "testOne[CSharp:CharSetNot]",
        "testOne[CSharp:ActionPlacement]",
        "testOne[CSharp:KeywordID]",
        "testOne[CSharp:CharSetRange]",
        "testOne[CSharp:NonGreedyPositiveClosure]",
        "testOne[CSharp:CharSetWithQuote2]",
        "testOne[CSharp:CharSetPlus]",
        "testOne[CSharp:RecursiveLexerRuleRefWithWildcardPlus_2]",
        "testOne[CSharp:QuoteTranslation]",
        "testOne[CSharp:ZeroLengthToken]",
        "testOne[CSharp:CharSetWithMissingEscapeChar]",
        "testOne[CSharp:EOFSuffixInFirstRule_2]",
        "testOne[CSharp:GreedyConfigs]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:4\u003d\u0027KW400\u0027,\u003c402\u003e,1:0]\n[@1,5:4\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:5]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:4\u003d\u0027\u0027xxx\u0027\u0027,\u003c1\u003e,1:0]\n[@1,5:4\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:5]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:0\u003d\u0027\\\u0027,\u003c1\u003e,1:0]\n[@1,2:2\u003d\u0027/\u0027,\u003c2\u003e,1:2]\n[@2,4:5\u003d\u0027\\/\u0027,\u003c3\u003e,1:4]\n[@3,7:8\u003d\u0027/\\\u0027,\u003c4\u003e,1:7]\n[@4,9:8\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:9]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:1\u003d\u002734\u0027,\u003c2\u003e,1:0]\n[@1,3:5\u003d\u0027-21\u0027,\u003c1\u003e,1:3]\n[@2,7:7\u003d\u00273\u0027,\u003c2\u003e,1:7]\n[@3,8:7\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:8]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:8\u003d\u0027/* ick */\u0027,\u003c1\u003e,1:0]\n[@1,10:10\u003d\u0027\\n\u0027,\u003c2\u003e,1:10]\n[@2,11:36\u003d\u0027/* /* */x\\n/* /*nested*/ */\u0027,\u003c1\u003e,2:0]\n[@3,38:38\u003d\u0027\\n\u0027,\u003c2\u003e,3:17]\n[@4,39:38\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,4:0]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:8\u003d\u0027/* ick */\u0027,\u003c1\u003e,1:0]\n[@1,9:9\u003d\u0027\\n\u0027,\u003c2\u003e,1:9]\n[@2,10:34\u003d\u0027/* /* */\\n/* /*nested*/ */\u0027,\u003c1\u003e,2:0]\n[@3,35:35\u003d\u0027\\n\u0027,\u003c2\u003e,3:16]\n[@4,36:35\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,4:0]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:8\u003d\u0027/* ick */\u0027,\u003c1\u003e,1:0]\n[@1,10:10\u003d\u0027\\n\u0027,\u003c2\u003e,1:10]\n[@2,11:36\u003d\u0027/* /* */x\\n/* /*nested*/ */\u0027,\u003c1\u003e,2:0]\n[@3,38:38\u003d\u0027\\n\u0027,\u003c2\u003e,3:17]\n[@4,39:38\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,4:0]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:8\u003d\u0027/* ick */\u0027,\u003c1\u003e,1:0]\n[@1,9:9\u003d\u0027\\n\u0027,\u003c2\u003e,1:9]\n[@2,10:34\u003d\u0027/* /* */\\n/* /*nested*/ */\u0027,\u003c1\u003e,2:0]\n[@3,35:35\u003d\u0027\\n\u0027,\u003c2\u003e,3:16]\n[@4,36:35\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,4:0]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:0\u003d\u0027\"\u0027,\u003c1\u003e,1:0]\n[@1,1:0\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:1]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:5\u003d\u0027tokens\u0027,\u003c6\u003e,1:0]\n[@1,7:12\u003d\u0027tokens\u0027,\u003c4\u003e,2:0]\n[@2,14:14\u003d\u0027{\u0027,\u003c3\u003e,2:7]\n[@3,16:23\u003d\u0027notLabel\u0027,\u003c6\u003e,3:0]\n[@4,25:30\u003d\u0027label1\u0027,\u003c5\u003e,4:0]\n[@5,32:32\u003d\u0027\u003d\u0027,\u003c1\u003e,4:7]\n[@6,34:39\u003d\u0027label2\u0027,\u003c5\u003e,5:0]\n[@7,41:42\u003d\u0027+\u003d\u0027,\u003c2\u003e,5:7]\n[@8,44:51\u003d\u0027notLabel\u0027,\u003c6\u003e,6:0]\n[@9,53:52\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,7:0]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:4\u003d\u0027-.-.-\u0027,\u003c1\u003e,1:0]\n[@1,5:5\u003d\u0027!\u0027,\u003c3\u003e,1:5]\n[@2,6:5\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:6]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:6\u003d\u0027\"\"\"mom\"\u0027,\u003c1\u003e,1:0]\n[@1,7:6\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:7]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:3\u003d\u0027\"hi\"\u0027,\u003c1\u003e,1:0]\n[@1,4:8\u003d\u0027\"mom\"\u0027,\u003c1\u003e,1:4]\n[@2,9:8\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:9]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:6\u003d\u0027//blah\\n\u0027,\u003c1\u003e,1:0]\n[@1,7:13\u003d\u0027//blah\\n\u0027,\u003c1\u003e,2:0]\n[@2,14:13\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,3:0]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:6\u003d\u0027//blah\\n\u0027,\u003c1\u003e,1:0]\n[@1,7:13\u003d\u0027//blah\\n\u0027,\u003c1\u003e,2:0]\n[@2,14:13\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,3:0]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003ca\nb\n[@0,0:0\u003d\u0027a\u0027,\u003c1\u003e,1:0]\n[@1,1:1\u003d\u0027b\u0027,\u003c3\u003e,1:1]\n[@2,2:1\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:2]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:6\u003d\u0027//blah\\n\u0027,\u003c1\u003e,1:0]\n[@1,7:13\u003d\u0027//blah\\n\u0027,\u003c1\u003e,2:0]\n[@2,14:13\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,3:0]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:2\u003d\u0027end\u0027,\u003c1\u003e,1:0]\n[@1,3:3\u003d\u0027 \u0027,\u003c3\u003e,1:3]\n[@2,4:7\u003d\u0027eend\u0027,\u003c2\u003e,1:4]\n[@3,8:8\u003d\u0027 \u0027,\u003c3\u003e,1:8]\n[@4,9:14\u003d\u0027ending\u0027,\u003c2\u003e,1:9]\n[@5,15:15\u003d\u0027 \u0027,\u003c3\u003e,1:15]\n[@6,16:16\u003d\u0027a\u0027,\u003c2\u003e,1:16]\n[@7,17:16\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:17]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:0\u003d\u0027x\u0027,\u003c5\u003e,1:0]\n[@1,1:1\u003d\u0027 \u0027,\u003c6\u003e,1:1]\n[@2,2:2\u003d\u00270\u0027,\u003c2\u003e,1:2]\n[@3,3:3\u003d\u0027 \u0027,\u003c6\u003e,1:3]\n[@4,4:4\u003d\u00271\u0027,\u003c2\u003e,1:4]\n[@5,5:5\u003d\u0027 \u0027,\u003c6\u003e,1:5]\n[@6,6:6\u003d\u0027a\u0027,\u003c5\u003e,1:6]\n[@7,7:7\u003d\u0027.\u0027,\u003c4\u003e,1:7]\n[@8,8:8\u003d\u0027b\u0027,\u003c5\u003e,1:8]\n[@9,9:9\u003d\u0027 \u0027,\u003c6\u003e,1:9]\n[@10,10:10\u003d\u0027a\u0027,\u003c5\u003e,1:10]\n[@11,11:11\u003d\u0027.\u0027,\u003c4\u003e,1:11]\n[@12,12:12\u003d\u0027l\u0027,\u003c5\u003e,1:12]\n[@13,13:12\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:13]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:13\u003d\u0027//blah\\n//blah\\n\u0027,\u003c1\u003e,1:0]\n[@1,14:13\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,3:0]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:13\u003d\u0027//blah\\n//blah\\n\u0027,\u003c1\u003e,1:0]\n[@1,14:13\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,3:0]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cab\n[@0,0:1\u003d\u0027ab\u0027,\u003c1\u003e,1:0]\n[@1,2:1\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:2]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:13\u003d\u0027//blah\\n//blah\\n\u0027,\u003c1\u003e,1:0]\n[@1,14:13\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,3:0]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:0\u003d\u0027a\u0027,\u003c1\u003e,1:0]\n[@1,1:0\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:1]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:-1\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:0]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:-1\u003d\u0027\u003cEOF\u003e\u0027,\u003c1\u003e,1:0]\n[@1,0:-1\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:0]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cA\n[@0,0:3\u003d\u0027b\"\\a\u0027,\u003c1\u003e,1:0]\n[@1,4:3\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:4]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cA\n[@0,0:2\u003d\u0027b\"a\u0027,\u003c1\u003e,1:0]\n[@1,3:2\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:3]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cI\n[@0,0:1\u003d\u002734\u0027,\u003c1\u003e,1:0]\n[@1,3:2\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:3]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cDASHBRACK\nDASHBRACK\n[@0,0:0\u003d\u0027-\u0027,\u003c1\u003e,1:0]\n[@1,2:2\u003d\u0027]\u0027,\u003c1\u003e,1:2]\n[@2,4:3\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:4]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cI\nI\nID\nID\n[@0,0:1\u003d\u002734\u0027,\u003c1\u003e,1:0]\n[@1,4:5\u003d\u002734\u0027,\u003c1\u003e,2:1]\n[@2,7:8\u003d\u0027a2\u0027,\u003c2\u003e,2:4]\n[@3,10:12\u003d\u0027abc\u0027,\u003c2\u003e,2:7]\n[@4,18:17\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,3:3]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cI\nI\n[@0,0:1\u003d\u002734\u0027,\u003c1\u003e,1:0]\n[@1,4:5\u003d\u002734\u0027,\u003c1\u003e,2:1]\n[@2,6:5\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,2:3]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cI\n[@0,0:2\u003d\u0027xaf\u0027,\u003c1\u003e,1:0]\n[@1,3:2\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:3]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cI\nI\n[@0,0:0\u003d\u0027a\u0027,\u003c1\u003e,1:0]\n[@1,2:2\u003d\u0027x\u0027,\u003c1\u003e,1:2]\n[@2,3:2\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:3]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:0\u003d\u0027均\u0027,\u003c1\u003e,1:0]\n[@1,1:0\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:1]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cI\nI\n[@0,0:1\u003d\u002734\u0027,\u003c1\u003e,1:0]\n[@1,4:5\u003d\u002734\u0027,\u003c1\u003e,2:1]\n[@2,6:5\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,2:3]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cstuff0:\nstuff1: a\nstuff2: ab\nab\n[@0,0:1\u003d\u0027ab\u0027,\u003c1\u003e,1:0]\n[@1,2:1\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:2]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        }
      ],
      "nbFailures": 37,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.python3.TestPerformance",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Python3:DropLoopEntryBranchInLRRule_1]",
        "testOne[Python3:ExpressionGrammar_2]",
        "testOne[Python3:DropLoopEntryBranchInLRRule_2]",
        "testOne[Python3:ExpressionGrammar_1]",
        "testOne[Python3:DropLoopEntryBranchInLRRule_5]",
        "testOne[Python3:DropLoopEntryBranchInLRRule_3]"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "org.antlr.v4.test.runtime.python3.TestSemPredEvalLexer",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Python3:PredicatedKeywords]",
        "testOne[Python3:RuleSempredFunction]",
        "testOne[Python3:IDvsEnum]",
        "testOne[Python3:DisableRule]",
        "testOne[Python3:Indent]",
        "testOne[Python3:IDnotEnum]",
        "testOne[Python3:EnumNotID]",
        "testOne[Python3:LexerInputPositionSensitivePredicates]"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "org.antlr.v4.test.runtime.javascript.node.TestSemPredEvalLexer",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Node:LexerInputPositionSensitivePredicates]",
        "testOne[Node:RuleSempredFunction]",
        "testOne[Node:EnumNotID]",
        "testOne[Node:DisableRule]",
        "testOne[Node:PredicatedKeywords]",
        "testOne[Node:Indent]",
        "testOne[Node:IDnotEnum]",
        "testOne[Node:IDvsEnum]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "org.antlr.v4.test.runtime.python3.TestLexerErrors",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Python3:InvalidCharAtStart]",
        "testOne[Python3:EnforcedGreedyNestedBraces_1]",
        "testOne[Python3:StringsEmbeddedInActions_2]",
        "testOne[Python3:ErrorInMiddle]",
        "testOne[Python3:StringsEmbeddedInActions_1]",
        "testOne[Python3:LexerExecDFA]",
        "testOne[Python3:InvalidCharInTokenAfterDFACache]",
        "testOne[Python3:DFAToATNThatFailsBackToDFA]",
        "testOne[Python3:InvalidCharInToken]",
        "testOne[Python3:InvalidCharAtStartAfterDFACache]",
        "testOne[Python3:DFAToATNThatMatchesThenFailsInATN]",
        "testOne[Python3:EnforcedGreedyNestedBraces_2]"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 12
    },
    {
      "className": "org.antlr.v4.test.runtime.javascript.node.TestCompositeParsers",
      "failingMethods": [
        "testOne[Node:DelegatorInvokesDelegateRuleWithReturnStruct]",
        "testOne[Node:CombinedImportsCombined]",
        "testOne[Node:DelegatorInvokesDelegateRule]",
        "testOne[Node:DelegatesSeeSameTokenType]",
        "testOne[Node:DelegatorRuleOverridesDelegates]",
        "testOne[Node:DelegatorAccessesDelegateMembers]",
        "testOne[Node:DelegatorRuleOverridesDelegate]",
        "testOne[Node:DelegatorInvokesDelegateRuleWithArgs]",
        "testOne[Node:BringInLiteralsFromDelegate]",
        "testOne[Node:DelegatorRuleOverridesLookaheadInDelegate]",
        "testOne[Node:DelegatorInvokesFirstVersionOfDelegateRule]",
        "testOne[Node:KeywordVSIDOrder]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cM.A\nM.a: [@0,0:2\u003d\u0027abc\u0027,\u003c1\u003e,1:0]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cJavaDecl: floatx\u003d3;\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cM.b\nS.a\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cS.a\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cS.a\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cS.ab\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cS.a1000\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cS.a\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cfoo\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cS.x\nT.y\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cS.x\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cS.a\n\u003e but was:\u003cnull\u003e",
          "isError": false
        }
      ],
      "nbFailures": 12,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.python3.TestCompositeParsers",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Python3:DelegatorInvokesDelegateRuleWithArgs]",
        "testOne[Python3:DelegatorInvokesDelegateRuleWithReturnStruct]",
        "testOne[Python3:ImportLexerWithOnlyFragmentRules]",
        "testOne[Python3:DelegatorRuleOverridesDelegates]",
        "testOne[Python3:DelegatorInvokesFirstVersionOfDelegateRule]",
        "testOne[Python3:DelegatorAccessesDelegateMembers]",
        "testOne[Python3:ImportedRuleWithAction]",
        "testOne[Python3:DelegatorRuleOverridesDelegate]",
        "testOne[Python3:ImportedGrammarWithEmptyOptions]",
        "testOne[Python3:KeywordVSIDOrder]",
        "testOne[Python3:BringInLiteralsFromDelegate]",
        "testOne[Python3:DelegatesSeeSameTokenType]",
        "testOne[Python3:DelegatorRuleOverridesLookaheadInDelegate]",
        "testOne[Python3:CombinedImportsCombined]",
        "testOne[Python3:DelegatorInvokesDelegateRule]"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 15
    },
    {
      "className": "org.antlr.v4.test.runtime.python3.TestParserExec",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Python3:Optional_1]",
        "testOne[Python3:IfIfElseNonGreedyBinding1]",
        "testOne[Python3:Wildcard]",
        "testOne[Python3:AStar_2]",
        "testOne[Python3:ReferenceToATN_2]",
        "testOne[Python3:IfIfElseGreedyBinding1]",
        "testOne[Python3:ListLabelsOnSet]",
        "testOne[Python3:MultipleEOFHandling]",
        "testOne[Python3:AorB]",
        "testOne[Python3:LL1OptionalBlock_2]",
        "testOne[Python3:PredicatedIfIfElse]",
        "testOne[Python3:APlus]",
        "testOne[Python3:OpenDeviceStatement_Case2]",
        "testOne[Python3:AorAStar_1]",
        "testOne[Python3:Optional_4]",
        "testOne[Python3:AorBStar_1]",
        "testOne[Python3:Optional_2]",
        "testOne[Python3:IfIfElseGreedyBinding2]",
        "testOne[Python3:AStar_1]",
        "testOne[Python3:AorBPlus]",
        "testOne[Python3:ParserProperty]",
        "testOne[Python3:ReferenceToATN_1]",
        "testOne[Python3:IfIfElseNonGreedyBinding2]",
        "testOne[Python3:Basic]",
        "testOne[Python3:EOFInClosure]",
        "testOne[Python3:ListLabelForClosureContext]",
        "testOne[Python3:LabelAliasingAcrossLabeledAlternatives]",
        "testOne[Python3:LL1OptionalBlock_1]",
        "testOne[Python3:PredictionIssue334]",
        "testOne[Python3:AorAPlus]",
        "testOne[Python3:OpenDeviceStatement_Case3]",
        "testOne[Python3:OpenDeviceStatement_Case1]",
        "testOne[Python3:Optional_3]",
        "testOne[Python3:Labels]",
        "testOne[Python3:AorBStar_2]",
        "testOne[Python3:AorAStar_2]"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 36
    },
    {
      "className": "org.antlr.v4.test.runtime.python3.TestLexerExec",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Python3:NonGreedyConfigs]",
        "testOne[Python3:RecursiveLexerRuleRefWithWildcardStar_2]",
        "testOne[Python3:NonGreedyTermination2]",
        "testOne[Python3:GreedyOptional]",
        "testOne[Python3:GreedyPositiveClosure]",
        "testOne[Python3:HexVsID]",
        "testOne[Python3:EOFByItself]",
        "testOne[Python3:CharSet]",
        "testOne[Python3:NonGreedyClosure]",
        "testOne[Python3:CharSetRange]",
        "testOne[Python3:UnicodeCharSet]",
        "testOne[Python3:LargeLexer]",
        "testOne[Python3:EOFSuffixInFirstRule_1]",
        "testOne[Python3:PositionAdjustingLexer]",
        "testOne[Python3:RecursiveLexerRuleRefWithWildcardPlus_1]",
        "testOne[Python3:Slashes]",
        "testOne[Python3:Parentheses]",
        "testOne[Python3:CharSetWithEscapedChar]",
        "testOne[Python3:RefToRuleDoesNotSetTokenNorEmitAnother]",
        "testOne[Python3:CharSetInSet]",
        "testOne[Python3:CharSetWithQuote1]",
        "testOne[Python3:GreedyConfigs]",
        "testOne[Python3:RecursiveLexerRuleRefWithWildcardStar_1]",
        "testOne[Python3:NonGreedyTermination1]",
        "testOne[Python3:NonGreedyPositiveClosure]",
        "testOne[Python3:CharSetWithMissingEscapeChar]",
        "testOne[Python3:CharSetNot]",
        "testOne[Python3:ActionPlacement]",
        "testOne[Python3:CharSetPlus]",
        "testOne[Python3:QuoteTranslation]",
        "testOne[Python3:EOFSuffixInFirstRule_2]",
        "testOne[Python3:RecursiveLexerRuleRefWithWildcardPlus_2]",
        "testOne[Python3:KeywordID]",
        "testOne[Python3:GreedyClosure]",
        "testOne[Python3:NonGreedyOptional]",
        "testOne[Python3:ZeroLengthToken]",
        "testOne[Python3:CharSetWithQuote2]"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 37
    },
    {
      "className": "org.antlr.v4.test.runtime.csharp.TestSemPredEvalLexer",
      "failingMethods": [
        "testOne[CSharp:PredicatedKeywords]",
        "testOne[CSharp:Indent]",
        "testOne[CSharp:IDvsEnum]",
        "testOne[CSharp:IDnotEnum]",
        "testOne[CSharp:LexerInputPositionSensitivePredicates]",
        "testOne[CSharp:DisableRule]",
        "testOne[CSharp:EnumNotID]",
        "testOne[CSharp:RuleSempredFunction]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cenum!\nID enu\nID a\n[@0,0:3\u003d\u0027enum\u0027,\u003c1\u003e,1:0]\n[@1,5:7\u003d\u0027enu\u0027,\u003c2\u003e,1:5]\n[@2,9:9\u003d\u0027a\u0027,\u003c2\u003e,1:9]\n[@3,10:9\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:10]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003ca\ncde\nab\ncde\n[@0,0:0\u003d\u0027a\u0027,\u003c1\u003e,1:0]\n[@1,2:4\u003d\u0027cde\u0027,\u003c2\u003e,1:2]\n[@2,6:7\u003d\u0027ab\u0027,\u003c1\u003e,2:0]\n[@3,8:10\u003d\u0027cde\u0027,\u003c2\u003e,2:2]\n[@4,12:11\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,3:0]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cINDENT\n[@0,0:2\u003d\u0027abc\u0027,\u003c1\u003e,1:0]\n[@1,3:3\u003d\u0027\\n\u0027,\u003c3\u003e,1:3]\n[@2,4:5\u003d\u0027  \u0027,\u003c2\u003e,2:0]\n[@3,6:8\u003d\u0027def\u0027,\u003c1\u003e,2:2]\n[@4,9:10\u003d\u0027  \u0027,\u003c4\u003e,2:5]\n[@5,11:11\u003d\u0027\\n\u0027,\u003c3\u003e,2:7]\n[@6,12:11\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,3:0]\ns0-\u0027\n\u0027-\u003e:s2\u003d\u003e3\ns0-\u0027a\u0027-\u003e:s1\u003d\u003e1\ns0-\u0027d\u0027-\u003e:s1\u003d\u003e1\n:s1\u003d\u003e1-\u0027b\u0027-\u003e:s1\u003d\u003e1\n:s1\u003d\u003e1-\u0027c\u0027-\u003e:s1\u003d\u003e1\n:s1\u003d\u003e1-\u0027e\u0027-\u003e:s1\u003d\u003e1\n:s1\u003d\u003e1-\u0027f\u0027-\u003e:s1\u003d\u003e1\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:3\u003d\u0027enum\u0027,\u003c2\u003e,1:0]\n[@1,5:7\u003d\u0027abc\u0027,\u003c2\u003e,1:5]\n[@2,9:12\u003d\u0027enum\u0027,\u003c2\u003e,1:9]\n[@3,13:12\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:13]\ns0-\u0027 \u0027-\u003e:s5\u003d\u003e3\ns0-\u0027a\u0027-\u003e:s4\u003d\u003e2\ns0-\u0027e\u0027-\u003e:s1\u003d\u003e2\n:s1\u003d\u003e2-\u0027n\u0027-\u003e:s2\u003d\u003e2\n:s2\u003d\u003e2-\u0027u\u0027-\u003e:s3\u003d\u003e2\n:s4\u003d\u003e2-\u0027b\u0027-\u003e:s4\u003d\u003e2\n:s4\u003d\u003e2-\u0027c\u0027-\u003e:s4\u003d\u003e2\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:3\u003d\u0027enum\u0027,\u003c2\u003e,1:0]\n[@1,5:7\u003d\u0027abc\u0027,\u003c2\u003e,1:5]\n[@2,9:12\u003d\u0027enum\u0027,\u003c2\u003e,1:9]\n[@3,13:12\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:13]\ns0-\u0027 \u0027-\u003e:s2\u003d\u003e3\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:3\u003d\u0027enum\u0027,\u003c1\u003e,1:0]\n[@1,5:7\u003d\u0027abc\u0027,\u003c2\u003e,1:5]\n[@2,9:12\u003d\u0027enum\u0027,\u003c1\u003e,1:9]\n[@3,13:12\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:13]\ns0-\u0027 \u0027-\u003e:s3\u003d\u003e3\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:3\u003d\u0027enum\u0027,\u003c2\u003e,1:0]\n[@1,5:7\u003d\u0027abc\u0027,\u003c3\u003e,1:5]\n[@2,8:7\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:8]\ns0-\u0027 \u0027-\u003e:s5\u003d\u003e4\ns0-\u0027a\u0027-\u003e:s6\u003d\u003e3\ns0-\u0027e\u0027-\u003e:s1\u003d\u003e3\n:s1\u003d\u003e3-\u0027n\u0027-\u003e:s2\u003d\u003e3\n:s2\u003d\u003e3-\u0027u\u0027-\u003e:s3\u003d\u003e3\n:s6\u003d\u003e3-\u0027b\u0027-\u003e:s6\u003d\u003e3\n:s6\u003d\u003e3-\u0027c\u0027-\u003e:s6\u003d\u003e3\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c[@0,0:0\u003d\u0027a\u0027,\u003c1\u003e,1:0]\n[@1,1:1\u003d\u0027a\u0027,\u003c1\u003e,1:1]\n[@2,2:2\u003d\u0027a\u0027,\u003c1\u003e,1:2]\n[@3,3:2\u003d\u0027\u003cEOF\u003e\u0027,\u003c-1\u003e,1:3]\n\u003e but was:\u003cnull\u003e",
          "isError": false
        }
      ],
      "nbFailures": 8,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.csharp.TestLeftRecursion",
      "failingMethods": [
        "testOne[CSharp:ReturnValueAndActionsList2_1]",
        "testOne[CSharp:Declarations_5]",
        "testOne[CSharp:ReturnValueAndActionsList1_4]",
        "testOne[CSharp:ReturnValueAndActions_4]",
        "testOne[CSharp:JavaExpressions_9]",
        "testOne[CSharp:TernaryExpr_2]",
        "testOne[CSharp:TernaryExprExplicitAssociativity_3]",
        "testOne[CSharp:PrefixOpWithActionAndLabel_3]",
        "testOne[CSharp:JavaExpressions_1]",
        "testOne[CSharp:ReturnValueAndActionsAndLabels_1]",
        "testOne[CSharp:MultipleAlternativesWithCommonLabel_5]",
        "testOne[CSharp:Expressions_5]",
        "testOne[CSharp:AmbigLR_3]",
        "testOne[CSharp:ReturnValueAndActionsList2_2]",
        "testOne[CSharp:Declarations_6]",
        "testOne[CSharp:TernaryExprExplicitAssociativity_2]",
        "testOne[CSharp:JavaExpressions_8]",
        "testOne[CSharp:TernaryExpr_1]",
        "testOne[CSharp:DirectCallToLeftRecursiveRule_1]",
        "testOne[CSharp:MultipleActions_3]",
        "testOne[CSharp:MultipleAlternativesWithCommonLabel_4]",
        "testOne[CSharp:Expressions_4]",
        "testOne[CSharp:WhitespaceInfluence_1]",
        "testOne[CSharp:AmbigLR_4]",
        "testOne[CSharp:ReturnValueAndActionsList1_2]",
        "testOne[CSharp:Declarations_7]",
        "testOne[CSharp:Simple_3]",
        "testOne[CSharp:ReturnValueAndActions_2]",
        "testOne[CSharp:PrecedenceFilterConsidersContext]",
        "testOne[CSharp:JavaExpressions_7]",
        "testOne[CSharp:ReturnValueAndActionsAndLabels_3]",
        "testOne[CSharp:TernaryExpr_4]",
        "testOne[CSharp:TernaryExprExplicitAssociativity_5]",
        "testOne[CSharp:LabelsOnOpSubrule_3]",
        "testOne[CSharp:Expressions_7]",
        "testOne[CSharp:Declarations_10]",
        "testOne[CSharp:MultipleActions_2]",
        "testOne[CSharp:Declarations_8]",
        "testOne[CSharp:AmbigLR_5]",
        "testOne[CSharp:ReturnValueAndActionsList1_3]",
        "testOne[CSharp:Simple_2]",
        "testOne[CSharp:ReturnValueAndActions_3]",
        "testOne[CSharp:TernaryExprExplicitAssociativity_4]",
        "testOne[CSharp:JavaExpressions_6]",
        "testOne[CSharp:TernaryExpr_3]",
        "testOne[CSharp:ReturnValueAndActionsAndLabels_2]",
        "testOne[CSharp:Expressions_6]",
        "testOne[CSharp:MultipleActions_1]",
        "testOne[CSharp:SemPred]",
        "testOne[CSharp:Declarations_9]",
        "testOne[CSharp:Simple_1]",
        "testOne[CSharp:Declarations_1]",
        "testOne[CSharp:JavaExpressions_10]",
        "testOne[CSharp:JavaExpressions_5]",
        "testOne[CSharp:TernaryExpr_6]",
        "testOne[CSharp:TernaryExprExplicitAssociativity_7]",
        "testOne[CSharp:MultipleActionsPredicatesOptions_1]",
        "testOne[CSharp:LabelsOnOpSubrule_1]",
        "testOne[CSharp:SemPredFailOption]",
        "testOne[CSharp:MultipleAlternativesWithCommonLabel_1]",
        "testOne[CSharp:Expressions_1]",
        "testOne[CSharp:ReturnValueAndActionsList1_1]",
        "testOne[CSharp:PrefixAndOtherAlt_2]",
        "testOne[CSharp:Declarations_2]",
        "testOne[CSharp:ReturnValueAndActionsAndLabels_4]",
        "testOne[CSharp:TernaryExprExplicitAssociativity_6]",
        "testOne[CSharp:JavaExpressions_4]",
        "testOne[CSharp:TernaryExpr_5]",
        "testOne[CSharp:LabelsOnOpSubrule_2]",
        "testOne[CSharp:ReturnValueAndActions_1]",
        "testOne[CSharp:PrefixAndOtherAlt_1]",
        "testOne[CSharp:ReturnValueAndActionsList2_3]",
        "testOne[CSharp:TernaryExprExplicitAssociativity_1]",
        "testOne[CSharp:Declarations_3]",
        "testOne[CSharp:MultipleActionsPredicatesOptions_3]",
        "testOne[CSharp:JavaExpressions_3]",
        "testOne[CSharp:TernaryExpr_8]",
        "testOne[CSharp:TernaryExprExplicitAssociativity_9]",
        "testOne[CSharp:PrefixOpWithActionAndLabel_1]",
        "testOne[CSharp:JavaExpressions_12]",
        "testOne[CSharp:TernaryExpr_9]",
        "testOne[CSharp:DirectCallToLeftRecursiveRule_2]",
        "testOne[CSharp:MultipleAlternativesWithCommonLabel_3]",
        "testOne[CSharp:AmbigLR_1]",
        "testOne[CSharp:WhitespaceInfluence_2]",
        "testOne[CSharp:Expressions_3]",
        "testOne[CSharp:Declarations_4]",
        "testOne[CSharp:TernaryExprExplicitAssociativity_8]",
        "testOne[CSharp:MultipleActionsPredicatesOptions_2]",
        "testOne[CSharp:JavaExpressions_2]",
        "testOne[CSharp:TernaryExpr_7]",
        "testOne[CSharp:PrefixOpWithActionAndLabel_2]",
        "testOne[CSharp:JavaExpressions_11]",
        "testOne[CSharp:DirectCallToLeftRecursiveRule_3]",
        "testOne[CSharp:MultipleAlternativesWithCommonLabel_2]",
        "testOne[CSharp:AmbigLR_2]",
        "testOne[CSharp:ReturnValueAndActionsList2_4]",
        "testOne[CSharp:Expressions_2]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 98,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.csharp.TestCompositeParsers",
      "failingMethods": [
        "testOne[CSharp:KeywordVSIDOrder]",
        "testOne[CSharp:DelegatorAccessesDelegateMembers]",
        "testOne[CSharp:DelegatesSeeSameTokenType]",
        "testOne[CSharp:ImportedGrammarWithEmptyOptions]",
        "testOne[CSharp:ImportedRuleWithAction]",
        "testOne[CSharp:ImportLexerWithOnlyFragmentRules]",
        "testOne[CSharp:CombinedImportsCombined]",
        "testOne[CSharp:DelegatorRuleOverridesDelegates]",
        "testOne[CSharp:BringInLiteralsFromDelegate]",
        "testOne[CSharp:DelegatorInvokesFirstVersionOfDelegateRule]",
        "testOne[CSharp:DelegatorInvokesDelegateRuleWithArgs]",
        "testOne[CSharp:DelegatorInvokesDelegateRule]",
        "testOne[CSharp:DelegatorInvokesDelegateRuleWithReturnStruct]",
        "testOne[CSharp:DelegatorRuleOverridesLookaheadInDelegate]",
        "testOne[CSharp:DelegatorRuleOverridesDelegate]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 15,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.csharp.TestParserErrors",
      "failingMethods": [
        "testOne[CSharp:TokenMismatch3]",
        "testOne[CSharp:ContextListGetters]",
        "testOne[CSharp:NoViableAltAvoidance]",
        "testOne[CSharp:LLStar]",
        "testOne[CSharp:InvalidATNStateRemoval]",
        "testOne[CSharp:SingleTokenDeletionBeforeLoop2]",
        "testOne[CSharp:SingleTokenInsertion]",
        "testOne[CSharp:SingleTokenDeletionBeforeAlt]",
        "testOne[CSharp:MultiTokenDeletionDuringLoop2]",
        "testOne[CSharp:SingleTokenDeletionExpectingSet]",
        "testOne[CSharp:TokenMismatch]",
        "testOne[CSharp:LL2]",
        "testOne[CSharp:DuplicatedLeftRecursiveCall_3]",
        "testOne[CSharp:SingleTokenDeletionDuringLoop2]",
        "testOne[CSharp:SingleTokenDeletionDuringLoop]",
        "testOne[CSharp:DuplicatedLeftRecursiveCall_1]",
        "testOne[CSharp:SingleSetInsertionConsumption]",
        "testOne[CSharp:TokenMismatch2]",
        "testOne[CSharp:SingleTokenDeletionBeforePredict]",
        "testOne[CSharp:InvalidEmptyInput]",
        "testOne[CSharp:MultiTokenDeletionBeforeLoop]",
        "testOne[CSharp:ConjuringUpToken]",
        "testOne[CSharp:SingleTokenDeletionBeforeLoop]",
        "testOne[CSharp:DuplicatedLeftRecursiveCall_4]",
        "testOne[CSharp:LL3]",
        "testOne[CSharp:MultiTokenDeletionBeforeLoop2]",
        "testOne[CSharp:DuplicatedLeftRecursiveCall_2]",
        "testOne[CSharp:MultiTokenDeletionDuringLoop]",
        "testOne[CSharp:LL1ErrorInfo]",
        "testOne[CSharp:ConjuringUpTokenFromSet]",
        "testOne[CSharp:SingleTokenDeletion]",
        "testOne[CSharp:SingleTokenDeletionConsumption]",
        "testOne[CSharp:SingleSetInsertion]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 33,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.go.TestListeners",
      "failingMethods": [],
      "erroringMethods": [
        "org.antlr.v4.test.runtime.go.TestListeners"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Missing system property:antlr-go",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.antlr.v4.test.runtime.javascript.node.TestParserExec",
      "failingMethods": [
        "testOne[Node:IfIfElseNonGreedyBinding2]",
        "testOne[Node:ReferenceToATN_1]",
        "testOne[Node:AorB]",
        "testOne[Node:PredictionIssue334]",
        "testOne[Node:AStar_1]",
        "testOne[Node:LL1OptionalBlock_1]",
        "testOne[Node:OpenDeviceStatement_Case1]",
        "testOne[Node:IfIfElseGreedyBinding1]",
        "testOne[Node:AorBStar_1]",
        "testOne[Node:AorAStar_1]",
        "testOne[Node:Basic]",
        "testOne[Node:LabelAliasingAcrossLabeledAlternatives]",
        "testOne[Node:OpenDeviceStatement_Case3]",
        "testOne[Node:ParserProperty]",
        "testOne[Node:APlus]",
        "testOne[Node:AorBPlus]",
        "testOne[Node:Wildcard]",
        "testOne[Node:ReferenceToATN_2]",
        "testOne[Node:LL1OptionalBlock_2]",
        "testOne[Node:AStar_2]",
        "testOne[Node:IfIfElseNonGreedyBinding1]",
        "testOne[Node:AorAPlus]",
        "testOne[Node:IfIfElseGreedyBinding2]",
        "testOne[Node:AorAStar_2]",
        "testOne[Node:OpenDeviceStatement_Case2]",
        "testOne[Node:AorBStar_2]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cOPEN DEVICE DEVICE\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cOPEN DEVICE DEVICE\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cOPEN DEVICE DEVICE\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003ca34c\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c(file_ (item a) \u003cEOF\u003e)\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cvalid\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cx\ny\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003ca\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cif y x\nif y if y x else x\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cif y x\nif y if y x else x\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cif y x else x\nif y if y x else x\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cif y x else x\nif y if y x else x\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cx\u003d10;\ny\u003d99;\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cabc34\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003ca34c\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003ca34c\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003calt 2\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cabc\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cabc\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cabc\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cabc\n\u003e but was:\u003cnull\u003e",
          "isError": false
        }
      ],
      "nbFailures": 26,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.python3.TestSets",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Python3:UnicodeUnescapedBMPSet]",
        "testOne[Python3:OptionalLexerSingleElement]",
        "testOne[Python3:PlusSet]",
        "testOne[Python3:SeqDoesNotBecomeSet]",
        "testOne[Python3:OptionalSet]",
        "testOne[Python3:NotCharSet]",
        "testOne[Python3:UnicodeEscapedSMPRangeSetMismatch]",
        "testOne[Python3:StarLexerSingleElement_2]",
        "testOne[Python3:LexerStarSet]",
        "testOne[Python3:UnicodeEscapedSMPSet]",
        "testOne[Python3:LexerOptionalSet]",
        "testOne[Python3:UnicodeUnescapedBMPRangeSet]",
        "testOne[Python3:UnicodeEscapedBMPSet]",
        "testOne[Python3:NotCharSetWithRuleRef3]",
        "testOne[Python3:ParserSet]",
        "testOne[Python3:CharSetLiteral]",
        "testOne[Python3:UnicodeEscapedSMPRangeSet]",
        "testOne[Python3:ParserNotSet]",
        "testOne[Python3:LexerPlusSet]",
        "testOne[Python3:UnicodeEscapedBMPRangeSet]",
        "testOne[Python3:PlusLexerSingleElement]",
        "testOne[Python3:NotChar]",
        "testOne[Python3:UnicodeNegatedSMPSetIncludesBMPCodePoints]",
        "testOne[Python3:StarSet]",
        "testOne[Python3:OptionalSingleElement]",
        "testOne[Python3:ComplementSet]",
        "testOne[Python3:UnicodeNegatedBMPSetIncludesSMPCodePoints]",
        "testOne[Python3:StarLexerSingleElement_1]",
        "testOne[Python3:NotCharSetWithLabel]",
        "testOne[Python3:ParserNotTokenWithLabel]",
        "testOne[Python3:ParserNotToken]",
        "testOne[Python3:RuleAsSet]"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 32
    },
    {
      "className": "org.antlr.v4.test.runtime.go.TestCompositeParsers",
      "failingMethods": [],
      "erroringMethods": [
        "org.antlr.v4.test.runtime.go.TestCompositeParsers"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Missing system property:antlr-go",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.antlr.v4.test.runtime.python3.TestParseTrees",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Python3:ExtraTokensAndAltLabels]",
        "testOne[Python3:Sync]",
        "testOne[Python3:AltNum]",
        "testOne[Python3:TwoAlts]",
        "testOne[Python3:TwoAltLoop]",
        "testOne[Python3:Token2]",
        "testOne[Python3:NoViableAlt]",
        "testOne[Python3:TokenAndRuleContextString]",
        "testOne[Python3:RuleRef]",
        "testOne[Python3:ExtraToken]"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 10
    },
    {
      "className": "org.antlr.v4.test.runtime.javascript.node.TestFullContextParsing",
      "failingMethods": [
        "testOne[Node:SLLSeesEOFInLLGrammar]",
        "testOne[Node:CtxSensitiveDFATwoDiffInput]",
        "testOne[Node:AmbiguityNoLoop]",
        "testOne[Node:ExprAmbiguity_1]",
        "testOne[Node:FullContextIF_THEN_ELSEParse_1]",
        "testOne[Node:AmbigYieldsCtxSensitiveDFA]",
        "testOne[Node:ExprAmbiguity_2]",
        "testOne[Node:FullContextIF_THEN_ELSEParse_6]",
        "testOne[Node:FullContextIF_THEN_ELSEParse_3]",
        "testOne[Node:LoopsSimulateTailRecursion]",
        "testOne[Node:FullContextIF_THEN_ELSEParse_2]",
        "testOne[Node:FullContextIF_THEN_ELSEParse_5]",
        "testOne[Node:FullContextIF_THEN_ELSEParse_4]",
        "testOne[Node:CtxSensitiveDFA_2]",
        "testOne[Node:CtxSensitiveDFA_1]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:3 reportAttemptingFullContext d\u003d0 (e), input\u003d\u002734abc\u0027\nline 1:0 reportContextSensitivity d\u003d0 (e), input\u003d\u002734\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:3 reportAttemptingFullContext d\u003d3 (expr_primary), input\u003d\u0027a(i)\u0027\nline 1:7 reportAmbiguity d\u003d3 (expr_primary): ambigAlts\u003d{2, 3}, input\u003d\u0027a(i)\u003c-x\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:19 reportAttemptingFullContext d\u003d1 (stat), input\u003d\u0027else\u0027\nline 1:19 reportContextSensitivity d\u003d1 (stat), input\u003d\u0027else\u0027\nline 2:27 reportAttemptingFullContext d\u003d1 (stat), input\u003d\u0027else\u0027\nline 2:36 reportAmbiguity d\u003d1 (stat): ambigAlts\u003d{1, 2}, input\u003d\u0027elsefoo}\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:19 reportAttemptingFullContext d\u003d1 (stat), input\u003d\u0027else\u0027\nline 1:19 reportContextSensitivity d\u003d1 (stat), input\u003d\u0027else\u0027\nline 2:27 reportAttemptingFullContext d\u003d1 (stat), input\u003d\u0027else\u0027\nline 2:36 reportAmbiguity d\u003d1 (stat): ambigAlts\u003d{1, 2}, input\u003d\u0027elsefoo}\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:29 reportAttemptingFullContext d\u003d1 (stat), input\u003d\u0027else\u0027\nline 1:38 reportContextSensitivity d\u003d1 (stat), input\u003d\u0027elsefooelse\u0027\nline 1:38 reportAttemptingFullContext d\u003d1 (stat), input\u003d\u0027else\u0027\nline 1:38 reportContextSensitivity d\u003d1 (stat), input\u003d\u0027else\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:29 reportAttemptingFullContext d\u003d1 (stat), input\u003d\u0027else\u0027\nline 1:38 reportAmbiguity d\u003d1 (stat): ambigAlts\u003d{1, 2}, input\u003d\u0027elsefoo}\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:19 reportAttemptingFullContext d\u003d1 (stat), input\u003d\u0027else\u0027\nline 1:19 reportContextSensitivity d\u003d1 (stat), input\u003d\u0027else\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cDecision 1:\ns0-\u0027}\u0027-\u003e:s1\u003d\u003e2\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 reportAttemptingFullContext d\u003d1 (expr), input\u003d\u0027+\u0027\nline 1:2 reportContextSensitivity d\u003d1 (expr), input\u003d\u0027+b\u0027\nline 1:3 reportAttemptingFullContext d\u003d1 (expr), input\u003d\u0027*\u0027\nline 1:5 reportAmbiguity d\u003d1 (expr): ambigAlts\u003d{1, 2}, input\u003d\u0027*c\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:1 reportAttemptingFullContext d\u003d1 (expr), input\u003d\u0027+\u0027\nline 1:2 reportContextSensitivity d\u003d1 (expr), input\u003d\u0027+b\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:5 reportAttemptingFullContext d\u003d1 (e), input\u003d\u002734abc\u0027\nline 1:5 reportContextSensitivity d\u003d1 (e), input\u003d\u002734abc\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:5 reportAttemptingFullContext d\u003d1 (e), input\u003d\u002734abc\u0027\nline 1:2 reportContextSensitivity d\u003d1 (e), input\u003d\u002734\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:5 reportAttemptingFullContext d\u003d2 (e), input\u003d\u002734abc\u0027\nline 1:2 reportContextSensitivity d\u003d2 (e), input\u003d\u002734\u0027\nline 1:14 reportAttemptingFullContext d\u003d2 (e), input\u003d\u002734abc\u0027\nline 1:14 reportContextSensitivity d\u003d2 (e), input\u003d\u002734abc\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:2 reportAttemptingFullContext d\u003d0 (prog), input\u003d\u0027a@\u0027\nline 1:2 reportAmbiguity d\u003d0 (prog): ambigAlts\u003d{1, 2}, input\u003d\u0027a@\u0027\nline 1:2 reportAttemptingFullContext d\u003d1 (expr), input\u003d\u0027a@\u0027\nline 1:2 reportContextSensitivity d\u003d1 (expr), input\u003d\u0027a@\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cline 1:0 reportAttemptingFullContext d\u003d0 (s), input\u003d\u0027abc\u0027\n\u003e but was:\u003cnull\u003e",
          "isError": false
        }
      ],
      "nbFailures": 15,
      "nbErrors": 0
    },
    {
      "className": "org.antlr.v4.test.runtime.python3.TestLeftRecursion",
      "failingMethods": [],
      "erroringMethods": [
        "testOne[Python3:Expressions_3]",
        "testOne[Python3:TernaryExpr_1]",
        "testOne[Python3:JavaExpressions_10]",
        "testOne[Python3:JavaExpressions_1]",
        "testOne[Python3:Declarations_4]",
        "testOne[Python3:Declarations_10]",
        "testOne[Python3:SemPred]",
        "testOne[Python3:MultipleAlternativesWithCommonLabel_5]",
        "testOne[Python3:JavaExpressions_9]",
        "testOne[Python3:AmbigLR_3]",
        "testOne[Python3:DirectCallToLeftRecursiveRule_3]",
        "testOne[Python3:TernaryExprExplicitAssociativity_6]",
        "testOne[Python3:LabelsOnOpSubrule_3]",
        "testOne[Python3:JavaExpressions_2]",
        "testOne[Python3:JavaExpressions_11]",
        "testOne[Python3:Declarations_5]",
        "testOne[Python3:Expressions_4]",
        "testOne[Python3:AmbigLR_2]",
        "testOne[Python3:ReturnValueAndActionsList2_4]",
        "testOne[Python3:TernaryExprExplicitAssociativity_5]",
        "testOne[Python3:LabelsOnOpSubrule_2]",
        "testOne[Python3:TernaryExpr_9]",
        "testOne[Python3:MultipleActions_3]",
        "testOne[Python3:Expressions_1]",
        "testOne[Python3:JavaExpressions_12]",
        "testOne[Python3:Declarations_2]",
        "testOne[Python3:JavaExpressions_7]",
        "testOne[Python3:ReturnValueAndActionsList1_2]",
        "testOne[Python3:AmbigLR_1]",
        "testOne[Python3:TernaryExprExplicitAssociativity_4]",
        "testOne[Python3:LabelsOnOpSubrule_1]",
        "testOne[Python3:WhitespaceInfluence_1]",
        "testOne[Python3:ReturnValueAndActions_2]",
        "testOne[Python3:TernaryExpr_8]",
        "testOne[Python3:MultipleActions_2]",
        "testOne[Python3:Expressions_2]",
        "testOne[Python3:TernaryExpr_6]",
        "testOne[Python3:Declarations_3]",
        "testOne[Python3:Simple_3]",
        "testOne[Python3:JavaExpressions_8]",
        "testOne[Python3:ReturnValueAndActionsList1_1]",
        "testOne[Python3:TernaryExprExplicitAssociativity_3]",
        "testOne[Python3:WhitespaceInfluence_2]",
        "testOne[Python3:ReturnValueAndActions_1]",
        "testOne[Python3:TernaryExpr_7]",
        "testOne[Python3:SemPredFailOption]",
        "testOne[Python3:TernaryExpr_5]",
        "testOne[Python3:MultipleAlternativesWithCommonLabel_1]",
        "testOne[Python3:JavaExpressions_5]",
        "testOne[Python3:Declarations_8]",
        "testOne[Python3:Simple_2]",
        "testOne[Python3:PrefixAndOtherAlt_1]",
        "testOne[Python3:Expressions_7]",
        "testOne[Python3:MultipleActions_1]",
        "testOne[Python3:ReturnValueAndActionsAndLabels_1]",
        "testOne[Python3:ReturnValueAndActionsList2_1]",
        "testOne[Python3:TernaryExprExplicitAssociativity_2]",
        "testOne[Python3:ReturnValueAndActionsList1_4]",
        "testOne[Python3:PrefixOpWithActionAndLabel_3]",
        "testOne[Python3:ReturnValueAndActions_4]",
        "testOne[Python3:TernaryExpr_4]",
        "testOne[Python3:Declarations_9]",
        "testOne[Python3:Simple_1]",
        "testOne[Python3:Declarations_1]",
        "testOne[Python3:PrefixAndOtherAlt_2]",
        "testOne[Python3:JavaExpressions_6]",
        "testOne[Python3:MultipleAlternativesWithCommonLabel_2]",
        "testOne[Python3:ReturnValueAndActionsAndLabels_2]",
        "testOne[Python3:ReturnValueAndActionsList1_3]",
        "testOne[Python3:TernaryExprExplicitAssociativity_1]",
        "testOne[Python3:ReturnValueAndActions_3]",
        "testOne[Python3:MultipleActionsPredicatesOptions_3]",
        "testOne[Python3:PrefixOpWithActionAndLabel_2]",
        "testOne[Python3:TernaryExprExplicitAssociativity_9]",
        "testOne[Python3:TernaryExpr_3]",
        "testOne[Python3:JavaExpressions_3]",
        "testOne[Python3:Declarations_6]",
        "testOne[Python3:PrecedenceFilterConsidersContext]",
        "testOne[Python3:DirectCallToLeftRecursiveRule_1]",
        "testOne[Python3:MultipleAlternativesWithCommonLabel_3]",
        "testOne[Python3:Expressions_5]",
        "testOne[Python3:ReturnValueAndActionsAndLabels_3]",
        "testOne[Python3:ReturnValueAndActionsList2_3]",
        "testOne[Python3:TernaryExprExplicitAssociativity_8]",
        "testOne[Python3:MultipleActionsPredicatesOptions_2]",
        "testOne[Python3:PrefixOpWithActionAndLabel_1]",
        "testOne[Python3:AmbigLR_5]",
        "testOne[Python3:Declarations_7]",
        "testOne[Python3:JavaExpressions_4]",
        "testOne[Python3:TernaryExpr_2]",
        "testOne[Python3:Expressions_6]",
        "testOne[Python3:ReturnValueAndActionsAndLabels_4]",
        "testOne[Python3:MultipleAlternativesWithCommonLabel_4]",
        "testOne[Python3:AmbigLR_4]",
        "testOne[Python3:ReturnValueAndActionsList2_2]",
        "testOne[Python3:DirectCallToLeftRecursiveRule_2]",
        "testOne[Python3:TernaryExprExplicitAssociativity_7]",
        "testOne[Python3:MultipleActionsPredicatesOptions_1]"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        },
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Could not locate python3.5",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 98
    },
    {
      "className": "org.antlr.v4.test.runtime.go.TestLexerErrors",
      "failingMethods": [],
      "erroringMethods": [
        "org.antlr.v4.test.runtime.go.TestLexerErrors"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Missing system property:antlr-go",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.antlr.v4.test.runtime.go.TestPerformance",
      "failingMethods": [],
      "erroringMethods": [
        "org.antlr.v4.test.runtime.go.TestPerformance"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Missing system property:antlr-go",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.antlr.v4.test.runtime.go.TestCompositeLexers",
      "failingMethods": [],
      "erroringMethods": [
        "org.antlr.v4.test.runtime.go.TestCompositeLexers"
      ],
      "failures": [
        {
          "failureName": "java.lang.RuntimeException",
          "failureDetail": "Missing system property:antlr-go",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ]
}