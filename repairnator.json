{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 1,
  "repo": "x-stream/xstream",
  "failingModule": "/root/workspace/x-stream/xstream/347982311/xstream",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 14,
  "error-types": [
    "com.thoughtworks.xstream.security.ForbiddenClassException",
    "junit.framework.ComparisonFailure"
  ],
  "totalNumberRunningTests": 1861,
  "failing-test-cases": [
    {
      "className": "com.thoughtworks.acceptance.CustomMapperTest",
      "failingMethods": [
        "com.thoughtworks.acceptance.CustomMapperTest#testStripsPackagesUponDeserialization"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...Software\u003e   \u003cvendor\u003ems\u003c/vendor\u003e   \u003cname\u003eword\u003c/name\u003e \u003c/...\u003e but was:\u003c...com.thoughtworks.acceptance.objects.Software\u003e   \u003cvendor\u003ems\u003c/vendor\u003e   \u003cname\u003eword\u003c/name\u003e \u003c/com.thoughtworks.acceptance.objects....\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.thoughtworks.acceptance.CglibCompatibilityTest",
      "failingMethods": [
        "com.thoughtworks.acceptance.CglibCompatibilityTest#testSupportsInterceptedClassBasedProxies",
        "com.thoughtworks.acceptance.CglibCompatibilityTest#testSupportsClassBasedProxiesWithFactory",
        "com.thoughtworks.acceptance.CglibCompatibilityTest#testSupportProxiesWithMultipleCallbackSetToNull",
        "com.thoughtworks.acceptance.CglibCompatibilityTest#testSupportsProxiesWithMultipleInterfaces",
        "com.thoughtworks.acceptance.CglibCompatibilityTest#testSupportForClassBasedProxyWithAdditionalInterface",
        "com.thoughtworks.acceptance.CglibCompatibilityTest#testSupportsSerialVersionUID",
        "com.thoughtworks.acceptance.CglibCompatibilityTest#testSupportsClassBasedProxiesWithoutFactory"
      ],
      "erroringMethods": [
        "com.thoughtworks.acceptance.CglibCompatibilityTest#testSupportProxiesUsingFactoryWithMultipleCallbacks"
      ],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...CGLIB-enhanced-proxy\u003e   \u003ctype\u003ejava.util.HashMap\u003c/type\u003e   \u003cinterfaces/\u003e   \u003chasFactory\u003etrue\u003c/hasFactory\u003e   \u003ccom.thoughtworks.acceptance.CglibCompatibilityTest_-DelegatingHandler\u003e     \u003cdelegate class\u003d\"map\"\u003e       \u003centry\u003e         \u003cstring\u003eURL\u003c/string\u003e         \u003curl\u003ehttp://xstream.codehaus.org\u003c/url\u003e       \u003c/entry\u003e     \u003c/delegate\u003e   \u003c/com.thoughtworks.acceptance.CglibCompatibilityTest_-DelegatingHandler\u003e \u003c/CGLIB-enhanced-proxy...\u003e but was:\u003c..._-java.util.HashMap_-_-EnhancerByCGLIB_-_-fcf99a8c\u003e   \u003ctype\u003ejava.util.HashMap\u003c/type\u003e   \u003cinterfaces/\u003e   \u003chasFactory\u003etrue\u003c/hasFactory\u003e   \u003ccom.thoughtworks.acceptance.CglibCompatibilityTest_-DelegatingHandler\u003e     \u003cdelegate class\u003d\"map\"\u003e       \u003centry\u003e         \u003cstring\u003eURL\u003c/string\u003e         \u003curl\u003ehttp://xstream.codehaus.org\u003c/url\u003e       \u003c/entry\u003e     \u003c/delegate\u003e   \u003c/com.thoughtworks.acceptance.CglibCompatibilityTest_-DelegatingHandler\u003e \u003c/_-java.util.HashMap_-_-EnhancerByCGLIB_-_-fcf99a8c...\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...CGLIB-enhanced-proxy\u003e   \u003ctype\u003ejava.util.HashMap\u003c/type\u003e   \u003cinterfaces/\u003e   \u003chasFactory\u003efalse\u003c/hasFactory\u003e   \u003ccom.thoughtworks.acceptance.CglibCompatibilityTest_-DelegatingHandler\u003e     \u003cdelegate class\u003d\"map\"\u003e       \u003centry\u003e         \u003cstring\u003eURL\u003c/string\u003e         \u003curl\u003ehttp://xstream.codehaus.org\u003c/url\u003e       \u003c/entry\u003e     \u003c/delegate\u003e   \u003c/com.thoughtworks.acceptance.CglibCompatibilityTest_-DelegatingHandler\u003e \u003c/CGLIB-enhanced-proxy...\u003e but was:\u003c..._-java.util.HashMap_-_-EnhancerByCGLIB_-_-61c35885\u003e   \u003ctype\u003ejava.util.HashMap\u003c/type\u003e   \u003cinterfaces/\u003e   \u003chasFactory\u003efalse\u003c/hasFactory\u003e   \u003ccom.thoughtworks.acceptance.CglibCompatibilityTest_-DelegatingHandler\u003e     \u003cdelegate class\u003d\"map\"\u003e       \u003centry\u003e         \u003cstring\u003eURL\u003c/string\u003e         \u003curl\u003ehttp://xstream.codehaus.org\u003c/url\u003e       \u003c/entry\u003e     \u003c/delegate\u003e   \u003c/com.thoughtworks.acceptance.CglibCompatibilityTest_-DelegatingHandler\u003e \u003c/_-java.util.HashMap_-_-EnhancerByCGLIB_-_-61c35885...\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...CGLIB-enhanced-proxy\u003e   \u003ctype\u003ejava.util.HashMap\u003c/type\u003e   \u003cinterfaces\u003e     \u003cjava-class\u003ejava.lang.Runnable\u003c/java-class\u003e   \u003c/interfaces\u003e   \u003chasFactory\u003etrue\u003c/hasFactory\u003e   \u003cnet.sf.cglib.proxy.NoOp_-1/\u003e \u003c/CGLIB-enhanced-proxy...\u003e but was:\u003c..._-java.util.HashMap_-_-EnhancerByCGLIB_-_-c9de9cc1\u003e   \u003ctype\u003ejava.util.HashMap\u003c/type\u003e   \u003cinterfaces\u003e     \u003cjava-class\u003ejava.lang.Runnable\u003c/java-class\u003e   \u003c/interfaces\u003e   \u003chasFactory\u003etrue\u003c/hasFactory\u003e   \u003cnet.sf.cglib.proxy.NoOp_-1/\u003e \u003c/_-java.util.HashMap_-_-EnhancerByCGLIB_-_-c9de9cc1...\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...CGLIB-enhanced-proxy\u003e   \u003ctype\u003ejava.lang.Object\u003c/type\u003e   \u003cinterfaces\u003e     \u003cjava-class\u003ejava.util.Map\u003c/java-class\u003e     \u003cjava-class\u003ejava.lang.Runnable\u003c/java-class\u003e   \u003c/interfaces\u003e   \u003chasFactory\u003etrue\u003c/hasFactory\u003e   \u003cnet.sf.cglib.proxy.NoOp_-1/\u003e \u003c/CGLIB-enhanced-proxy...\u003e but was:\u003c..._-java.util.Map_-_-EnhancerByCGLIB_-_-d48edf6d\u003e   \u003ctype\u003ejava.lang.Object\u003c/type\u003e   \u003cinterfaces\u003e     \u003cjava-class\u003ejava.util.Map\u003c/java-class\u003e     \u003cjava-class\u003ejava.lang.Runnable\u003c/java-class\u003e   \u003c/interfaces\u003e   \u003chasFactory\u003etrue\u003c/hasFactory\u003e   \u003cnet.sf.cglib.proxy.NoOp_-1/\u003e \u003c/_-java.util.Map_-_-EnhancerByCGLIB_-_-d48edf6d...\u003e",
          "isError": false
        },
        {
          "failureName": "com.thoughtworks.xstream.security.ForbiddenClassException",
          "failureDetail": "$java.lang.Runnable$$EnhancerByCGLIB$$5d327ed1",
          "isError": true
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...CGLIB-enhanced-proxy\u003e   \u003ctype\u003ejava.util.HashMap\u003c/type\u003e   \u003cinterfaces/\u003e   \u003chasFactory\u003etrue\u003c/hasFactory\u003e   \u003cnull/\u003e \u003c/CGLIB-enhanced-proxy...\u003e but was:\u003c..._-java.util.HashMap_-_-EnhancerByCGLIB_-_-b79d94a8\u003e   \u003ctype\u003ejava.util.HashMap\u003c/type\u003e   \u003cinterfaces/\u003e   \u003chasFactory\u003etrue\u003c/hasFactory\u003e   \u003cnull/\u003e \u003c/_-java.util.HashMap_-_-EnhancerByCGLIB_-_-b79d94a8...\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...CGLIB-enhanced-proxy\u003e   \u003ctype\u003ejava.lang.Object\u003c/type\u003e   \u003cinterfaces\u003e     \u003cjava-class\u003ejava.lang.Runnable\u003c/java-class\u003e   \u003c/interfaces\u003e   \u003chasFactory\u003etrue\u003c/hasFactory\u003e   \u003cnet.sf.cglib.proxy.NoOp_-1/\u003e   \u003cserialVersionUID\u003e20060804\u003c/serialVersionUID\u003e \u003c/CGLIB-enhanced-proxy...\u003e but was:\u003c..._-java.lang.Runnable_-_-EnhancerByCGLIB_-_-b7823567\u003e   \u003ctype\u003ejava.lang.Object\u003c/type\u003e   \u003cinterfaces\u003e     \u003cjava-class\u003ejava.lang.Runnable\u003c/java-class\u003e   \u003c/interfaces\u003e   \u003chasFactory\u003etrue\u003c/hasFactory\u003e   \u003cnet.sf.cglib.proxy.NoOp_-1/\u003e   \u003cserialVersionUID\u003e20060804\u003c/serialVersionUID\u003e \u003c/_-java.lang.Runnable_-_-EnhancerByCGLIB_-_-b7823567...\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...CGLIB-enhanced-proxy\u003e   \u003ctype\u003ejava.util.HashMap\u003c/type\u003e   \u003cinterfaces/\u003e   \u003chasFactory\u003etrue\u003c/hasFactory\u003e   \u003ccom.thoughtworks.acceptance.CglibCompatibilityTest_-InterceptingHandler/\u003e   \u003cinstance serialization\u003d\"custom\"\u003e     \u003cunserializable-parents/\u003e     \u003cmap\u003e       \u003cdefault\u003e         \u003cloadFactor\u003e0.75\u003c/loadFactor\u003e         \u003cthreshold\u003e12\u003c/threshold\u003e       \u003c/default\u003e       \u003cint\u003e16\u003c/int\u003e       \u003cint\u003e1\u003c/int\u003e       \u003cstring\u003eURL\u003c/string\u003e       \u003curl\u003ehttp://xstream.codehaus.org\u003c/url\u003e     \u003c/map\u003e   \u003c/instance\u003e \u003c/CGLIB-enhanced-proxy...\u003e but was:\u003c..._-java.util.HashMap_-_-EnhancerByCGLIB_-_-c403fae4\u003e   \u003ctype\u003ejava.util.HashMap\u003c/type\u003e   \u003cinterfaces/\u003e   \u003chasFactory\u003etrue\u003c/hasFactory\u003e   \u003ccom.thoughtworks.acceptance.CglibCompatibilityTest_-InterceptingHandler/\u003e   \u003cinstance serialization\u003d\"custom\"\u003e     \u003cunserializable-parents/\u003e     \u003cmap\u003e       \u003cdefault\u003e         \u003cloadFactor\u003e0.75\u003c/loadFactor\u003e         \u003cthreshold\u003e12\u003c/threshold\u003e       \u003c/default\u003e       \u003cint\u003e16\u003c/int\u003e       \u003cint\u003e1\u003c/int\u003e       \u003cstring\u003eURL\u003c/string\u003e       \u003curl\u003ehttp://xstream.codehaus.org\u003c/url\u003e     \u003c/map\u003e   \u003c/instance\u003e \u003c/_-java.util.HashMap_-_-EnhancerByCGLIB_-_-c403fae4...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 7,
      "nbErrors": 1
    },
    {
      "className": "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverterTest",
      "failingMethods": [
        "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverterTest#testWithComplexValueField",
        "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverterTest#testWithValueInConvertedClass",
        "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverterTest#testWithNullValueDeserializedAsEmptyString",
        "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverterTest#testWithValueInSuperclass",
        "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverterTest#testWillDistinguishBetweenDifferentTypes",
        "com.thoughtworks.xstream.converters.extended.ToAttributedValueConverterTest#testWithoutValueField"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...x aStr\u003d\"xXx\" anInt\u003d\"42\"\u003e\u003cyField\u003einner\u003c/yField\u003e\u003c/x...\u003e but was:\u003c...com.thoughtworks.acceptance.someobjects.X aStr\u003d\"xXx\" anInt\u003d\"42\"\u003e\u003cyField\u003einner\u003c/yField\u003e\u003c/com.thoughtworks.acceptance.someobjects.X...\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...software\u003eXStream\u003c/s...\u003e but was:\u003c...com.thoughtworks.acceptance.objects.Software\u003eXStream\u003c/com.thoughtworks.acceptance.objects.S...\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...open-source vendor\u003d\"Codehaus\" license\u003d\"BSD\"\u003eXStream\u003c/open-sourc...\u003e but was:\u003c...com.thoughtworks.acceptance.objects.OpenSourceSoftware vendor\u003d\"Codehaus\" license\u003d\"BSD\"\u003eXStream\u003c/com.thoughtworks.acceptance.objects.OpenSourceSoftwar...\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...software-array\u003e   \u003csoftware vendor\u003d\"Microsoft\"\u003eWindows\u003c/software\u003e   \u003copen-source vendor\u003d\"Codehaus\" name\u003d\"XStream\"\u003eBSD\u003c/open-source\u003e \u003c/software-array...\u003e but was:\u003c...[Lcom.thoughtworks.acceptance.objects.Software;\u003e   \u003csoftware vendor\u003d\"Microsoft\"\u003eWindows\u003c/software\u003e   \u003copen-source vendor\u003d\"Codehaus\" name\u003d\"XStream\"\u003eBSD\u003c/open-source\u003e \u003c/[Lcom.thoughtworks.acceptance.objects.Software;...\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...s...\u003e but was:\u003c...com.thoughtworks.acceptance.objects.S...\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...s...\u003e but was:\u003c...com.thoughtworks.acceptance.objects.S...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 6,
      "nbErrors": 0
    }
  ]
}