{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "WriteThemFirst/approvals-java",
  "bugCommit": "https://github.com/WriteThemFirst/approvals-java/compare/d9558a787928...e4804aaf2578",
  "failingModule": "/root/workspace/WriteThemFirst/approvals-java/354039788",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 4,
  "error-types": [
    "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent",
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 37,
  "failing-test-cases": [
    {
      "className": "com.github.writethemfirst.approvals.ApprovalsFolderTest",
      "failingMethods": [
        "com.github.writethemfirst.approvals.ApprovalsFolderTest#shouldCreateAllReceivedFiles",
        "com.github.writethemfirst.approvals.ApprovalsFolderTest#shouldCreateEmptyApprovedFiles",
        "com.github.writethemfirst.approvals.ApprovalsFolderTest#shouldFireReporterOnEachMismatch",
        "com.github.writethemfirst.approvals.ApprovalsFolderTest#shouldRemoveMatchedReceivedFiles"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent",
          "failureDetail": "\nArgument(s) are different! Wanted:\nreporter.mismatch(\n    src\\test\\resources\\com\\github\\writethemfirst\\approvals\\ApprovalsFolderTest/shouldFireReporterOnEachMismatch.approved/sample.xml,\n    src\\test\\resources\\com\\github\\writethemfirst\\approvals\\ApprovalsFolderTest/shouldFireReporterOnEachMismatch.received/sample.xml\n);\n-\u003e at com.github.writethemfirst.approvals.ApprovalsFolderTest.shouldFireReporterOnEachMismatch(ApprovalsFolderTest.java:90)\nActual invocation has different arguments:\nreporter.mismatch(\n    src/test/resources/com/github/writethemfirst/approvals/ApprovalsFolderTest/shouldFireReporterOnEachMismatch.approved/sample2.xml,\n    src/test/resources/com/github/writethemfirst/approvals/ApprovalsFolderTest/shouldFireReporterOnEachMismatch.received/sample2.xml\n);\n-\u003e at com.github.writethemfirst.approvals.Approvals.lambda$verifyAgainstMasterFolder$3(Approvals.java:193)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpecting path:\n  \u003csrc\\test\\resources\\com\\github\\writethemfirst\\approvals\\ApprovalsFolderTest/shouldRemoveMatchedReceivedFiles.received/sample.xml\u003e\nnot to exist",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpecting path:\n  \u003csrc\\test\\resources\\com\\github\\writethemfirst\\approvals\\ApprovalsFolderTest/shouldCreateAllReceivedFiles.received/sample.xml\u003e\nto exist (symbolic links were followed).",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpecting path:\n  \u003csrc\\test\\resources\\com\\github\\writethemfirst\\approvals\\ApprovalsFolderTest/shouldCreateEmptyApprovedFiles.approved/sample.xml\u003e\nto exist (symbolic links were followed).",
          "isError": false
        }
      ],
      "nbFailures": 4,
      "nbErrors": 0
    }
  ]
}