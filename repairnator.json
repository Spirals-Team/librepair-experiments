{
  "bugType": "only_fail",
  "hostname": "spirals-repairnator",
  "repo": "nosan/embedded-cassandra",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 13,
      "ComputeTestDir": 0,
      "BuildProject": 100,
      "InitRepoToPush": 1,
      "ComputeSourceDir": 0,
      "AstorJMut": 253,
      "CloneRepository": 4,
      "CheckoutPatchedBuild": 0,
      "Nopol": 13507,
      "NPEFix": 0,
      "TestProject": 64,
      "GatherTestInformation": 0,
      "CommitPatch": 2
    },
    "FailureNames": [
      "java.io.IOException",
      "java.lang.AssertionError"
    ],
    "NbFailingTests": 3,
    "NbErroringTests": 7,
    "NbSkippingTests": 0,
    "NbRunningTests": 40,
    "BugCommitUrl": "http://github.com/nosan/embedded-cassandra/commit/cc34f68f54626ed21712a45a0ea856921af6050d",
    "ReproductionDate": "Jul 7, 2018 11:36:03 AM",
    "BuggyBuildId": 401240333,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/nosan/embedded-cassandra/builds/401240333",
    "BuggyBuildDate": "Jul 7, 2018 11:35:56 AM",
    "BugCommit": "cc34f68f54626ed21712a45a0ea856921af6050d",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 31,
    "NbFileApp": 30,
    "NbFileTests": 23,
    "NbCPU": 4,
    "FreeMemory": 466252360,
    "TotalMemory": 1414004736,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 214915736,
      "ComputeClasspath": 158419240,
      "ComputeTestDir": 153665064,
      "BuildProject": 203231416,
      "InitRepoToPush": 160401632,
      "ComputeSourceDir": 416223272,
      "AstorJMut": 657133800,
      "CloneRepository": 217293048,
      "CheckoutPatchedBuild": 466252360,
      "Nopol": 334387264,
      "NPEFix": 334387264,
      "TestProject": 193315928,
      "GatherTestInformation": 188468128,
      "CommitPatch": 469649416
    },
    "NbSucceedingTests": 30
  },
  "failing-test-cases": [
    {
      "className": "com.github.nosan.embedded.cassandra.process.CassandraStarterTests",
      "failingMethods": [
        "invalidConfig",
        "timeout"
      ],
      "erroringMethods": [
        "restart",
        "useNativeTransport",
        "shouldUseRpcTransport",
        "multiplyInstances",
        "shouldWorkWithDisableTransport"
      ],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of java.io.IOException and exception with message a string containing \"Missing required directive CommitLogSync\")\n     but: exception with message a string containing \"Missing required directive CommitLogSync\" message was \"Could not start a process: \u003cEOF\u003e\"\nStacktrace was: java.io.IOException: Could not start a process: \u003cEOF\u003e\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:113)\n at de.flapdoodle.embed.process.runtime.AbstractProcess.\u003cinit\u003e(AbstractProcess.java:116)\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.\u003cinit\u003e(CassandraProcess.java:64)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)\n at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.start(CassandraStarterTests.java:128)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.start(CassandraStarterTests.java:119)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.invalidConfig(CassandraStarterTests.java:85)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)\n",
          "isError": false
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process: \u003cEOF\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of java.io.IOException and exception with message a string containing \"Could not start a process. Please increase your startup timeout.\")\n     but: exception with message a string containing \"Could not start a process. Please increase your startup timeout.\" message was \"Could not start a process: \u003cEOF\u003e\"\nStacktrace was: java.io.IOException: Could not start a process: \u003cEOF\u003e\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:113)\n at de.flapdoodle.embed.process.runtime.AbstractProcess.\u003cinit\u003e(AbstractProcess.java:116)\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.\u003cinit\u003e(CassandraProcess.java:64)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)\n at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.start(CassandraStarterTests.java:128)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.start(CassandraStarterTests.java:119)\n at com.github.nosan.embedded.cassandra.process.CassandraStarterTests.timeout(CassandraStarterTests.java:95)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)\n",
          "isError": false
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process: \u003cEOF\u003e",
          "isError": true
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process: \u003cEOF\u003e",
          "isError": true
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process: \u003cEOF\u003e",
          "isError": true
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process: \u003cEOF\u003e",
          "isError": true
        }
      ],
      "nbFailures": 2,
      "nbErrors": 5
    },
    {
      "className": "com.github.nosan.embedded.cassandra.CassandraTests",
      "failingMethods": [
        "impossibleToStartTwice"
      ],
      "erroringMethods": [
        "successfullyStarted",
        "restart"
      ],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of java.io.IOException and exception with message a string containing \"Cassandra has already been started\")\n     but: exception with message a string containing \"Cassandra has already been started\" message was \"Could not start a process: \u003cEOF\u003e\"\nStacktrace was: java.io.IOException: Could not start a process: \u003cEOF\u003e\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.onAfterProcessStart(CassandraProcess.java:113)\n at de.flapdoodle.embed.process.runtime.AbstractProcess.\u003cinit\u003e(AbstractProcess.java:116)\n at com.github.nosan.embedded.cassandra.process.CassandraProcess.\u003cinit\u003e(CassandraProcess.java:64)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:49)\n at com.github.nosan.embedded.cassandra.process.CassandraExecutable.start(CassandraExecutable.java:37)\n at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108)\n at com.github.nosan.embedded.cassandra.Cassandra.start(Cassandra.java:110)\n at com.github.nosan.embedded.cassandra.CassandraTests.start(CassandraTests.java:73)\n at com.github.nosan.embedded.cassandra.CassandraTests.impossibleToStartTwice(CassandraTests.java:59)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)\n",
          "isError": false
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process: \u003cEOF\u003e",
          "isError": true
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Could not start a process: \u003cEOF\u003e",
          "isError": true
        }
      ],
      "nbFailures": 1,
      "nbErrors": 2
    }
  ],
  "failingModule": "/root/workspace/nosan/embedded-cassandra/401240333/embedded-cassandra",
  "bugCommit": "https://github.com/nosan/embedded-cassandra/compare/5cb651575f88...cc34f68f5462"
}