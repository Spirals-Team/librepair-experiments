{
  "bugType": "only_fail",
  "hostname": "spirals-repairnator",
  "repo": "salesforce/Argus",
  "metrics": {
    "FailureNames": [
      "java.lang.NoClassDefFoundError"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 3,
      "ComputeClasspath": 9,
      "ComputeTestDir": 0,
      "BuildProject": 172,
      "InitRepoToPush": 3,
      "ComputeSourceDir": 1,
      "ComputeModules": 0,
      "AstorJMut": 6,
      "CloneRepository": 14,
      "CheckoutPatchedBuild": 0,
      "NopolAllTests": 40,
      "NPEFix": 0,
      "TestProject": 194,
      "GatherTestInformation": 0,
      "CommitPatch": 7
    },
    "NbFailingTests": 0,
    "NbErroringTests": 163,
    "NbSkippingTests": 4,
    "NbRunningTests": 690,
    "ReproductionDate": "Aug 30, 2018 11:43:08 AM",
    "BuggyBuildId": 422453373,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/salesforce/Argus/builds/422453373",
    "BuggyBuildDate": "Aug 30, 2018 11:12:26 AM",
    "BugCommit": "f31a1c66a5209e7a81715d65df11ec1f5f58a1c7",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 191,
    "NbFileApp": 346,
    "NbFileTests": 115,
    "NbCPU": 4,
    "FreeMemory": 471186432,
    "TotalMemory": 815267840,
    "AngelicValuesByTest": {
      "com/salesforce/dva/argus/service/schema/AbstractSchemaServiceTest:com/salesforce/dva/argus/system/SystemConfiguratorTest:com/salesforce/dva/argus/service/NotifierTest:com/salesforce/dva/argus/service/WardenServiceTest:com/salesforce/dva/argus/util/AlertUtilsTest:com/salesforce/dva/argus/service/schema/ElasticSearchSchemaServiceTest:com/salesforce/dva/argus/service/ManagementServiceTest:com/salesforce/dva/argus/service/MQServiceTest:com/salesforce/dva/argus/service/schema/DefaultDiscoveryServiceTest:com/salesforce/dva/argus/service/tsdb/AbstractTSDBServiceTest:com/salesforce/dva/argus/service/DefaultAlertServiceTest:com/salesforce/dva/argus/service/OAuthServiceTest:com/salesforce/dva/argus/service/GlobalInterlockServiceTest:com/salesforce/dva/argus/service/SchedulingServiceTest:com/salesforce/dva/argus/service/MonitorServiceTest:com/salesforce/dva/argus/service/DashboardServiceTest:com/salesforce/dva/argus/service/AlertServiceTest:com/salesforce/dva/argus/service/CallbackServiceTest:com/salesforce/dva/argus/service/tsdb/MetricFederationTest:com/salesforce/dva/argus/service/ChartServiceTest:com/salesforce/dva/argus/service/schema/CachedDiscoveryServiceTest:com/salesforce/dva/argus/service/UserServiceTest:com/salesforce/dva/argus/service/AuditServiceTest:com/salesforce/dva/argus/service/NamespaceServiceTest:": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 119501240,
      "ComputeClasspath": 141970712,
      "ComputeTestDir": 132876088,
      "BuildProject": 110548144,
      "InitRepoToPush": 144193776,
      "ComputeSourceDir": 465422048,
      "ComputeModules": 460497960,
      "AstorJMut": 500805232,
      "CloneRepository": 91829016,
      "CheckoutPatchedBuild": 471186432,
      "NopolAllTests": 228890648,
      "NPEFix": 228890648,
      "TestProject": 98749472,
      "GatherTestInformation": 144818072,
      "CommitPatch": 471186432
    },
    "NbSucceedingTests": 527,
    "BugCommitUrl": "http://github.com/salesforce/Argus/commit/f31a1c66a5209e7a81715d65df11ec1f5f58a1c7"
  },
  "failing-test-cases": [
    {
      "className": "com.salesforce.dva.argus.service.schema.AbstractSchemaServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testPutNothingCached",
        "testNumHoursUntilNextFlushBloomFilter",
        "testPutEverythingCached",
        "testPutPartialCached"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "com.salesforce.dva.argus.system.SystemConfiguratorTest",
      "failingMethods": [],
      "erroringMethods": [
        "testLifecycle"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.salesforce.dva.argus.service.NotifierTest",
      "failingMethods": [],
      "erroringMethods": [
        "testTemplateNaming",
        "testDBNotifier",
        "testUpdatingTriggerName",
        "testAbsoluteTimeStampsInExpression"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "com.salesforce.dva.argus.service.WardenServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testDisableWarden",
        "testSuspendUser",
        "testModifyPolicyCounterEnablesAlert",
        "testSuspendAdminUser",
        "testServiceIsSingleton",
        "testAssertSubsystemUsePermitted_AdminUser",
        "testEnableWarden",
        "testAssertSubsystemUsePermitted_ExpiredSuspension",
        "testUpdatePolicyCounterEnablesAlert",
        "testWardenDashboard",
        "testAssertSubsystemUsePermitted_NonIndefiniteSuspension",
        "testSubSystemSuspensionLevels",
        "testAssertSubsystemUsePermitted_NoSuspension",
        "testWardenAlertUsesUpdatedPolicyLimitForUser"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 14
    },
    {
      "className": "com.salesforce.dva.argus.util.AlertUtilsTest",
      "failingMethods": [],
      "erroringMethods": [
        "isScopePresentInWhiteListTest",
        "testAbsoluteTimeStampsInExpression"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "com.salesforce.dva.argus.service.schema.ElasticSearchSchemaServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testUpsertWhenSomeDocsExistShouldUpdateMTSFieldForExistingDocs",
        "testGetUniqueUsingScopeSchemaIndex",
        "testUpsertWhenAllDocsExistShouldUpdateMTSFieldForAllDocs",
        "testGetUniqueUsingMetricTagvRegexSchemaIndex",
        "testGetUniqueUsingMetricNamespaceRegexSchemaIndex",
        "testGetUniqueUsingScopeAndMetricSchemaIndex",
        "testUpsertWhenAllNewDocsShouldNotUpdateMTSField",
        "testPutUpdateUsingScopeAndMetricSchemaIndex",
        "testPutCreateUsingScopeAndMetricSchemaIndex"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 9
    },
    {
      "className": "com.salesforce.dva.argus.service.ManagementServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testPrivilegeGrant"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.salesforce.dva.argus.service.MQServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testServiceIsSingleton",
        "testBulkPutAndGetMessages",
        "testPutAndBulkGetMessagesMultiThredaing",
        "testPutAndBulkGetMessages"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "com.salesforce.dva.argus.service.schema.DefaultDiscoveryServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testWildcardQueriesNoMatch",
        "testWildcardQueriesMatchExceedingLimit",
        "testWildcardQueriesMatchMultipleTags1",
        "testWildcardQueriesMatchWithDownsampling",
        "testWildcardQueriesMatchMultipleTags",
        "testNonWildcardQuery",
        "testWildcardQueriesMatchWithinLimit"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 7
    },
    {
      "className": "com.salesforce.dva.argus.service.tsdb.AbstractTSDBServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCyclingIterator"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.salesforce.dva.argus.service.DefaultAlertServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGetTriggerFiredDatapointTimeWhenMissingTimeStamps5",
        "testGetTriggerFiredDatapointTimeWhenOneDatapointAndInertiaOne",
        "testGetTriggerFiredDatapointTimeWhenMissingTimeStamps",
        "testGetTriggerFiredDatapointTimeWhenMissingTimeStamps4",
        "testExecuteScheduledAlerts_ForOneTimeSeries",
        "testGetTriggerFiredDatapointTimeWhenMissingTimeStampsReturnNull",
        "testExecuteScheduledAlerts_Scenario1",
        "testGetTriggerFiredDatapointTimeWhenMissingTimeStamps3",
        "testGetTriggerFiredDatapointTimeWhenMissingTimeStamps2",
        "testExecuteScheduledAlerts_ForMoreThanOneTimeSeries",
        "testExecuteScheduledAlerts_OnCooldown",
        "testExecuteScheduledAlerts_ForOneTimeSeriesMultipleTriggers",
        "testGetTriggerFiredDatapointTimeWhenOneDatapointAndZeroInertia",
        "testExecuteScheduledAlerts_AlertWithMultipleMetricsNotificationSentForEach",
        "testGetTriggerFiredDatapointTimeWehnNoDatapoints",
        "testExecuteScheduledAlerts_ClearNotification",
        "testGetTriggerFiredDatapointTime"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 17
    },
    {
      "className": "com.salesforce.dva.argus.service.OAuthServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAcceptOauthModifiedParams",
        "testCreateAuthorizationCode",
        "testAcceptOauthInvalidParams",
        "testAcceptOauth",
        "CreateAuthorizationCodeWithMissingArguments"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "com.salesforce.dva.argus.service.GlobalInterlockServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testObtainRefreshLock",
        "testLockExclusivity",
        "testObtainOnExpiredScheduleLock",
        "testObtainReleaseLock",
        "testReleaseNonexistentScheduleLock"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "com.salesforce.dva.argus.service.SchedulingServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAlertSchedulingWithGlobalInterlock"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "org/apache/kafka/common/protocol/SecurityProtocol",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.salesforce.dva.argus.service.MonitorServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testServiceIsSingleton",
        "test_getCounterFromMetricName",
        "testAlertsCreatedOnStartMonitoring",
        "test_MonitoringDashboardNotNull",
        "testConcurrentUpdates",
        "testEnableDisableMonitoring"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "com.salesforce.dva.argus.service.DashboardServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testDashboardCrud",
        "testDashboard_FindShareDeleteByVersion",
        "testFindSharedDashboardsMeta",
        "testFindSharedDashboardsMetaByOwner",
        "testFindSharedDashboardsByOwner",
        "testFindSharedDashboardsMetaByVersion",
        "testFindDashboardsByOwnerMetaAndByVersion",
        "testFindDashboardsByOwnerMeta",
        "testFindSharedDashboardsMetaByOwnerAndByVersion",
        "testFindSharedDashboardsByOwnerAndByVersion",
        "testFindDashboardsMetaByVersion",
        "testFindDashboardsMeta",
        "testDashboard_FindShareDelete"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 13
    },
    {
      "className": "com.salesforce.dva.argus.service.AlertServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "findAlertsInRange",
        "testFindSharedAlertsByOwner",
        "testDeletedTriggersInNotifications",
        "testAlertDeleteCreateAnotherAlertWithSameName",
        "testFindAlertsByOwnerPaged",
        "testAlertsCountContext",
        "findAllAlerts",
        "testAlertDelete",
        "testAlertSerDes",
        "testSharedAlertWhenTwoSharedAlert",
        "testTriggerInertiaSetting",
        "testFindSharedAlertsMeta",
        "testAlertEnqueue",
        "testFindSharedAlertsMetaPaged",
        "testCountPrivateAlertsForNonPrivilegedUser",
        "testSharedAlertWhenOneSharedAlert",
        "testfindAlertsByOwner",
        "testFindAlertsByOwnerPagedWithSearchText",
        "testDeleteAlert",
        "findFullAlertObjectRetrieval",
        "testCountPrivateAlertsForPrivilegedUserWithSearchText",
        "testCountPrivateAlertsForPrivilegedUser",
        "testFindSharedAlertsMetaByOwner",
        "testFindPrivateAlertsPagedForPrivilegedUser",
        "testfindAlertsByOwnerMeta",
        "testFindPrivateAlertsPagedForPrivilegedUserWithSearchText",
        "testUpdateNotification",
        "testFindAlertByNameAndOwner",
        "testCountSharedAlertsMetaPaged",
        "testFindAllAlertsMeta",
        "findAlertsModifiedAfterDate",
        "testFindPrivateAlertsPagedForNonPrivilegedUser",
        "testCountAlertsByOwnerWithSearchText",
        "testUpdateAlert",
        "testFindSharedAlertsMetaPagedWithSearchText",
        "testCountSharedAlertsMetaPagedWithSearchText",
        "testCountAlertsByOwner"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 37
    },
    {
      "className": "com.salesforce.dva.argus.service.CallbackServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCallbackNotifier"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.salesforce.dva.argus.service.tsdb.MetricFederationTest",
      "failingMethods": [],
      "erroringMethods": [
        "testEndPointFederationForkJoinMinDownsampler",
        "testEndPointFederationForkJoinCountDownsampler",
        "testEndPointFederationForkJoinSumDownsamplerWithNoTag",
        "testEndPointFederationForkJoinSumDownsamplerWithTag",
        "testEndPointFederationForkJoinCountDownsamplerWithNoTag",
        "testEndPointFederationForkJoinMaxDownsampler",
        "testTimeFederationFork"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 7
    },
    {
      "className": "com.salesforce.dva.argus.service.ChartServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testDeleteChart",
        "testCreateChart",
        "testGetChartsByOwner",
        "testDeleteChartById",
        "testGetChartsForEntity",
        "testGetChartByPrimaryKey"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "com.salesforce.dva.argus.service.schema.CachedDiscoveryServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testWildcardExpansionWithinLimit",
        "testWildcardExpansionExceedingLimit"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "com.salesforce.dva.argus.service.UserServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testUserCrud",
        "testAdminUserExistence",
        "testDefaultUserExistence",
        "testUniqueUserCount"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "com.salesforce.dva.argus.service.AuditServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testFindByJPAEntity",
        "testFindByHostName",
        "testCreateAudit",
        "testFindByMessage",
        "testFindAll",
        "testUpdateAudit"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "com.salesforce.dva.argus.service.NamespaceServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAdditionalUserIsPermitted",
        "testUserIsPermitted",
        "testNamespaceUnique",
        "testAddAdditionalUsersToNamespace",
        "testCreateNamespace",
        "testFindNamespaceByPrimaryKey"
      ],
      "failures": [
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        },
        {
          "failureName": "java.lang.NoClassDefFoundError",
          "failureDetail": "Could not initialize class kafka.server.KafkaConfig$",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    }
  ],
  "failingModule": "/root/workspace/salesforce/Argus/422453373/ArgusCore"
}