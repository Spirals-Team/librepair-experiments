{
  "totalNumberSkippingTests": 4,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "INRIA/spoon",
  "failingModule": "/root/workspace/INRIA/spoon/399788291",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 5,
  "error-types": [
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 1537,
  "failing-test-cases": [
    {
      "className": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
      "failingMethods": [
        "testSrcMainJava",
        "testSpecPackage",
        "testStaticClasses"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "26 public methods should be documented with proper API documentation: \norg.tukaani.xz.check.Check#update(byte[],int,int)\norg.tukaani.xz.check.Check#finish()\norg.tukaani.xz.common.DecoderUtil#decodeStreamHeader(byte[])\norg.tukaani.xz.common.DecoderUtil#decodeStreamFooter(byte[])\norg.tukaani.xz.common.DecoderUtil#decodeVLI(java.io.InputStream)\norg.tukaani.xz.delta.DeltaDecoder#decode(byte[],int,int)\norg.tukaani.xz.delta.DeltaEncoder#encode(byte[],int,int,byte[])\norg.tukaani.xz.index.IndexDecoder#locateBlock(org.tukaani.xz.index.BlockInfo,long)\norg.tukaani.xz.index.IndexEncoder#encode(java.io.OutputStream)\norg.tukaani.xz.index.IndexHash#validate(java.io.InputStream)\norg.tukaani.xz.lz.LZDecoder#repeat(int,int)\norg.tukaani.xz.lz.LZDecoder#copyUncompressed(java.io.DataInputStream,int)\norg.tukaani.xz.lz.LZDecoder#flush(byte[],int)\norg.tukaani.xz.lzma.LZMADecoder#decode()\norg.tukaani.xz.lzma.LZMAEncoder#encodeLZMA1EndMarker()\norg.tukaani.xz.rangecoder.RangeDecoder#normalize()\norg.tukaani.xz.rangecoder.RangeDecoder#decodeBit(short[],int)\norg.tukaani.xz.rangecoder.RangeDecoder#decodeDirectBits(int)\norg.tukaani.xz.rangecoder.RangeDecoderFromBuffer#prepareInputBuffer(java.io.DataInputStream,int)\norg.tukaani.xz.rangecoder.RangeEncoder#encodeBit(short[],int,int)\norg.tukaani.xz.rangecoder.RangeEncoder#encodeDirectBits(int,int)\norg.tukaani.xz.simple.SimpleFilter#code(byte[],int,int)\norg.tukaani.xz.FilterCoder#changesSize()\norg.tukaani.xz.FilterCoder#nonLastOK()\norg.tukaani.xz.FilterCoder#lastOK()\norg.tukaani.xz.FilterEncoder#supportsFlushing()",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "you have created a new package or removed an existing one, please declare it explicitly in SpoonArchitectureEnforcerTest#testSpecPackage\n\nDetails: Package org.tukaani.xz.lzma presents in computed but not expected set.\nPackage org.tukaani.xz.lz presents in computed but not expected set.\nPackage org.tukaani.xz.common presents in computed but not expected set.\nPackage org.tukaani.xz.rangecoder presents in computed but not expected set.\nPackage org.tukaani presents in computed but not expected set.\nPackage org presents in computed but not expected set.\nPackage org.tukaani.xz.delta presents in computed but not expected set.\nPackage org.tukaani.xz.index presents in computed but not expected set.\nPackage org.tukaani.xz.simple presents in computed but not expected set.\nPackage org.tukaani.xz presents in computed but not expected set.\nPackage org.tukaani.xz.check presents in computed but not expected set.",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "spoon.MavenLauncherTest",
      "failingMethods": [
        "mavenLauncherTestMultiModulesAndVariables",
        "spoonMavenLauncherTest"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Content of classpath: ",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c23\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    }
  ]
}