{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "prestodb/presto",
  "metrics": {
    "ReproductionDate": "Sep 13, 2017 8:28:50 PM",
    "BuggyBuildId": 262606719,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/prestodb/presto/builds/262606719",
    "BuggyBuildDate": "Aug 9, 2017 1:15:11 PM",
    "BugCommit": "92c57cc613d4dea384a2bf45963e8149af94202a",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 3802,
    "NbLibraries": 144,
    "NbFileApp": 6656,
    "NbFileTests": 2156,
    "NbCPU": 4,
    "FreeMemory": 819060376,
    "TotalMemory": 2183135232,
    "AngelicValuesByTest": {
      "com/facebook/presto/sql/planner/TestLogicalPlanner": 0,
      "com/facebook/presto/sql/planner/TestQuantifiedComparison": 0,
      "com/facebook/presto/sql/planner/TestLambdaCaptureDesugaringRewriter": 0,
      "com/facebook/presto/operator/scalar/TestFailureFunction": 0,
      "com/facebook/presto/sql/planner/optimizations/TestUnionWithReplicatedJoin": 0,
      "com/facebook/presto/memory/TestMemoryPools": 0,
      "com/facebook/presto/sql/planner/optimizations/TestUnion": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 25631584,
      "ComputeClasspath": 94770200,
      "ComputeTestDir": 85196808,
      "ResolveDependency": 115352784,
      "BuildProject": 85588416,
      "NPERepair": 96832072,
      "ComputeSourceDir": 94770200,
      "InitRepoToPush": 87221328,
      "CloneRepository": 58522776,
      "NopolRepair": 455148560,
      "CheckoutPatchedBuild": 819060376,
      "TestProject": 74427272,
      "GatherTestInformation": 101634184,
      "PushIncriminatedBuild": 123923920,
      "CommitPatch": 819060376
    },
    "BugCommitUrl": "http://github.com/prestodb/presto/commit/92c57cc613d4dea384a2bf45963e8149af94202a",
    "FailureNames": [
      "java.lang.AssertionError",
      "com.facebook.presto.spi.PrestoException",
      "java.lang.IllegalArgumentException",
      "java.lang.NullPointerException"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 431,
      "ComputeClasspath": 9,
      "ComputeTestDir": 1,
      "ResolveDependency": 244,
      "BuildProject": 2397,
      "NPERepair": 27,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 610,
      "CloneRepository": 103,
      "NopolRepair": 559,
      "CheckoutPatchedBuild": 0,
      "TestProject": 1251,
      "GatherTestInformation": 46,
      "PushIncriminatedBuild": 12,
      "CommitPatch": 343
    },
    "NbFailingTests": 23
  },
  "failingModule": "/root/workspace/prestodb/presto/262606719/presto-main",
  "hostname": "spirals-repairnator",
  "totalNumberFailingTests": 23,
  "error-types": [
    "java.lang.AssertionError",
    "com.facebook.presto.spi.PrestoException",
    "java.lang.IllegalArgumentException",
    "java.lang.NullPointerException"
  ],
  "totalNumberRunningTests": 3802,
  "failing-test-cases": [
    {
      "className": "com.facebook.presto.operator.scalar.TestFailureFunction",
      "failingMethods": [
        "com.facebook.presto.operator.scalar.TestFailureFunction#testQuery"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "com.facebook.presto.spi.PrestoException",
          "failureDetail": "The optimizer exhausted the time limit of 180000 ms",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.sql.planner.TestLambdaCaptureDesugaringRewriter",
      "failingMethods": [
        "com.facebook.presto.sql.planner.TestLambdaCaptureDesugaringRewriter#testRewriteBasicLambda"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected [\"$INTERNAL$BIND\"(\"a\", (a, x) -\u003e (\"a\" + \"x\"))] but found [\"$INTERNAL$BIND\"(\"a\", (a_0, x) -\u003e (\"a_0\" + \"x\"))]",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.memory.TestMemoryPools",
      "failingMethods": [
        "com.facebook.presto.memory.TestMemoryPools#testBlocking"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "count():bigint is not a scalar function",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.sql.planner.TestLogicalPlanner",
      "failingMethods": [
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testSymbolsPrunedInCorrelatedInPredicateSource",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testPruneCountAggregationOverScalar",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testSameQualifiedSubqueryIsAppliedOnlyOnce",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testSubqueryPruning",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testCorrelatedInUncorrelatedFiltersPushDown",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testCorrelatedScalarAggregationRewriteToLeftOuterJoin"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "count():bigint is not a scalar function",
          "isError": false
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "count(bigint):bigint is not a scalar function",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT * FROM orders o1 JOIN orders o2 ON o1.orderkey \u003c\u003d ALL(SELECT 1) AND (o1.orderkey \u003c\u003d ALL(SELECT 1) OR o1.orderkey \u003c\u003d ALL(SELECT 1))",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT COUNT(*) FROM (SELECT orderkey IN (SELECT orderkey FROM lineitem WHERE orderkey % 2 \u003d 0) FROM orders)",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "count():bigint is not a scalar function",
          "isError": false
        }
      ],
      "nbFailures": 6,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.sql.planner.TestQuantifiedComparison",
      "failingMethods": [
        "com.facebook.presto.sql.planner.TestQuantifiedComparison#testQuantifiedComparisonEqualAll",
        "com.facebook.presto.sql.planner.TestQuantifiedComparison#testQuantifiedComparisonGreaterEqualAny",
        "com.facebook.presto.sql.planner.TestQuantifiedComparison#testQuantifiedComparisonLessAll",
        "com.facebook.presto.sql.planner.TestQuantifiedComparison#testQuantifiedComparisonNotEqualAny",
        "com.facebook.presto.sql.planner.TestQuantifiedComparison#testQuantifiedComparisonGreaterEqualAll",
        "com.facebook.presto.sql.planner.TestQuantifiedComparison#testQuantifiedComparisonLessSome"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "min(bigint):bigint is not a scalar function",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "max(bigint):bigint is not a scalar function",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "min(bigint):bigint is not a scalar function",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "min(bigint):bigint is not a scalar function",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "max(bigint):bigint is not a scalar function",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "min(bigint):bigint is not a scalar function",
          "isError": false
        }
      ],
      "nbFailures": 6,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.sql.planner.optimizations.TestUnion",
      "failingMethods": [
        "com.facebook.presto.sql.planner.optimizations.TestUnion#testPartialAggregationsWithUnion",
        "com.facebook.presto.sql.planner.optimizations.TestUnion#testAggregationWithUnionAndValues",
        "com.facebook.presto.sql.planner.optimizations.TestUnion#testPartialRollupAggregationsWithUnion",
        "com.facebook.presto.sql.planner.optimizations.TestUnion#testUnionOverSingleNodeAggregationAndUnion"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT regionkey, count(*) FROM (SELECT regionkey FROM nation UNION ALL SELECT * FROM (VALUES 2, 100) t(regionkey)) GROUP BY regionkey",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT orderstatus, sum(orderkey) FROM (SELECT orderkey, orderstatus FROM orders UNION ALL SELECT orderkey, orderstatus FROM orders) x GROUP BY (orderstatus)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT orderstatus, sum(orderkey) FROM (SELECT orderkey, orderstatus FROM orders UNION ALL SELECT orderkey, orderstatus FROM orders) x GROUP BY ROLLUP (orderstatus)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT count(*) FROM (SELECT 1 FROM nation GROUP BY regionkey UNION ALL (   SELECT 1 FROM nation    UNION ALL    SELECT 1 FROM nation))",
          "isError": false
        }
      ],
      "nbFailures": 4,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.sql.planner.optimizations.TestUnionWithReplicatedJoin",
      "failingMethods": [
        "com.facebook.presto.sql.planner.optimizations.TestUnionWithReplicatedJoin#testPartialRollupAggregationsWithUnion",
        "com.facebook.presto.sql.planner.optimizations.TestUnionWithReplicatedJoin#testAggregationWithUnionAndValues",
        "com.facebook.presto.sql.planner.optimizations.TestUnionWithReplicatedJoin#testPartialAggregationsWithUnion",
        "com.facebook.presto.sql.planner.optimizations.TestUnionWithReplicatedJoin#testUnionOverSingleNodeAggregationAndUnion"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT orderstatus, sum(orderkey) FROM (SELECT orderkey, orderstatus FROM orders UNION ALL SELECT orderkey, orderstatus FROM orders) x GROUP BY (orderstatus)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT regionkey, count(*) FROM (SELECT regionkey FROM nation UNION ALL SELECT * FROM (VALUES 2, 100) t(regionkey)) GROUP BY regionkey",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT orderstatus, sum(orderkey) FROM (SELECT orderkey, orderstatus FROM orders UNION ALL SELECT orderkey, orderstatus FROM orders) x GROUP BY ROLLUP (orderstatus)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT count(*) FROM (SELECT 1 FROM nation GROUP BY regionkey UNION ALL (   SELECT 1 FROM nation    UNION ALL    SELECT 1 FROM nation))",
          "isError": false
        }
      ],
      "nbFailures": 4,
      "nbErrors": 0
    }
  ]
}