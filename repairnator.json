{
  "totalNumberSkippingTests": 4,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "danglotb/dspot",
  "bugCommit": "https://github.com/danglotb/dspot/compare/e6fd527f7f9d...94acf50541fa",
  "failingModule": "/root/workspace/danglotb/dspot/331772479/dspot",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 1,
  "error-types": [
    "junit.framework.ComparisonFailure"
  ],
  "totalNumberRunningTests": 129,
  "failing-test-cases": [
    {
      "className": "fr.inria.diversify.dspot.assertGenerator.MethodsAssertGeneratorTest",
      "failingMethods": [
        "fr.inria.diversify.dspot.assertGenerator.MethodsAssertGeneratorTest#testBuildNewAssert"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c....junit.Assert.assert[True(((fr.inria.sample.ClassWithBoolean)cl).getTrue());     // AssertGenerator add assertion     org.junit.Assert.assertEquals(\u0027a\u0027, ((char) (((fr.inria.sample.ClassWithBoolean)cl).getChar())));     // AssertGenerator add assertion     org.junit.Assert.assertTrue(((fr.inria.sample.ClassWithBoolean)cl).getListWithElements().contains(\"a\"));     // AssertGenerator add assertion     org.junit.Assert.assertTrue(((fr.inria.sample.ClassWithBoolean)cl).getListWithElements().contains(\"b\"));     // AssertGenerator add assertion     org.junit.Assert.assertEquals(1.0, ((double) (((fr.inria.sample.ClassWithBoolean)cl).getDouble())));     // AssertGenerator add assertion     org.junit.Assert.assertNull(((fr.inria.sample.ClassWithBoolean)cl).getNull());     // AssertGenerator add assertion     org.junit.Assert.assertEquals(1, ((byte) (((fr.inria.sample.ClassWithBoolean)cl).getByte())));     // AssertGenerator add assertion     org.junit.Assert.assertEquals(1, ((int) (((fr.inria.sample.ClassWithBoolean)cl).getInt())));     // AssertGenerator add assertion     org.junit.Assert.assertTrue(((fr.inria.sample.ClassWithBoolean)cl).getEmptyList().isEmpty());     // AssertGenerator add assertion     org.junit.Assert.assertFalse(((fr.inria.sample.ClassWithBoolean)cl).getFalse());     // AssertGenerator add assertion     org.junit.Assert.assertEquals(1.0F, ((float) (((fr.inria.sample.ClassWithBoolean)cl).getFloat())));     // AssertGenerator add assertion     org.junit.Assert.assertEquals(1, ((short) (((fr.inria.sample.ClassWithBoolean)cl).getShort())));     cl.getFalse();     cl.getBoolean();     java.io.File file \u003d new java.io.File(\"\");     boolean var \u003d cl.getTrue();     // AssertGenerator add assertion     org.junit.Assert.assertTrue(((fr.inria.sample.ClassWithBoolean)cl).getBoolean());     // AssertGenerator add assertion     org.junit.Assert.assertEquals(1L, ((long) (((fr.inria.sample.ClassWithBoolean)cl).getLong())));     // AssertGenerator add assertion     org.junit.Assert.assertEquals(\"this.is.a.string\", ((fr.inria.sample.ClassWithBoolean)cl).getString());     // AssertGenerator add assertion     org.junit.Assert.assertTrue(((fr.inria.sample.ClassWithBoolean)cl).getTrue());     // AssertGenerator add assertion     org.junit.Assert.assertEquals(\u0027a\u0027, ((char) (((fr.inria.sample.ClassWithBoolean)cl).getChar())]));     // AssertGen...\u003e but was:\u003c....junit.Assert.assert[Equals(\u0027a\u0027, ((char) (((fr.inria.sample.ClassWithBoolean)cl).getChar())));     // AssertGenerator add assertion     org.junit.Assert.assertTrue(((fr.inria.sample.ClassWithBoolean)cl).getTrue());     // AssertGenerator add assertion     org.junit.Assert.assertTrue(((fr.inria.sample.ClassWithBoolean)cl).getListWithElements().contains(\"a\"));     // AssertGenerator add assertion     org.junit.Assert.assertTrue(((fr.inria.sample.ClassWithBoolean)cl).getListWithElements().contains(\"b\"));     // AssertGenerator add assertion     org.junit.Assert.assertEquals(1.0, ((double) (((fr.inria.sample.ClassWithBoolean)cl).getDouble())));     // AssertGenerator add assertion     org.junit.Assert.assertNull(((fr.inria.sample.ClassWithBoolean)cl).getNull());     // AssertGenerator add assertion     org.junit.Assert.assertEquals(1, ((byte) (((fr.inria.sample.ClassWithBoolean)cl).getByte())));     // AssertGenerator add assertion     org.junit.Assert.assertEquals(1, ((int) (((fr.inria.sample.ClassWithBoolean)cl).getInt())));     // AssertGenerator add assertion     org.junit.Assert.assertTrue(((fr.inria.sample.ClassWithBoolean)cl).getEmptyList().isEmpty());     // AssertGenerator add assertion     org.junit.Assert.assertFalse(((fr.inria.sample.ClassWithBoolean)cl).getFalse());     // AssertGenerator add assertion     org.junit.Assert.assertEquals(1.0F, ((float) (((fr.inria.sample.ClassWithBoolean)cl).getFloat())));     // AssertGenerator add assertion     org.junit.Assert.assertEquals(1, ((short) (((fr.inria.sample.ClassWithBoolean)cl).getShort())));     cl.getFalse();     cl.getBoolean();     java.io.File file \u003d new java.io.File(\"\");     boolean var \u003d cl.getTrue();     // AssertGenerator add assertion     org.junit.Assert.assertTrue(((fr.inria.sample.ClassWithBoolean)cl).getBoolean());     // AssertGenerator add assertion     org.junit.Assert.assertEquals(1L, ((long) (((fr.inria.sample.ClassWithBoolean)cl).getLong())));     // AssertGenerator add assertion     org.junit.Assert.assertEquals(\"this.is.a.string\", ((fr.inria.sample.ClassWithBoolean)cl).getString());     // AssertGenerator add assertion     org.junit.Assert.assertEquals(\u0027a\u0027, ((char) (((fr.inria.sample.ClassWithBoolean)cl).getChar())));     // AssertGenerator add assertion     org.junit.Assert.assertTrue(((fr.inria.sample.ClassWithBoolean)cl).getTrue(]));     // AssertGen...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ]
}