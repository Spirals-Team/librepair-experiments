{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 19,
  "repo": "binaryoverload/JSON-Config",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 2,
      "ComputeClasspath": 3,
      "ComputeTestDir": 0,
      "ResolveDependency": 9,
      "BuildProject": 11,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 0,
      "CloneRepository": 1,
      "NopolRepair": 369,
      "CheckoutPatchedBuild": 0,
      "TestProject": 4,
      "GatherTestInformation": 0,
      "PushIncriminatedBuild": 3,
      "AstorRepair": 2,
      "CommitPatch": 3
    },
    "FailureNames": [
      "java.lang.IllegalArgumentException",
      "java.lang.Exception"
    ],
    "NbFailingTests": 19,
    "BugCommitUrl": "http://github.com/binaryoverload/JSON-Config/commit/5a4273256e006b6628d6e4132251d099f15a7a44",
    "ReproductionDate": "Mar 22, 2018 5:57:47 PM",
    "BuggyBuildId": 357118325,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/binaryoverload/JSON-Config/builds/357118325",
    "BuggyBuildDate": "Mar 22, 2018 5:57:38 PM",
    "BugCommit": "5a4273256e006b6628d6e4132251d099f15a7a44",
    "PatchChangedFiles": 2,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 30,
    "NbLibraries": 3,
    "NbFileApp": 4,
    "NbFileTests": 4,
    "NbCPU": 32,
    "FreeMemory": 5852788992,
    "TotalMemory": 6203899904,
    "AngelicValuesByTest": {
      "io/github/binaryoverload/JSONConfigTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 680294920,
      "ComputeClasspath": 509872152,
      "ComputeTestDir": 673796872,
      "ResolveDependency": 644783944,
      "BuildProject": 601357376,
      "NPERepair": 513388808,
      "ComputeSourceDir": 509872152,
      "InitRepoToPush": 562556256,
      "CloneRepository": 728763480,
      "NopolRepair": 5881016360,
      "CheckoutPatchedBuild": 5852788992,
      "TestProject": 593444376,
      "GatherTestInformation": 593444376,
      "PushIncriminatedBuild": 513388808,
      "AstorRepair": 612429288,
      "CommitPatch": 5852788992
    }
  },
  "failingModule": "/root/workspace/binaryoverload/JSON-Config/357118325",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 0,
  "error-types": [
    "java.lang.IllegalArgumentException",
    "java.lang.Exception"
  ],
  "totalNumberRunningTests": 30,
  "failing-test-cases": [
    {
      "className": "io.github.binaryoverload.JSONConfigTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.github.binaryoverload.JSONConfigTest#testSubConfigPositive",
        "io.github.binaryoverload.JSONConfigTest#testGetBooleanPositive",
        "io.github.binaryoverload.JSONConfigTest#testGetIntegerPositive",
        "io.github.binaryoverload.JSONConfigTest#testGetPositive",
        "io.github.binaryoverload.JSONConfigTest#testGetArrayNegative",
        "io.github.binaryoverload.JSONConfigTest#testGetIntegerNegative",
        "io.github.binaryoverload.JSONConfigTest#testGetDoubleNegative",
        "io.github.binaryoverload.JSONConfigTest#testSubConfigNegative",
        "io.github.binaryoverload.JSONConfigTest#testSetPositive",
        "io.github.binaryoverload.JSONConfigTest#testReloadFile",
        "io.github.binaryoverload.JSONConfigTest#testGetStringPositive",
        "io.github.binaryoverload.JSONConfigTest#testRemovePositive",
        "io.github.binaryoverload.JSONConfigTest#testGetDoublePositive",
        "io.github.binaryoverload.JSONConfigTest#testGetArrayPositive",
        "io.github.binaryoverload.JSONConfigTest#testGetLongPositive",
        "io.github.binaryoverload.JSONConfigTest#testGetLongNegative",
        "io.github.binaryoverload.JSONConfigTest#testGetBooleanNegative",
        "io.github.binaryoverload.JSONConfigTest#testGetStringNegative",
        "io.github.binaryoverload.JSONConfigTest#testRemoveNegative"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027type\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027id\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027title\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.IllegalStateException\u003e but was\u003cjava.lang.IllegalArgumentException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027exclusiveMinimum\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.IllegalStateException\u003e but was\u003cjava.lang.IllegalArgumentException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027date\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.IllegalStateException\u003e but was\u003cjava.lang.IllegalArgumentException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027date\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.IllegalStateException\u003e but was\u003cjava.lang.IllegalArgumentException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027title\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.IllegalStateException\u003e but was\u003cjava.lang.IllegalArgumentException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027date\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.IllegalStateException\u003e but was\u003cjava.lang.IllegalArgumentException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027items\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027required\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.IllegalStateException\u003e but was\u003cjava.lang.IllegalArgumentException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.IllegalStateException\u003e but was\u003cjava.lang.IllegalArgumentException\u003e",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalArgumentException",
          "failureDetail": "Malformed path, could not match \u0027title\u0027 with separator \u0027.\u0027. Allowed charset: [-, +, _, $]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 19
    }
  ]
}