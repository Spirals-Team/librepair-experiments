{
  "totalNumberSkippingTests": 3,
  "bugType": "only_fail",
  "totalNumberErroringTests": 35,
  "repo": "testcontainers/testcontainers-java",
  "metrics": {
    "FailureNames": [
      "java.lang.IllegalStateException",
      "java.lang.AssertionError",
      "java.lang.ExceptionInInitializerError"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 3,
      "ComputeTestDir": 0,
      "ResolveDependency": 17,
      "BuildProject": 52,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 4,
      "CloneRepository": 2,
      "NopolRepair": 19,
      "CheckoutPatchedBuild": 0,
      "TestProject": 563,
      "GatherTestInformation": 0,
      "PushIncriminatedBuild": 4,
      "AstorRepair": 506,
      "CommitPatch": 6
    },
    "BugCommitUrl": "http://github.com/testcontainers/testcontainers-java/commit/590bd764c46dd4d195cbd61761c2696ac4ff1c6e",
    "NbFailingTests": 36,
    "ReproductionDate": "Jan 27, 2018 12:21:11 AM",
    "BuggyBuildId": 241799728,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/testcontainers/testcontainers-java/builds/241799728",
    "BuggyBuildDate": "Jun 11, 2017 9:46:05 PM",
    "BugCommit": "590bd764c46dd4d195cbd61761c2696ac4ff1c6e",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 67,
    "NbLibraries": 65,
    "NbFileApp": 184,
    "NbFileTests": 108,
    "NbCPU": 32,
    "FreeMemory": 1339366432,
    "TotalMemory": 2141192192,
    "AngelicValuesByTest": {
      "org/testcontainers/utility/DirectoryTarResourceTest": 0,
      "org/testcontainers/junit/DockerComposeErrorHandlingTest": 0,
      "org/testcontainers/junit/ParameterizedDockerfileContainerTest": 0,
      "org/testcontainers/junit/DockerComposeOverrideTest": 0,
      "org/testcontainers/DockerClientFactoryTest": 0,
      "org/testcontainers/junit/wait/LogMessageWaitStrategyTest": 0,
      "org/testcontainers/junit/DockerComposeContainerScalingTest": 0,
      "org/testcontainers/junit/FixedHostPortContainerTest": 0,
      "org/testcontainers/junit/wait/HostPortWaitStrategyTest": 0,
      "org/testcontainers/junit/DockerComposeDoNotOverrideTest": 0,
      "org/testcontainers/junit/GenericContainerRuleTest": 0,
      "org/testcontainers/junit/DockerComposePassthroughTest": 0,
      "org/testcontainers/junit/DockerfileContainerTest": 0,
      "org/testcontainers/junit/DockerfileTest": 0,
      "org/testcontainers/junit/wait/HttpWaitStrategyTest": 0,
      "org/testcontainers/junit/WorkingDirectoryTest": 0,
      "org/testcontainers/junit/DockerComposeV2FormatTest": 0,
      "org/testcontainers/junit/OutputStreamTest": 0,
      "org/testcontainers/junit/DockerComposeContainerTest": 0,
      "org/testcontainers/junit/NonExistentImagePullTest": 0,
      "org/testcontainers/dockerclient/DockerClientConfigUtilsTest": 0,
      "org/testcontainers/junit/DockerNetworkModeTest": 0,
      "org/testcontainers/junit/DockerComposeV2WithNetworkTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 588106824,
      "ComputeClasspath": 513049880,
      "ComputeTestDir": 571541080,
      "ResolveDependency": 553078296,
      "BuildProject": 537249648,
      "NPERepair": 518054488,
      "ComputeSourceDir": 513049880,
      "InitRepoToPush": 440077456,
      "CloneRepository": 600019120,
      "NopolRepair": 1510169696,
      "CheckoutPatchedBuild": 1339366432,
      "TestProject": 411713832,
      "GatherTestInformation": 362275872,
      "PushIncriminatedBuild": 518054488,
      "AstorRepair": 407469016,
      "CommitPatch": 1339366432
    }
  },
  "bugCommit": "https://github.com/testcontainers/testcontainers-java/compare/76e0a5452d37...590bd764c46d",
  "failingModule": "/root/workspace/testcontainers/testcontainers-java/241799728/core",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 1,
  "error-types": [
    "java.lang.IllegalStateException",
    "java.lang.AssertionError",
    "java.lang.ExceptionInInitializerError"
  ],
  "totalNumberRunningTests": 67,
  "failing-test-cases": [
    {
      "className": "org.testcontainers.junit.DockerComposeV2WithNetworkTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.DockerComposeV2WithNetworkTest#org.testcontainers.junit.DockerComposeV2WithNetworkTest"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.testcontainers.junit.WorkingDirectoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.WorkingDirectoryTest#org.testcontainers.junit.WorkingDirectoryTest"
      ],
      "failures": [
        {
          "failureName": "java.lang.ExceptionInInitializerError",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.testcontainers.junit.ParameterizedDockerfileContainerTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.ParameterizedDockerfileContainerTest#simpleTest[alpine:3.3]",
        "org.testcontainers.junit.ParameterizedDockerfileContainerTest#simpleTest[alpine:3.2]"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.testcontainers.junit.DockerComposePassthroughTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.DockerComposePassthroughTest#org.testcontainers.junit.DockerComposePassthroughTest"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.testcontainers.junit.DockerComposeContainerScalingTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.DockerComposeContainerScalingTest#org.testcontainers.junit.DockerComposeContainerScalingTest"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.testcontainers.junit.wait.HttpWaitStrategyTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.wait.HttpWaitStrategyTest#testWaitUntilReady_Success",
        "org.testcontainers.junit.wait.HttpWaitStrategyTest#testWaitUntilReady_Timeout"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.testcontainers.junit.OutputStreamTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.OutputStreamTest#testFetchStdoutWithTimeout",
        "org.testcontainers.junit.OutputStreamTest#testFetchStdoutWithNoLimit",
        "org.testcontainers.junit.OutputStreamTest#testToStringConsumer",
        "org.testcontainers.junit.OutputStreamTest#testLogConsumer",
        "org.testcontainers.junit.OutputStreamTest#testFetchStdout"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "org.testcontainers.junit.DockerComposeOverrideTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.DockerComposeOverrideTest#org.testcontainers.junit.DockerComposeOverrideTest"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.testcontainers.junit.DockerNetworkModeTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.DockerNetworkModeTest#org.testcontainers.junit.DockerNetworkModeTest"
      ],
      "failures": [
        {
          "failureName": "java.lang.ExceptionInInitializerError",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.testcontainers.junit.NonExistentImagePullTest",
      "failingMethods": [
        "org.testcontainers.junit.NonExistentImagePullTest#pullingNonExistentImageFailsGracefully"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Pulling a nonexistent container will cause an exception to be thrown: IllegalStateException was thrown instead of ContainerFetchException",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "org.testcontainers.utility.DirectoryTarResourceTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.utility.DirectoryTarResourceTest#simpleRecursiveFileTest",
        "org.testcontainers.utility.DirectoryTarResourceTest#simpleRecursiveClasspathResourceTest"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.testcontainers.junit.DockerfileContainerTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.DockerfileContainerTest#simpleDslTest"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.testcontainers.junit.DockerComposeV2FormatTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.DockerComposeV2FormatTest#org.testcontainers.junit.DockerComposeV2FormatTest"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.testcontainers.junit.FixedHostPortContainerTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.FixedHostPortContainerTest#testFixedHostPortMapping"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.testcontainers.junit.wait.LogMessageWaitStrategyTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.wait.LogMessageWaitStrategyTest#testWaitUntilReady_Timeout",
        "org.testcontainers.junit.wait.LogMessageWaitStrategyTest#testWaitUntilReady_Success"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.testcontainers.junit.DockerComposeContainerTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.DockerComposeContainerTest#org.testcontainers.junit.DockerComposeContainerTest"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.testcontainers.junit.GenericContainerRuleTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.GenericContainerRuleTest#org.testcontainers.junit.GenericContainerRuleTest"
      ],
      "failures": [
        {
          "failureName": "java.lang.ExceptionInInitializerError",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.testcontainers.junit.DockerfileTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.DockerfileTest#filePermissions",
        "org.testcontainers.junit.DockerfileTest#simpleDockerfileWorks",
        "org.testcontainers.junit.DockerfileTest#customizableImage",
        "org.testcontainers.junit.DockerfileTest#dockerfileBuilderWorks"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "org.testcontainers.junit.wait.HostPortWaitStrategyTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.wait.HostPortWaitStrategyTest#testWaitUntilReady_Success",
        "org.testcontainers.junit.wait.HostPortWaitStrategyTest#testWaitUntilReady_Timeout"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.testcontainers.junit.DockerComposeDoNotOverrideTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.DockerComposeDoNotOverrideTest#org.testcontainers.junit.DockerComposeDoNotOverrideTest"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.testcontainers.dockerclient.DockerClientConfigUtilsTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.dockerclient.DockerClientConfigUtilsTest#getDockerHostIpAddressShouldReturnLocalhostWhenUnixSocket",
        "org.testcontainers.dockerclient.DockerClientConfigUtilsTest#getDockerHostIpAddressShouldReturnDockerHostIpWhenTcpUri"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.testcontainers.junit.DockerComposeErrorHandlingTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.junit.DockerComposeErrorHandlingTest#simpleTest"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.testcontainers.DockerClientFactoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "org.testcontainers.DockerClientFactoryTest#runCommandInsideDockerShouldNotFailIfImageDoesNotExistsLocally"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Could not find a valid Docker environment. Please see logs and check configuration",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ]
}