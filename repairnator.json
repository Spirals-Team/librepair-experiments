{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "prestodb/presto",
  "failingModule": "/root/workspace/prestodb/presto/314439703/presto-resource-group-managers",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 12,
  "error-types": [
    "org.jdbi.v3.core.statement.UnableToExecuteStatementException",
    "org.jdbi.v3.core.statement.UnableToCreateStatementException"
  ],
  "totalNumberRunningTests": 4221,
  "failing-test-cases": [
    {
      "className": "com.facebook.presto.resourceGroups.db.TestResourceGroupsDao",
      "failingMethods": [
        "com.facebook.presto.resourceGroups.db.TestResourceGroupsDao#testResourceGroups",
        "com.facebook.presto.resourceGroups.db.TestResourceGroupsDao#testGlobalResourceGroupProperties",
        "com.facebook.presto.resourceGroups.db.TestResourceGroupsDao#testSelectors",
        "com.facebook.presto.resourceGroups.db.TestResourceGroupsDao#testExactMatchSelector"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.jdbi.v3.core.statement.UnableToCreateStatementException",
          "failureDetail": "org.h2.jdbc.JdbcSQLException: Table \"EXACT_MATCH_SOURCE_SELECTORS\" not found; SQL statement:\nINSERT INTO exact_match_source_selectors (environment, source, query_type, update_time, resource_group_id)\nVALUES (?, ?, ?, now(), ?)\n [42102-196] [statement:\"INSERT INTO exact_match_source_selectors (environment, source, query_type, update_time, resource_group_id)\nVALUES (:environment, :source, :query_type, now(), :resourceGroupId)\n\", rewritten:\"INSERT INTO exact_match_source_selectors (environment, source, query_type, update_time, resource_group_id)\nVALUES (:environment, :source, :query_type, now(), :resourceGroupId)\n\", parsed:\"ParsedSql{sql\u003d\u0027INSERT INTO exact_match_source_selectors (environment, source, query_type, update_time, resource_group_id)\nVALUES (?, ?, ?, now(), ?)\n\u0027, parameters\u003dParsedParameters{positional\u003dfalse, parameterNames\u003d[environment, source, query_type, resourceGroupId]}}\", arguments:{ positional:{0:test,1:@test@test_pipeline,2:INSERT,3:[ \"global\", \"test\", \"user\", \"insert\" ]}, named:{environment:test,resourceGroupId:[ \"global\", \"test\", \"user\", \"insert\" ],source:@test@test_pipeline,query_type:INSERT}, finder:[]}]",
          "isError": false
        },
        {
          "failureName": "org.jdbi.v3.core.statement.UnableToCreateStatementException",
          "failureDetail": "org.h2.jdbc.JdbcSQLException: Table \"RESOURCE_GROUPS_GLOBAL_PROPERTIES\" not found; SQL statement:\nINSERT INTO resource_groups_global_properties\n(name, value) VALUES (?, ?) [42102-196] [statement:\"INSERT INTO resource_groups_global_properties\n(name, value) VALUES (:name, :value)\", rewritten:\"INSERT INTO resource_groups_global_properties\n(name, value) VALUES (:name, :value)\", parsed:\"ParsedSql{sql\u003d\u0027INSERT INTO resource_groups_global_properties\n(name, value) VALUES (?, ?)\u0027, parameters\u003dParsedParameters{positional\u003dfalse, parameterNames\u003d[name, value]}}\", arguments:{ positional:{0:cpu_quota_period,1:1h}, named:{name:cpu_quota_period,value:1h}, finder:[]}]",
          "isError": false
        },
        {
          "failureName": "org.jdbi.v3.core.statement.UnableToCreateStatementException",
          "failureDetail": "org.h2.jdbc.JdbcSQLException: Table \"RESOURCE_GROUPS\" not found; SQL statement:\nINSERT INTO resource_groups\n(resource_group_id, name, soft_memory_limit, max_queued, soft_concurrency_limit, hard_concurrency_limit, scheduling_policy, scheduling_weight, jmx_export, soft_cpu_limit, hard_cpu_limit, queued_time_limit, running_time_limit, parent, environment)\nVALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [42102-196] [statement:\"INSERT INTO resource_groups\n(resource_group_id, name, soft_memory_limit, max_queued, soft_concurrency_limit, hard_concurrency_limit, scheduling_policy, scheduling_weight, jmx_export, soft_cpu_limit, hard_cpu_limit, queued_time_limit, running_time_limit, parent, environment)\nVALUES (:resource_group_id, :name, :soft_memory_limit, :max_queued, :soft_concurrency_limit, :hard_concurrency_limit, :scheduling_policy, :scheduling_weight, :jmx_export, :soft_cpu_limit, :hard_cpu_limit, :queued_time_limit, :running_time_limit, :parent, :environment)\", rewritten:\"INSERT INTO resource_groups\n(resource_group_id, name, soft_memory_limit, max_queued, soft_concurrency_limit, hard_concurrency_limit, scheduling_policy, scheduling_weight, jmx_export, soft_cpu_limit, hard_cpu_limit, queued_time_limit, running_time_limit, parent, environment)\nVALUES (:resource_group_id, :name, :soft_memory_limit, :max_queued, :soft_concurrency_limit, :hard_concurrency_limit, :scheduling_policy, :scheduling_weight, :jmx_export, :soft_cpu_limit, :hard_cpu_limit, :queued_time_limit, :running_time_limit, :parent, :environment)\", parsed:\"ParsedSql{sql\u003d\u0027INSERT INTO resource_groups\n(resource_group_id, name, soft_memory_limit, max_queued, soft_concurrency_limit, hard_concurrency_limit, scheduling_policy, scheduling_weight, jmx_export, soft_cpu_limit, hard_cpu_limit, queued_time_limit, running_time_limit, parent, environment)\nVALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\u0027, parameters\u003dParsedParameters{positional\u003dfalse, parameterNames\u003d[resource_group_id, name, soft_memory_limit, max_queued, soft_concurrency_limit, hard_concurrency_limit, scheduling_policy, scheduling_weight, jmx_export, soft_cpu_limit, hard_cpu_limit, queued_time_limit, running_time_limit, parent, environment]}}\", arguments:{ positional:{0:1,1:global,2:100%,3:100,4:100,5:100,6:null,7:null,8:null,9:null,10:null,11:null,12:null,13:null,14:test}, named:{queued_time_limit:null,soft_cpu_limit:null,parent:null,resource_group_id:1,max_queued:100,soft_concurrency_limit:100,jmx_export:null,soft_memory_limit:100%,scheduling_policy:null,running_time_limit:null,environment:test,scheduling_weight:null,hard_cpu_limit:null,name:global,hard_concurrency_limit:100}, finder:[]}]",
          "isError": false
        },
        {
          "failureName": "org.jdbi.v3.core.statement.UnableToExecuteStatementException",
          "failureDetail": "org.h2.jdbc.JdbcSQLException: Table \"RESOURCE_GROUPS\" not found; SQL statement:\nCREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n) [42102-196] [statement:\"CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\", rewritten:\"CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\", parsed:\"ParsedSql{sql\u003d\u0027CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\u0027, parameters\u003dParsedParameters{positional\u003dfalse, parameterNames\u003d[]}}\", arguments:{ positional:{}, named:{}, finder:[]}]",
          "isError": false
        }
      ],
      "nbFailures": 4,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.resourceGroups.db.TestDbSourceExactMatchSelector",
      "failingMethods": [
        "com.facebook.presto.resourceGroups.db.TestDbSourceExactMatchSelector#testMatch"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.jdbi.v3.core.statement.UnableToCreateStatementException",
          "failureDetail": "org.h2.jdbc.JdbcSQLException: Table \"EXACT_MATCH_SOURCE_SELECTORS\" not found; SQL statement:\nINSERT INTO exact_match_source_selectors (environment, source, query_type, update_time, resource_group_id)\nVALUES (?, ?, ?, now(), ?)\n [42102-196] [statement:\"INSERT INTO exact_match_source_selectors (environment, source, query_type, update_time, resource_group_id)\nVALUES (:environment, :source, :query_type, now(), :resourceGroupId)\n\", rewritten:\"INSERT INTO exact_match_source_selectors (environment, source, query_type, update_time, resource_group_id)\nVALUES (:environment, :source, :query_type, now(), :resourceGroupId)\n\", parsed:\"ParsedSql{sql\u003d\u0027INSERT INTO exact_match_source_selectors (environment, source, query_type, update_time, resource_group_id)\nVALUES (?, ?, ?, now(), ?)\n\u0027, parameters\u003dParsedParameters{positional\u003dfalse, parameterNames\u003d[environment, source, query_type, resourceGroupId]}}\", arguments:{ positional:{0:test,1:@test@test_pipeline,2:INSERT,3:[ \"global\", \"test\", \"user\", \"insert\" ]}, named:{environment:test,resourceGroupId:[ \"global\", \"test\", \"user\", \"insert\" ],source:@test@test_pipeline,query_type:INSERT}, finder:[]}]",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.resourceGroups.db.TestDbResourceGroupConfigurationManager",
      "failingMethods": [
        "com.facebook.presto.resourceGroups.db.TestDbResourceGroupConfigurationManager#testMissing",
        "com.facebook.presto.resourceGroups.db.TestDbResourceGroupConfigurationManager#testExactMatchSelector",
        "com.facebook.presto.resourceGroups.db.TestDbResourceGroupConfigurationManager#testSelectorPriority",
        "com.facebook.presto.resourceGroups.db.TestDbResourceGroupConfigurationManager#testDuplicates",
        "com.facebook.presto.resourceGroups.db.TestDbResourceGroupConfigurationManager#testConfiguration",
        "com.facebook.presto.resourceGroups.db.TestDbResourceGroupConfigurationManager#testEnvironments",
        "com.facebook.presto.resourceGroups.db.TestDbResourceGroupConfigurationManager#testReconfig"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.jdbi.v3.core.statement.UnableToExecuteStatementException",
          "failureDetail": "org.h2.jdbc.JdbcSQLException: Table \"RESOURCE_GROUPS\" not found; SQL statement:\nCREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n) [42102-196] [statement:\"CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\", rewritten:\"CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\", parsed:\"ParsedSql{sql\u003d\u0027CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\u0027, parameters\u003dParsedParameters{positional\u003dfalse, parameterNames\u003d[]}}\", arguments:{ positional:{}, named:{}, finder:[]}]",
          "isError": false
        },
        {
          "failureName": "org.jdbi.v3.core.statement.UnableToExecuteStatementException",
          "failureDetail": "org.h2.jdbc.JdbcSQLException: Table \"RESOURCE_GROUPS\" not found; SQL statement:\nCREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n) [42102-196] [statement:\"CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\", rewritten:\"CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\", parsed:\"ParsedSql{sql\u003d\u0027CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\u0027, parameters\u003dParsedParameters{positional\u003dfalse, parameterNames\u003d[]}}\", arguments:{ positional:{}, named:{}, finder:[]}]",
          "isError": false
        },
        {
          "failureName": "org.jdbi.v3.core.statement.UnableToExecuteStatementException",
          "failureDetail": "org.h2.jdbc.JdbcSQLException: Table \"RESOURCE_GROUPS\" not found; SQL statement:\nCREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n) [42102-196] [statement:\"CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\", rewritten:\"CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\", parsed:\"ParsedSql{sql\u003d\u0027CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\u0027, parameters\u003dParsedParameters{positional\u003dfalse, parameterNames\u003d[]}}\", arguments:{ positional:{}, named:{}, finder:[]}]",
          "isError": false
        },
        {
          "failureName": "org.jdbi.v3.core.statement.UnableToExecuteStatementException",
          "failureDetail": "org.h2.jdbc.JdbcSQLException: Table \"RESOURCE_GROUPS\" not found; SQL statement:\nCREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n) [42102-196] [statement:\"CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\", rewritten:\"CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\", parsed:\"ParsedSql{sql\u003d\u0027CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\u0027, parameters\u003dParsedParameters{positional\u003dfalse, parameterNames\u003d[]}}\", arguments:{ positional:{}, named:{}, finder:[]}]",
          "isError": false
        },
        {
          "failureName": "org.jdbi.v3.core.statement.UnableToExecuteStatementException",
          "failureDetail": "org.h2.jdbc.JdbcSQLException: Table \"RESOURCE_GROUPS\" not found; SQL statement:\nCREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n) [42102-196] [statement:\"CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\", rewritten:\"CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\", parsed:\"ParsedSql{sql\u003d\u0027CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\u0027, parameters\u003dParsedParameters{positional\u003dfalse, parameterNames\u003d[]}}\", arguments:{ positional:{}, named:{}, finder:[]}]",
          "isError": false
        },
        {
          "failureName": "org.jdbi.v3.core.statement.UnableToExecuteStatementException",
          "failureDetail": "org.h2.jdbc.JdbcSQLException: Table \"RESOURCE_GROUPS\" not found; SQL statement:\nCREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n) [42102-196] [statement:\"CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\", rewritten:\"CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\", parsed:\"ParsedSql{sql\u003d\u0027CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\u0027, parameters\u003dParsedParameters{positional\u003dfalse, parameterNames\u003d[]}}\", arguments:{ positional:{}, named:{}, finder:[]}]",
          "isError": false
        },
        {
          "failureName": "org.jdbi.v3.core.statement.UnableToExecuteStatementException",
          "failureDetail": "org.h2.jdbc.JdbcSQLException: Table \"RESOURCE_GROUPS\" not found; SQL statement:\nCREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n) [42102-196] [statement:\"CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\", rewritten:\"CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\", parsed:\"ParsedSql{sql\u003d\u0027CREATE TABLE IF NOT EXISTS selectors (\n  resource_group_id BIGINT NOT NULL,\n  priority BIGINT NOT NULL,\n  user_regex VARCHAR(512),\n  source_regex VARCHAR(512),\n  query_type VARCHAR(512),\n  client_tags VARCHAR(512),\n  FOREIGN KEY (resource_group_id) REFERENCES resource_groups (resource_group_id)\n)\u0027, parameters\u003dParsedParameters{positional\u003dfalse, parameterNames\u003d[]}}\", arguments:{ positional:{}, named:{}, finder:[]}]",
          "isError": false
        }
      ],
      "nbFailures": 7,
      "nbErrors": 0
    }
  ]
}