{
  "totalNumberSkippingTests": 4,
  "bugType": "only_fail",
  "totalNumberErroringTests": 10,
  "repo": "INRIA/spoon",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 4,
      "ComputeClasspath": 4,
      "ComputeTestDir": 0,
      "ResolveDependency": 20,
      "BuildProject": 26,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 5,
      "CloneRepository": 6,
      "NopolRepair": 118,
      "CheckoutPatchedBuild": 0,
      "TestProject": 377,
      "GatherTestInformation": 0,
      "PushIncriminatedBuild": 8,
      "AstorRepair": 190,
      "CommitPatch": 9
    },
    "FailureNames": [
      "spoon.SpoonException",
      "java.lang.NumberFormatException",
      "java.lang.ArrayIndexOutOfBoundsException",
      "java.lang.AssertionError"
    ],
    "NbFailingTests": 14,
    "BugCommitUrl": "http://github.com/INRIA/spoon/commit/94d080c9faf657fd306814f2575bc7131e69d369",
    "ReproductionDate": "Apr 12, 2018 2:53:23 PM",
    "BuggyBuildId": 365591521,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/INRIA/spoon/builds/365591521",
    "BuggyBuildDate": "Apr 12, 2018 2:53:14 PM",
    "BugCommit": "94d080c9faf657fd306814f2575bc7131e69d369",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 1409,
    "NbLibraries": 14,
    "NbFileApp": 1082,
    "NbFileTests": 1318,
    "NbCPU": 32,
    "FreeMemory": 4326995112,
    "TotalMemory": 6097993728,
    "AngelicValuesByTest": {
      "spoon/test/annotation/AnnotationTest": 0,
      "spoon/test/architecture/SpoonArchitectureEnforcerTest": 0,
      "spoon/test/prettyprinter/PrinterTest": 0,
      "spoon/test/query_function/VariableReferencesTest": 0,
      "spoon/test/comment/CommentTest": 0,
      "spoon/test/annotation/AnnotationValuesTest": 0,
      "spoon/MavenLauncherTest": 0,
      "spoon/test/main/MainTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 491789648,
      "ComputeClasspath": 576598912,
      "ComputeTestDir": 475052864,
      "ResolveDependency": 643253192,
      "BuildProject": 596939360,
      "NPERepair": 578325752,
      "ComputeSourceDir": 576598912,
      "InitRepoToPush": 633752112,
      "CloneRepository": 596433648,
      "NopolRepair": 4473165368,
      "CheckoutPatchedBuild": 4326995112,
      "TestProject": 559580408,
      "GatherTestInformation": 536418632,
      "PushIncriminatedBuild": 578325752,
      "AstorRepair": 498675104,
      "CommitPatch": 4326995112
    }
  },
  "failingModule": "/root/workspace/INRIA/spoon/365591521",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 4,
  "error-types": [
    "spoon.SpoonException",
    "java.lang.NumberFormatException",
    "java.lang.ArrayIndexOutOfBoundsException",
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 1409,
  "failing-test-cases": [
    {
      "className": "spoon.test.annotation.AnnotationValuesTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.annotation.AnnotationValuesTest#testValuesOnJava7Annotation",
        "spoon.test.annotation.AnnotationValuesTest#testValuesOnJava8Annotation"
      ],
      "failures": [
        {
          "failureName": "java.lang.ArrayIndexOutOfBoundsException",
          "isError": true
        },
        {
          "failureName": "java.lang.ArrayIndexOutOfBoundsException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.architecture.SpoonArchitectureEnforcerTest#testGoodTestClassNames"
      ],
      "failures": [
        {
          "failureName": "java.lang.ArrayIndexOutOfBoundsException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.annotation.AnnotationTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.annotation.AnnotationTest#testAnnotatedElementTypes",
        "spoon.test.annotation.AnnotationTest#testAbstractAllAnnotationProcessorWithGlobalAnnotation"
      ],
      "failures": [
        {
          "failureName": "java.lang.ArrayIndexOutOfBoundsException",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Explicit modifier not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.main.MainTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.main.MainTest#testTest"
      ],
      "failures": [
        {
          "failureName": "java.lang.ArrayIndexOutOfBoundsException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.MavenLauncherTest",
      "failingMethods": [
        "spoon.MavenLauncherTest#spoonMavenLauncherTest",
        "spoon.MavenLauncherTest#mavenLauncherTestMultiModulesAndVariables"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Content of classpath: ",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c7\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.comment.CommentTest",
      "failingMethods": [
        "spoon.test.comment.CommentTest#testCommentsInComment1And2",
        "spoon.test.comment.CommentTest#testInLineComment"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c4\u003e but was:\u003c3\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c66\u003e but was:\u003c65\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.query_function.VariableReferencesTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.query_function.VariableReferencesTest#testVariableReferenceFunction",
        "spoon.test.query_function.VariableReferencesTest#testCheckModelConsistency",
        "spoon.test.query_function.VariableReferencesTest#testCatchVariableReferenceFunction"
      ],
      "failures": [
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "For input string: \"The main purpose of this test is to be transfomed by Spoon into Spoon model, \nwhich is then used by {@link spoon.test.query_function.VariableReferencesTest}\n\nThe values of the fields must be a sequence starting from 1\"",
          "isError": true
        },
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "For input string: \"The main purpose of this test is to be transfomed by Spoon into Spoon model, \nwhich is then used by {@link spoon.test.query_function.VariableReferencesTest}\n\nThe values of the fields must be a sequence starting from 1\"",
          "isError": true
        },
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "For input string: \"The main purpose of this test is to be transfomed by Spoon into Spoon model, \nwhich is then used by {@link spoon.test.query_function.VariableReferencesTest}\n\nThe values of the fields must be a sequence starting from 1\"",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.prettyprinter.PrinterTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.prettyprinter.PrinterTest#testPrinterTokenListener"
      ],
      "failures": [
        {
          "failureName": "java.lang.ArrayIndexOutOfBoundsException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ]
}