{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "swagger-api/swagger-core",
  "failingModule": "/root/workspace/swagger-api/swagger-core/251291494/modules/swagger-jaxrs2",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 2,
  "error-types": [
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 210,
  "failing-test-cases": [
    {
      "className": "io.swagger.jaxrs2.annotations.callbacks.CallbackTest",
      "failingMethods": [
        "io.swagger.jaxrs2.annotations.callbacks.CallbackTest#testSimpleCallback"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected [/test:     post:       description: \"subscribes a client to updates relevant to the requestor\u0027s account,\\         \\ as identified by the input token.  The supplied url will be used as the\\         \\ delivery address for response payloads\"       operationId: \"subscribe\"       parameters:       - name: \"x-auth-token\"         in: \"header\"         schema:           type: \"string\"           description: \"the authentication token provided after initially authenticating\\             \\ to the application\"           readOnly: true       - name: \"url\"         in: \"query\"         schema:           type: \"string\"           description: \"the URL to call with response data\"       responses:         default:           description: \"no description\"           content:             \u0027*/*\u0027:               schema:                 $ref: \"#/components/schemas/SubscriptionResponse\"       callbacks:         subscription:           http://$request.query.url:             post:               description: \"payload data will be sent \"               parameters:               - name: \"subscriptionId\"                 in: \"path\"                 required: true                 schema:                   type: \"string\"                   description: \"the generated UUID\"                   format: \"uuid\"                   readOnly: true               responses:                 200:                   description: \"Return this code if the callback was received and\\                     \\ processed successfully\"                 205:                   description: \"Return this code to unsubscribe from future data updates\"                 default:                   description: \"All other response codes will disable this callback\\                     \\ subscription\" components:   schemas:     string:       type: \"string\"       description: \"the generated UUID\"       format: \"uuid\"       readOnly: true     SubscriptionResponse:       type: \"object\"       properties:         subscriptionId:           type: \"string\"] but found [/test:     post:       description: subscribes a client to updates relevant to the requestor\u0027s account, as identified by the input token.  The supplied url will be used as the delivery address for response payloads       operationId: subscribe       parameters:       - name: x-auth-token         in: header         schema:           type: string           description: the authentication token provided after initially authenticating to the application           readOnly: true       - name: url         in: query         schema:           type: string           description: the URL to call with response data       responses:         default:           description: no description           content:             \u0027*/*\u0027:               schema:                 $ref: \u0027#/components/schemas/SubscriptionResponse\u0027       callbacks:         subscription:           http://$request.query.url:             post:               description: \u0027payload data will be sent \u0027               parameters:               - name: subscriptionId                 in: path                 required: true                 schema:                   type: string                   description: the generated UUID                   format: uuid                   readOnly: true               responses:                 200:                   description: Return this code if the callback was received and processed successfully                 205:                   description: Return this code to unsubscribe from future data updates                 default:                   description: All other response codes will disable this callback subscription components:   schemas:     string:       type: string       description: the generated UUID       format: uuid       readOnly: true     SubscriptionResponse:       type: object       properties:         subscriptionId:           type: string]",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "io.swagger.jaxrs2.annotations.info.InfoTest",
      "failingMethods": [
        "io.swagger.jaxrs2.annotations.info.InfoTest#testSimpleInfoGet"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected [info:   title: \"the title\"   description: \"My API\"   contact:     name: \"Fred\"     url: \"http://gigantic-server.com\"     email: \"Fred@gigagantic-server.com\"   license:     name: \"Apache 2.0\"     url: \"http://foo.bar\"   version: \"0.0\"] but found [info:   title: the title   description: My API   contact:     name: Fred     url: http://gigantic-server.com     email: Fred@gigagantic-server.com   license:     name: Apache 2.0     url: http://foo.bar   version: \"0.0\"]",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ]
}