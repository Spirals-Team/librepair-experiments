{
  "totalNumberSkippingTests": 59,
  "bugType": "only_fail",
  "totalNumberErroringTests": 371,
  "repo": "druid-io/druid",
  "metrics": {
    "FailureNames": [
      "java.lang.NullPointerException"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 11,
      "ComputeClasspath": 4,
      "ComputeTestDir": 0,
      "ResolveDependency": 16,
      "BuildProject": 453,
      "NPERepair": 17,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 200,
      "CloneRepository": 63,
      "NopolRepair": 4106,
      "CheckoutPatchedBuild": 0,
      "TestProject": 3370,
      "GatherTestInformation": 13,
      "PushIncriminatedBuild": 371,
      "CommitPatch": 67
    },
    "NbFailingTests": 371,
    "BugCommitUrl": "http://github.com/druid-io/druid/commit/9f3cd24ccbf208569babd024c6d1136636939318",
    "NbRunningTests": 75210,
    "NbLibraries": 81,
    "NbFileApp": 4362,
    "NbFileTests": 1622,
    "NbCPU": 8,
    "FreeMemory": 1821202920,
    "TotalMemory": 4454875136,
    "AngelicValuesByTest": {
      "io/druid/segment/filter/InFilterTest": 31,
      "io/druid/segment/filter/RegexFilterTest": 31,
      "io/druid/query/select/SelectQueryRunnerTest": 22,
      "io/druid/segment/filter/SearchQueryFilterTest": 31,
      "io/druid/query/timeseries/TimeseriesQueryRunnerTest": 43,
      "io/druid/segment/filter/BoundFilterTest": 31,
      "io/druid/segment/filter/FilterPartitionTest": 31,
      "io/druid/segment/filter/ExpressionFilterTest": 31,
      "io/druid/segment/filter/InvalidFilteringTest": 31,
      "io/druid/segment/filter/SelectorFilterTest": 31,
      "io/druid/segment/filter/AndFilterTest": 31,
      "io/druid/segment/filter/JavaScriptFilterTest": 31
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 220370656,
      "ComputeClasspath": 495550672,
      "ComputeTestDir": 541035040,
      "ResolveDependency": 527892360,
      "BuildProject": 440566360,
      "NPERepair": 499061360,
      "ComputeSourceDir": 495550672,
      "InitRepoToPush": 314044024,
      "CloneRepository": 511283920,
      "NopolRepair": 2079346464,
      "CheckoutPatchedBuild": 1821202920,
      "TestProject": 405489832,
      "GatherTestInformation": 233944976,
      "PushIncriminatedBuild": 531684112,
      "CommitPatch": 1821202920
    },
    "ReproductionDate": "Aug 21, 2017 9:16:02 AM",
    "BuggyBuildId": 266657822,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/druid-io/druid/builds/266657822",
    "BuggyBuildDate": "Aug 21, 2017 5:13:09 AM",
    "BugCommit": "9f3cd24ccbf208569babd024c6d1136636939318",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0
  },
  "failingModule": "/root/workspace/druid-io/druid/266657822/processing",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 0,
  "error-types": [
    "java.lang.NullPointerException"
  ],
  "totalNumberRunningTests": 75210,
  "failing-test-cases": [
    {
      "className": "io.druid.segment.filter.InFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.InFilterTest#testMatchWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMatchWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMatchWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMatchWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMatchWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMatchWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testMatchWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.InFilterTest#testMatchWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.InFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 48
    },
    {
      "className": "io.druid.segment.filter.InvalidFilteringTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.InvalidFilteringTest#testFilterTheUnfilterable[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.InvalidFilteringTest#testFilterTheUnfilterable[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.InvalidFilteringTest#testFilterTheUnfilterable[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.InvalidFilteringTest#testFilterTheUnfilterable[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "io.druid.segment.filter.SelectorFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.SelectorFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testSelectorWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testWithTimeExtractionFnNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testSelectorWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testWithTimeExtractionFnNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testSelectorWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testWithTimeExtractionFnNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testWithTimeExtractionFnNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testSelectorWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SelectorFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SelectorFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 56
    },
    {
      "className": "io.druid.segment.filter.BoundFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchWithNegatives[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testNumericMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testNumericMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchWithNegatives[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testNumericMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testNumericMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testNumericMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testNumericMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchWithNegatives[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchWithNegatives[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testNumericMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testNumericMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchNull[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.BoundFilterTest#testAlphaNumericMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.BoundFilterTest#testLexicographicMatchTooStrict[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 64
    },
    {
      "className": "io.druid.query.timeseries.TimeseriesQueryRunnerTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithNonExistentFilter[noRollupMMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithFilterOnNonExistentDimensionSkipBuckets[mMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithFilterOnNonExistentDimension[mMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithNonExistentFilter[mMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithFilterOnNonExistentDimension[mergedRealtimeIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithNonExistentFilterAndMultiDim[mergedRealtimeIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithFilterOnNonExistentDimensionSkipBuckets[mergedRealtimeIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithNonExistentFilterAndMultiDim[noRollupMMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithFilterOnNonExistentDimension[noRollupMMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithNonExistentFilterAndMultiDim[mMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithFilterOnNonExistentDimensionSkipBuckets[noRollupMMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.timeseries.TimeseriesQueryRunnerTest#testTimeseriesWithNonExistentFilter[mergedRealtimeIndex:descending\u003dtrue]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 24
    },
    {
      "className": "io.druid.segment.filter.JavaScriptFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.JavaScriptFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testJavascriptFilterWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testSingleValueStringColumnWithoutNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testJavascriptFilterWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testJavascriptFilterWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testSingleValueStringColumnWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.JavaScriptFilterTest#testJavascriptFilterWithLookupExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 48
    },
    {
      "className": "io.druid.query.select.SelectQueryRunnerTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.query.select.SelectQueryRunnerTest#testFullSelectNoResults[noRollupMMappedTestIndex:descending\u003dtrue]",
        "io.druid.query.select.SelectQueryRunnerTest#testFullSelectNoResults[mergedRealtimeIndex:descending\u003dtrue]",
        "io.druid.query.select.SelectQueryRunnerTest#testFullSelectNoResults[mMappedTestIndex:descending\u003dtrue]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "io.druid.segment.filter.FilterPartitionTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.FilterPartitionTest#testBasicPreAndPostFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.FilterPartitionTest#testBasicPreAndPostFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testBasicPreAndPostFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testSinglePreFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testSinglePostFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testBasicPreAndPostFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.FilterPartitionTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testSinglePreFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.FilterPartitionTest#testSinglePreFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testSinglePostFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testOrPostFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.FilterPartitionTest#testSinglePreFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.FilterPartitionTest#testOrPostFilterWithNulls[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 32
    },
    {
      "className": "io.druid.segment.filter.RegexFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.RegexFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.RegexFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.RegexFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.RegexFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.RegexFilterTest#testRegexWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.RegexFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.RegexFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.RegexFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.RegexFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.RegexFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.RegexFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.RegexFilterTest#testRegexWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.RegexFilterTest#testRegexWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.RegexFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.RegexFilterTest#testRegexWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.RegexFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 32
    },
    {
      "className": "io.druid.segment.filter.ExpressionFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.ExpressionFilterTest#testConstantExpression[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.ExpressionFilterTest#testConstantExpression[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.ExpressionFilterTest#testMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.ExpressionFilterTest#testMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.ExpressionFilterTest#testMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.ExpressionFilterTest#testMissingColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.ExpressionFilterTest#testConstantExpression[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.ExpressionFilterTest#testConstantExpression[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 16
    },
    {
      "className": "io.druid.segment.filter.SearchQueryFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.SearchQueryFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testSearchQueryWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testSearchQueryWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testSearchQueryWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testSearchQueryWithExtractionFn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMultiValueStringColumn[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMissingColumnSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.SearchQueryFilterTest#testMissingColumnNotSpecifiedInDimensionList[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 32
    },
    {
      "className": "io.druid.segment.filter.AndFilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.segment.filter.AndFilterTest#testAnd[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[true]]",
        "io.druid.segment.filter.AndFilterTest#testAnd[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[true]]",
        "io.druid.segment.filter.AndFilterTest#testAnd[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmappedMerged], optimize[false]]",
        "io.druid.segment.filter.AndFilterTest#testAnd[bitmaps[roaring], indexMerger[IndexMergerV9], finisher[mmapped], optimize[false]]"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    }
  ]
}