{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "google/closure-compiler",
  "failingModule": "/root/workspace/google/closure-compiler/378203509",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 14,
  "error-types": [
    "junit.framework.AssertionFailedError",
    "java.lang.AssertionError",
    "org.junit.ComparisonFailure"
  ],
  "totalNumberRunningTests": 13261,
  "failing-test-cases": [
    {
      "className": "com.google.javascript.jscomp.RewriteGoogJsImportsTest",
      "failingMethods": [
        "com.google.javascript.jscomp.RewriteGoogJsImportsTest#testBadPropertyAccess",
        "com.google.javascript.jscomp.RewriteGoogJsImportsTest#testImportStar",
        "com.google.javascript.jscomp.RewriteGoogJsImportsTest#testBaseAndGoogUntouched"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Not true that \u003c(com.google.javascript.jscomp.JSError[]) [JSC_CANNOT_NAME_FILE_GOOG. Do not name files goog.js, it is reserved for Closure Library. at /closure/goog.js line (unknown line) : (unknown column)]\u003e is empty",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Not true that \u003c(com.google.javascript.jscomp.JSError[]) [JSC_CANNOT_NAME_FILE_GOOG. Do not name files goog.js, it is reserved for Closure Library. at /closure/goog.js line (unknown line) : (unknown column)]\u003e is empty",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Not true that \u003c(com.google.javascript.jscomp.JSError[]) [JSC_CANNOT_NAME_FILE_GOOG. Do not name files goog.js, it is reserved for Closure Library. at /closure/goog.js line (unknown line) : (unknown column)]\u003e is empty",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "com.google.javascript.jscomp.deps.DepsGeneratorTest",
      "failingMethods": [
        "com.google.javascript.jscomp.deps.DepsGeneratorTest#testGoogPathRequireBetweenEs6ModulesIsInvalid",
        "com.google.javascript.jscomp.deps.DepsGeneratorTest#testGoogPathRequireForGoogModuleFromEs6ModuleIsInvalid",
        "com.google.javascript.jscomp.deps.DepsGeneratorTest#testGoogPathRequireForEs6ModuleInDepsFileFromGoogModule",
        "com.google.javascript.jscomp.deps.DepsGeneratorTest#testEs6Modules",
        "com.google.javascript.jscomp.deps.DepsGeneratorTest#testGoogPathRequireForEs6ModuleFromGoogModule",
        "com.google.javascript.jscomp.deps.DepsGeneratorTest#testEs6ModuleWithGoogProvide",
        "com.google.javascript.jscomp.deps.DepsGeneratorTest#testGoogPathRequireForGoogModuleFromGoogModuleIsInvalid",
        "com.google.javascript.jscomp.deps.DepsGeneratorTest#testGoogPathRequireFromNonModuleIsInvalid"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "Expected 0 errors but got\nDEPS_UNKNOWN_PATH_IMPORT. Could not find file \"../closure/goog/es6.js\". at /base/javascript/foo/foo.js line (unknown line) : (unknown column)",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[Use ES6 import rather than goog.require to import ES6 module \"/base/javascript]/closure/goog/array....\u003e but was:\u003c[Could not find file \"..]/closure/goog/array....\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "Expected 2 errors but got\nDEPS_UNKNOWN_PATH_IMPORT. Could not find file \"../closure/goog/examplemodule.js\". at /base/javascript/foo/foo.js line (unknown line) : (unknown column)",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cC[annot goog.require \"/base/javascript/closure/goog/examplemodule.js\" by path. It is not an ES6 module].\u003e but was:\u003cC[ould not find file \"../closure/goog/examplemodule.js\"].\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cC[annot goog.require by path outside of a goog.module].\u003e but was:\u003cC[ould not find file \"../closure/goog/array.js\"].\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "Expected 0 errors but got\nDEPS_UNKNOWN_PATH_IMPORT. Could not find file \"../closure/goog/es6.js\". at /base/javascript/foo/foo.js line (unknown line) : (unknown column)",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "Expected 0 errors but got\nDEPS_UNKNOWN_PATH_IMPORT. Could not find file \"../closure/goog/es6\". at /base/javascript/foo/foo.js line (unknown line) : (unknown column)",
          "isError": false
        },
        {
          "failureName": "junit.framework.AssertionFailedError",
          "failureDetail": "Expected 0 errors but got\nDEPS_UNKNOWN_PATH_IMPORT. Could not find file \"../closure/goog/es6.js\". at /base/javascript/foo/foo.js line (unknown line) : (unknown column)",
          "isError": false
        }
      ],
      "nbFailures": 8,
      "nbErrors": 0
    },
    {
      "className": "com.google.javascript.jscomp.deps.JsFileParserTest",
      "failingMethods": [
        "com.google.javascript.jscomp.deps.JsFileParserTest#testParseEs6Module4",
        "com.google.javascript.jscomp.deps.JsFileParserTest#testParseEs6Module",
        "com.google.javascript.jscomp.deps.JsFileParserTest#testParseEs6Module2"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Not true that \u003cSimpleDependencyInfo{name\u003db.js, pathRelativeToClosureBase\u003da.js, provides\u003d[module$b], requires\u003d[Require{symbol\u003dmodule$yes2, rawText\u003d./yes2, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$a$b$a$b$C, rawText\u003d./a/b/C, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$a$b$a$b$d, rawText\u003d./a/b/d, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$dquote, rawText\u003d./dquote, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$exported, rawText\u003d./exported, type\u003dES6_IMPORT}], weakRequires\u003d[], loadFlags\u003d{module\u003des6}}\u003e is equal to \u003cSimpleDependencyInfo{name\u003db.js, pathRelativeToClosureBase\u003da.js, provides\u003d[module$b], requires\u003d[Require{symbol\u003dmodule$yes2, rawText\u003d./yes2, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$a$b$C, rawText\u003d./a/b/C, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$a$b$d, rawText\u003d./a/b/d, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$dquote, rawText\u003d./dquote, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$exported, rawText\u003d./exported, type\u003dES6_IMPORT}], weakRequires\u003d[], loadFlags\u003d{module\u003des6}}\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Not true that \u003cSimpleDependencyInfo{name\u003d/foo/bar/a/b.js, pathRelativeToClosureBase\u003d../../a/b.js, provides\u003d[module$foo$bar$a$b], requires\u003d[Require{symbol\u003dmodule$x, rawText\u003d./x, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$__$__$y, rawText\u003d../y, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$__$a$z, rawText\u003d../a/z, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$__$c$w, rawText\u003d../c/w, type\u003dES6_IMPORT}], weakRequires\u003d[], loadFlags\u003d{module\u003des6}}\u003e is equal to \u003cSimpleDependencyInfo{name\u003d/foo/bar/a/b.js, pathRelativeToClosureBase\u003d../../a/b.js, provides\u003d[module$foo$bar$a$b], requires\u003d[Require{symbol\u003dmodule$foo$bar$a$x, rawText\u003d./x, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$foo$bar$y, rawText\u003d../y, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$foo$bar$a$z, rawText\u003d../a/z, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$foo$bar$c$w, rawText\u003d../c/w, type\u003dES6_IMPORT}], weakRequires\u003d[], loadFlags\u003d{module\u003des6}}\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Not true that \u003cSimpleDependencyInfo{name\u003d/foo/js/bar/baz.js, pathRelativeToClosureBase\u003d../bar/baz.js, provides\u003d[module$js$bar$baz], requires\u003d[Require{symbol\u003dmodule$a, rawText\u003d./a, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$qux$qux$b, rawText\u003d./qux/b, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$__$closure$c, rawText\u003d../closure/c, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$__$closure$closure$d$e, rawText\u003d../closure/d/e, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$__$__$__$corge$f, rawText\u003d../../corge/f, type\u003dES6_IMPORT}], weakRequires\u003d[], loadFlags\u003d{module\u003des6}}\u003e is equal to \u003cSimpleDependencyInfo{name\u003d/foo/js/bar/baz.js, pathRelativeToClosureBase\u003d../bar/baz.js, provides\u003d[module$js$bar$baz], requires\u003d[Require{symbol\u003dmodule$js$bar$a, rawText\u003d./a, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$js$bar$qux$b, rawText\u003d./qux/b, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$js$closure$c, rawText\u003d../closure/c, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$js$closure$d$e, rawText\u003d../closure/d/e, type\u003dES6_IMPORT}, Require{symbol\u003dmodule$corge$f, rawText\u003d../../corge/f, type\u003dES6_IMPORT}], weakRequires\u003d[], loadFlags\u003d{module\u003des6}}\u003e",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    }
  ]
}