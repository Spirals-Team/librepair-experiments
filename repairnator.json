{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 19,
  "repo": "ZupIT/event-sourcing-framework",
  "bugCommit": "https://github.com/ZupIT/event-sourcing-framework/compare/699c60be21b5...bc89c7e10490",
  "failingModule": "/root/workspace/ZupIT/event-sourcing-framework/373503811/event-store-connector",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 0,
  "error-types": [
    "akka.pattern.AskTimeoutException",
    "java.lang.Exception"
  ],
  "totalNumberRunningTests": 61,
  "failing-test-cases": [
    {
      "className": "br.com.zup.eventsourcing.eventstore.MyAggregateRootSubscriberTest",
      "failingMethods": [],
      "erroringMethods": [
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootSubscriberTest#shouldHandleWithSuccess"
      ],
      "failures": [
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "br.com.zup.eventsourcing.eventstore.OverridesTest",
      "failingMethods": [],
      "erroringMethods": [
        "br.com.zup.eventsourcing.eventstore.OverridesTest#createAndModifyAggregate",
        "br.com.zup.eventsourcing.eventstore.OverridesTest#saveMyAggregateCreateAndGet",
        "br.com.zup.eventsourcing.eventstore.OverridesTest#saveMyAggregate_WithoutMetaData"
      ],
      "failures": [
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#-916289318]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#-916289318]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#-916289318]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#saveModifyAndThenSaveAgain",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#getStreamNotFoundException",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#saveWithWrongExpectedVersion",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#getMetaData_whenTwoEvents",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#getMetaData_whenOnlyOneEvent",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#saveMyAggregate_WithMetaData",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#saveMyAggregate_WithoutMetaData",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#createAndModifyAggregateWithTenant",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#saveWithoutOptimisticLock",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#createAndModifyAggregate",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#saveMyAggregateWithTenantCreateAndGet",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#getSavedEventsWithTenant",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#saveMyAggregateCreateAndGet",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#saveMyAggregateCreateNoModifyAndSaveAgain",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#getSavedEvents"
      ],
      "failures": [
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cbr.com.zup.eventsourcing.core.Repository$NotFoundException\u003e but was\u003cakka.pattern.AskTimeoutException\u003e",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003ceventstore.WrongExpectedVersionException\u003e but was\u003cakka.pattern.AskTimeoutException\u003e",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 15
    }
  ]
}