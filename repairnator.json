{
  "totalNumberSkippingTests": 59,
  "bugType": "failing_passing",
  "totalNumberErroringTests": 0,
  "repo": "druid-io/druid",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 14,
      "ComputeClasspath": 3,
      "ComputeTestDir": 0,
      "ResolveDependency": 14,
      "BuildProject": 320,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 9,
      "CloneRepository": 29,
      "NopolRepair": 19,
      "CheckoutPatchedBuild": 1,
      "TestProject": 448,
      "GatherTestInformation": 1,
      "PushIncriminatedBuild": 8,
      "AstorRepair": 379,
      "CommitPatch": 10
    },
    "FailureNames": [
      "java.lang.AssertionError"
    ],
    "NbFailingTests": 30,
    "BugCommitUrl": "http://github.com/druid-io/druid/commit/b87f4012ff9a08eea06d7e0fd18f9606ffd93692",
    "PatchCommitUrl": "http://github.com/druid-io/druid/commit/b37e6371014f62dcaa8c97e810eb0f6bc656363d",
    "ReproductionDate": "Jan 25, 2018 8:49:10 PM",
    "BuggyBuildId": 210761325,
    "PatchedBuilId": 211027982,
    "BuggyBuildURL": "http://travis-ci.org/druid-io/druid/builds/210761325",
    "PatchedBuildURL": "http://travis-ci.org/druid-io/druid/builds/211027982",
    "BuggyBuildDate": "Mar 14, 2017 12:40:46 AM",
    "PatchedBuildDate": "Mar 14, 2017 6:38:08 PM",
    "BugCommit": "b87f4012ff9a08eea06d7e0fd18f9606ffd93692",
    "PatchCommit": "b37e6371014f62dcaa8c97e810eb0f6bc656363d",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 20206,
    "NbLibraries": 79,
    "NbFileApp": 0,
    "NbFileTests": 0,
    "NbCPU": 32,
    "FreeMemory": 1876714640,
    "TotalMemory": 2438987776,
    "AngelicValuesByTest": {
      "io/druid/query/groupby/GroupByQueryRunnerTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 983598640,
      "ComputeClasspath": 507815312,
      "ComputeTestDir": 968034432,
      "ResolveDependency": 948182472,
      "BuildProject": 851755608,
      "NPERepair": 513340128,
      "ComputeSourceDir": 507815312,
      "InitRepoToPush": 405558320,
      "CloneRepository": 658023936,
      "NopolRepair": 2102955992,
      "CheckoutPatchedBuild": 1876714640,
      "TestProject": 815598912,
      "GatherTestInformation": 719976320,
      "PushIncriminatedBuild": 513340128,
      "AstorRepair": 853778664,
      "CommitPatch": 1882507896
    }
  },
  "failingModule": "/root/workspace/druid-io/druid/210761325/processing",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 30,
  "error-types": [
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 20206,
  "failing-test-cases": [
    {
      "className": "io.druid.query.groupby.GroupByQueryRunnerTest",
      "failingMethods": [
        "io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config\u003dv2SmallBuffer, runner\u003dnoRollupMMappedTestIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config\u003dv2, runner\u003dnoRollupMMappedTestIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config\u003dv2SmallDictionary, runner\u003dmergedRealtimeIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config\u003dv2, runner\u003dmMappedTestIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config\u003dv2SmallBuffer, runner\u003dnoRollupRtIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config\u003dv2SmallBuffer, runner\u003dnoRollupMMappedTestIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config\u003dv2SmallDictionary, runner\u003drtIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config\u003dv2SmallBuffer, runner\u003drtIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config\u003dv2, runner\u003dnoRollupMMappedTestIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config\u003dv2SmallDictionary, runner\u003dnoRollupRtIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config\u003dv2, runner\u003dnoRollupRtIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config\u003dv2SmallBuffer, runner\u003dnoRollupRtIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config\u003dv2, runner\u003drtIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config\u003dv2SmallBuffer, runner\u003dmergedRealtimeIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config\u003dv2SmallDictionary, runner\u003dnoRollupMMappedTestIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config\u003dv2, runner\u003dmergedRealtimeIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config\u003dv2, runner\u003dnoRollupRtIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config\u003dv2SmallDictionary, runner\u003drtIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config\u003dv2SmallBuffer, runner\u003dmMappedTestIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config\u003dv2SmallDictionary, runner\u003dmergedRealtimeIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config\u003dv2SmallBuffer, runner\u003dmMappedTestIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config\u003dv2, runner\u003dmMappedTestIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config\u003dv2, runner\u003dmergedRealtimeIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config\u003dv2SmallBuffer, runner\u003dmergedRealtimeIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config\u003dv2SmallDictionary, runner\u003dnoRollupRtIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config\u003dv2SmallDictionary, runner\u003dmMappedTestIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config\u003dv2SmallDictionary, runner\u003dnoRollupMMappedTestIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config\u003dv2SmallBuffer, runner\u003drtIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testSubqueryWithOuterMaxOnDiskStorageContextOverride[config\u003dv2, runner\u003drtIndex]",
        "io.druid.query.groupby.GroupByQueryRunnerTest#testGroupByMaxOnDiskStorageContextOverride[config\u003dv2SmallDictionary, runner\u003dmMappedTestIndex]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)\n at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)\n at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)\n at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)\n at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)\n at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)\n at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)\n at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)\n at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)\n at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)\n at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)\n at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)\n at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)\n at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)\n at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)\n at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)\n at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:171)\n at io.druid.query.groupby.epinephelinae.GroupByRowProcessor$2.make(GroupByRowProcessor.java:126)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testSubqueryWithOuterMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1340)\n at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of io.druid.query.ResourceLimitExceededException and exception with message a string containing \"Grouping resources exhausted\")\n     but: exception with message a string containing \"Grouping resources exhausted\" message was \"Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\"\nStacktrace was: io.druid.query.ResourceLimitExceededException: Not enough resources to execute this query. Try increasing druid.query.groupBy.maxOnDiskStorage, druid.query.groupBy.maxMergingDictionarySize, or druid.processing.buffer.sizeBytes.\n at io.druid.query.groupby.GroupByQueryHelper.throwAccumulationResourceLimitExceededException(GroupByQueryHelper.java:269)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.waitForFutureCompletion(GroupByMergingQueryRunnerV2.java:316)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2.access$700(GroupByMergingQueryRunnerV2.java:74)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:260)\n at io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1.make(GroupByMergingQueryRunnerV2.java:155)\n at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43)\n at io.druid.common.guava.CombiningSequence.accumulate(CombiningSequence.java:64)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50)\n at io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55)\n at io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45)\n at io.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43)\n at io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\n at io.druid.query.groupby.GroupByQueryRunnerTestHelper.runQuery(GroupByQueryRunnerTestHelper.java:55)\n at io.druid.query.groupby.GroupByQueryRunnerTest.testGroupByMaxOnDiskStorageContextOverride(GroupByQueryRunnerTest.java:1291)\n at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.junit.runners.Suite.runChild(Suite.java:127)\n at org.junit.runners.Suite.runChild(Suite.java:26)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        }
      ],
      "nbFailures": 30,
      "nbErrors": 0
    }
  ]
}