{
  "totalNumberSkippingTests": 4,
  "bugType": "only_fail",
  "totalNumberErroringTests": 3,
  "repo": "INRIA/spoon",
  "metrics": {
    "FailureNames": [
      "spoon.SpoonException",
      "java.lang.AssertionError"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 3,
      "ComputeClasspath": 5,
      "ComputeTestDir": 0,
      "BuildProject": 41,
      "InitRepoToPush": 4,
      "ComputeSourceDir": 0,
      "AstorJMut": 15,
      "CloneRepository": 7,
      "CheckoutPatchedBuild": 0,
      "Nopol": 53,
      "NPEFix": 0,
      "TestProject": 430,
      "GatherTestInformation": 0,
      "CommitPatch": 3
    },
    "NbFailingTests": 2,
    "NbErroringTests": 3,
    "NbSkippingTests": 4,
    "NbRunningTests": 1439,
    "BugCommitUrl": "http://github.com/INRIA/spoon/commit/238bcad2d40170502b12776d30a1e01d60ad7991",
    "ReproductionDate": "Jun 4, 2018 9:51:04 AM",
    "BuggyBuildId": 387660365,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/INRIA/spoon/builds/387660365",
    "BuggyBuildDate": "Jun 4, 2018 9:50:41 AM",
    "BugCommit": "238bcad2d40170502b12776d30a1e01d60ad7991",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 1,
    "NbLibraries": 14,
    "NbFileApp": 0,
    "NbFileTests": 663,
    "NbCPU": 32,
    "FreeMemory": 3503240896,
    "TotalMemory": 4006608896,
    "AngelicValuesByTest": {
      "spoon/test/lambda/LambdaTest": 0,
      "spoon/MavenLauncherTest": 0,
      "spoon/test/main/MainTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 401150960,
      "ComputeClasspath": 477416856,
      "ComputeTestDir": 477416856,
      "BuildProject": 390422600,
      "InitRepoToPush": 481109256,
      "ComputeSourceDir": 477416856,
      "AstorJMut": 3568079248,
      "CloneRepository": 498519568,
      "CheckoutPatchedBuild": 3503240896,
      "Nopol": 1115909696,
      "NPEFix": 1115909696,
      "TestProject": 379866712,
      "GatherTestInformation": 358453176,
      "CommitPatch": 3503240896
    },
    "NbSucceedingTests": 1434
  },
  "failingModule": "/root/workspace/INRIA/spoon/387660365",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 2,
  "error-types": [
    "spoon.SpoonException",
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 1439,
  "failing-test-cases": [
    {
      "className": "spoon.test.main.MainTest",
      "failingMethods": [],
      "erroringMethods": [
        "testTest"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "spoon.SpoonException: The lambda can be based on interface, which has only one method. But spoon.test.lambda.testclasses.Foo$CheckPersons has at least two: test(spoon.test.lambda.testclasses.Foo$Person,spoon.test.lambda.testclasses.Foo$Person) and equals(java.lang.Object)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.MavenLauncherTest",
      "failingMethods": [
        "mavenLauncherTestMultiModulesAndVariables",
        "spoonMavenLauncherTest"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Content of classpath: ",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c7\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.lambda.LambdaTest",
      "failingMethods": [],
      "erroringMethods": [
        "testInterfaceWithObjectMethods",
        "testCompileLambdaGeneratedBySpoon"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The lambda can be based on interface, which has only one method. But spoon.test.lambda.testclasses.Foo$CheckPersons has at least two: test(spoon.test.lambda.testclasses.Foo$Person,spoon.test.lambda.testclasses.Foo$Person) and equals(java.lang.Object)",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The lambda can be based on interface, which has only one method. But spoon.test.lambda.testclasses.Foo$CheckPersons has at least two: test(spoon.test.lambda.testclasses.Foo$Person,spoon.test.lambda.testclasses.Foo$Person) and equals(java.lang.Object)",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    }
  ]
}