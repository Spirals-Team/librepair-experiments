{
  "totalNumberSkippingTests": 4,
  "bugType": "only_fail",
  "totalNumberErroringTests": 17,
  "repo": "INRIA/spoon",
  "failingModule": "/root/workspace/INRIA/spoon/367330065",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 2,
  "error-types": [
    "java.lang.UnsupportedOperationException",
    "spoon.SpoonException",
    "java.io.NotSerializableException",
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 1410,
  "failing-test-cases": [
    {
      "className": "spoon.test.serializable.SerializableTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.serializable.SerializableTest#testSerializationModelStreamer",
        "spoon.test.serializable.SerializableTest#testSerialCtStatement",
        "spoon.test.serializable.SerializableTest#testSerialFile"
      ],
      "failures": [
        {
          "failureName": "java.io.NotSerializableException",
          "failureDetail": "spoon.support.reflect.cu.CompilationUnitImpl",
          "isError": true
        },
        {
          "failureName": "java.io.NotSerializableException",
          "failureDetail": "spoon.support.reflect.cu.CompilationUnitImpl",
          "isError": true
        },
        {
          "failureName": "java.io.NotSerializableException",
          "failureDetail": "spoon.support.reflect.cu.CompilationUnitImpl",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.eval.EvalTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.eval.EvalTest#testDoNotSimplifyToExpressionWhenStatementIsExpected"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Printing of spoon.support.reflect.code.CtLiteralImpl on path \n CtPackageImpl:spoon\n CtPackageImpl:test\n CtPackageImpl:eval\n CtClassImpl:ToEvaluate\n CtMethodImpl:simplifyOnlyWhenPossible\n CtBlockImpl\n CtReturnImpl\n CtLiteralImpl\nfailed",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.template.TemplateInvocationSubstitutionTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.template.TemplateInvocationSubstitutionTest#testSubstitutionByExpression",
        "spoon.test.template.TemplateInvocationSubstitutionTest#testInvocationSubstitutionByExpression"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Printing of spoon.support.reflect.code.CtLiteralImpl on path \n CtBlockImpl\n CtInvocationImpl\n CtInvocationImpl\n CtLiteralImpl\nfailed",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Printing of spoon.support.reflect.code.CtLiteralImpl on path \n CtBlockImpl\n CtInvocationImpl\n CtInvocationImpl\n CtLiteralImpl\nfailed",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.template.TemplateReplaceReturnTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.template.TemplateReplaceReturnTest#testNoReturnReplaceTemplate"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Printing of spoon.support.reflect.code.CtLiteralImpl on path \n CtPackageImpl:spoon\n CtPackageImpl:test\n CtPackageImpl:template\n CtClassImpl:ReturnReplaceResult\n CtMethodImpl:method\n CtBlockImpl\n CtReturnImpl\n CtLiteralImpl\nfailed",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.annotation.AnnotationTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.annotation.AnnotationTest#testCreateRepeatableAnnotation",
        "spoon.test.annotation.AnnotationTest#testAnnotationNotRepeatableNotArrayAnnotation",
        "spoon.test.annotation.AnnotationTest#testCreateRepeatableAnnotationWithArrays"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Printing of spoon.support.reflect.code.CtLiteralImpl on path \n CtMethodImpl:mamethod\n CtAnnotationImpl\n CtLiteralImpl\nfailed",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Printing of spoon.support.reflect.code.CtLiteralImpl on path \n CtPackageImpl:spoon\n CtPackageImpl:test\n CtPackageImpl:annotation\n CtPackageImpl:testclasses\n CtPackageImpl:repeatable\n CtClassImpl:Repeated\n CtMethodImpl:withoutAnnotation\n CtAnnotationImpl\n CtLiteralImpl\nfailed",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Printing of spoon.support.reflect.code.CtLiteralImpl on path \n CtPackageImpl:spoon\n CtPackageImpl:test\n CtPackageImpl:annotation\n CtPackageImpl:testclasses\n CtPackageImpl:repeatable\n CtClassImpl:Repeated\n CtMethodImpl:withoutAnnotation\n CtAnnotationImpl\n CtLiteralImpl\nfailed",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.template.TemplateTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.template.TemplateTest#testTemplateC1",
        "spoon.test.template.TemplateTest#substituteStringLiteral",
        "spoon.test.template.TemplateTest#testTemplateArrayAccess",
        "spoon.test.template.TemplateTest#testExtensionDecoupledSubstitutionVisitor"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Printing of spoon.support.reflect.code.CtLiteralImpl on path \n CtMethodImpl:block\n CtBlockImpl\n CtTryImpl\n CtBlockImpl\n CtInvocationImpl\n CtLiteralImpl\nfailed",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Printing of spoon.support.reflect.code.CtLiteralImpl on path \n CtPackageImpl:spoon\n CtPackageImpl:test\n CtPackageImpl:template\n CtPackageImpl:testclasses\n CtPackageImpl:constructors\n CtClassImpl:C1\n CtMethodImpl:methodToBeInserted2\n CtBlockImpl\n CtReturnImpl\n CtLiteralImpl\nfailed",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Printing of spoon.support.reflect.code.CtLiteralImpl on path \n CtClassImpl:\n CtMethodImpl:m1\n CtBlockImpl\n CtInvocationImpl\n CtLiteralImpl\nfailed",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Printing of spoon.support.reflect.code.CtLiteralImpl on path \n CtClassImpl:Result\n CtMethodImpl:method2\n CtBlockImpl\n CtInvocationImpl\n CtLiteralImpl\nfailed",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.serializable.SourcePositionTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.serializable.SourcePositionTest#testSourcePosition"
      ],
      "failures": [
        {
          "failureName": "java.io.NotSerializableException",
          "failureDetail": "spoon.support.reflect.cu.CompilationUnitImpl",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.MavenLauncherTest",
      "failingMethods": [
        "spoon.MavenLauncherTest#spoonMavenLauncherTest",
        "spoon.MavenLauncherTest#mavenLauncherTestMultiModulesAndVariables"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Content of classpath: ",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c7\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.prettyprinter.LinesTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.prettyprinter.LinesTest#testIdenticalPrettyPrinter"
      ],
      "failures": [
        {
          "failureName": "java.lang.UnsupportedOperationException",
          "failureDetail": "PartialSourcePosition only contains a CompilationUnit",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.template.TemplateArrayAccessTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.template.TemplateArrayAccessTest#testArrayAccess"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Printing of spoon.support.reflect.code.CtLiteralImpl on path \n CtInvocationImpl\n CtNewArrayImpl\n CtLiteralImpl\nfailed",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ]
}