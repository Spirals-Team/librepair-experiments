{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "olavloite/spanner-jdbc",
  "bugCommit": "https://github.com/olavloite/spanner-jdbc/compare/187a2756d698...35252976a461",
  "failingModule": "/root/workspace/olavloite/spanner-jdbc/359839504",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 3,
  "error-types": [
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 550,
  "failing-test-cases": [
    {
      "className": "nl.topicus.jdbc.statement.CloudSpannerPreparedStatementTest$BatchTests",
      "failingMethods": [
        "nl.topicus.jdbc.statement.CloudSpannerPreparedStatementTest$BatchTests#testBatchedInsertStatementOnReadOnlyConnection"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of nl.topicus.jdbc.exception.CloudSpannerSQLException and exception with message a string containing \"Connection is in read-only mode. Mutations are not allowed\")\n     but: an instance of nl.topicus.jdbc.exception.CloudSpannerSQLException \u003corg.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue: \n\u0027checkClosed\u0027 is a *void method* and it *cannot* be stubbed with a *return value*!\nVoids are usually stubbed with Throwables:\n    doThrow(exception).when(mock).someVoidMethod();\nIf you need to set the void method to do nothing you can use:\n    doNothing().when(mock).someVoidMethod();\nFor more information, check out the javadocs for Mockito.doNothing().\n***\nIf you\u0027re unsure why you\u0027re getting above error read on.\nDue to the nature of the syntax above problem might occur because:\n1. The method you are trying to stub is *overloaded*. Make sure you are calling the right overloaded version.\n2. Somewhere in your test you are stubbing *final methods*. Sorry, Mockito does not verify/stub final methods.\n3. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - \n   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method.\n4. Mocking methods declared on non-public parent classes is not supported.\n\u003e is a org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue\nStacktrace was: org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue: \n\u0027checkClosed\u0027 is a *void method* and it *cannot* be stubbed with a *return value*!\nVoids are usually stubbed with Throwables:\n    doThrow(exception).when(mock).someVoidMethod();\nIf you need to set the void method to do nothing you can use:\n    doNothing().when(mock).someVoidMethod();\nFor more information, check out the javadocs for Mockito.doNothing().\n***\nIf you\u0027re unsure why you\u0027re getting above error read on.\nDue to the nature of the syntax above problem might occur because:\n1. The method you are trying to stub is *overloaded*. Make sure you are calling the right overloaded version.\n2. Somewhere in your test you are stubbing *final methods*. Sorry, Mockito does not verify/stub final methods.\n3. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - \n   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method.\n4. Mocking methods declared on non-public parent classes is not supported.\n\n at nl.topicus.jdbc.statement.CloudSpannerPreparedStatementTest$BatchTests.testBatchedInsertStatementOnReadOnlyConnection(CloudSpannerPreparedStatementTest.java:663)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.junit.runners.Suite.runChild(Suite.java:128)\n at org.junit.runners.Suite.runChild(Suite.java:27)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.junit.runners.Suite.runChild(Suite.java:128)\n at org.junit.runners.Suite.runChild(Suite.java:27)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)\n at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)\n at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)\n at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)\n at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)\n at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:159)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)\n at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)\n",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "nl.topicus.jdbc.statement.CloudSpannerPreparedStatementTest$InsertStatementTests",
      "failingMethods": [
        "nl.topicus.jdbc.statement.CloudSpannerPreparedStatementTest$InsertStatementTests#testBulkInsertStatementOnReadOnlyConnection",
        "nl.topicus.jdbc.statement.CloudSpannerPreparedStatementTest$InsertStatementTests#testSingleInsertStatementOnReadOnlyConnection"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of nl.topicus.jdbc.exception.CloudSpannerSQLException and exception with message a string containing \"The connection is in read-only mode. Mutations are not allowed.\")\n     but: an instance of nl.topicus.jdbc.exception.CloudSpannerSQLException \u003corg.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue: \n\u0027checkClosed\u0027 is a *void method* and it *cannot* be stubbed with a *return value*!\nVoids are usually stubbed with Throwables:\n    doThrow(exception).when(mock).someVoidMethod();\nIf you need to set the void method to do nothing you can use:\n    doNothing().when(mock).someVoidMethod();\nFor more information, check out the javadocs for Mockito.doNothing().\n***\nIf you\u0027re unsure why you\u0027re getting above error read on.\nDue to the nature of the syntax above problem might occur because:\n1. The method you are trying to stub is *overloaded*. Make sure you are calling the right overloaded version.\n2. Somewhere in your test you are stubbing *final methods*. Sorry, Mockito does not verify/stub final methods.\n3. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - \n   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method.\n4. Mocking methods declared on non-public parent classes is not supported.\n\u003e is a org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue\nStacktrace was: org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue: \n\u0027checkClosed\u0027 is a *void method* and it *cannot* be stubbed with a *return value*!\nVoids are usually stubbed with Throwables:\n    doThrow(exception).when(mock).someVoidMethod();\nIf you need to set the void method to do nothing you can use:\n    doNothing().when(mock).someVoidMethod();\nFor more information, check out the javadocs for Mockito.doNothing().\n***\nIf you\u0027re unsure why you\u0027re getting above error read on.\nDue to the nature of the syntax above problem might occur because:\n1. The method you are trying to stub is *overloaded*. Make sure you are calling the right overloaded version.\n2. Somewhere in your test you are stubbing *final methods*. Sorry, Mockito does not verify/stub final methods.\n3. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - \n   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method.\n4. Mocking methods declared on non-public parent classes is not supported.\n\n at nl.topicus.jdbc.statement.CloudSpannerPreparedStatementTest$InsertStatementTests.testBulkInsertStatementOnReadOnlyConnection(CloudSpannerPreparedStatementTest.java:523)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.junit.runners.Suite.runChild(Suite.java:128)\n at org.junit.runners.Suite.runChild(Suite.java:27)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.junit.runners.Suite.runChild(Suite.java:128)\n at org.junit.runners.Suite.runChild(Suite.java:27)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)\n at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)\n at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)\n at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)\n at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)\n at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:159)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)\n at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of nl.topicus.jdbc.exception.CloudSpannerSQLException and exception with message a string containing \"The connection is in read-only mode. Mutations are not allowed.\")\n     but: an instance of nl.topicus.jdbc.exception.CloudSpannerSQLException \u003corg.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue: \n\u0027checkClosed\u0027 is a *void method* and it *cannot* be stubbed with a *return value*!\nVoids are usually stubbed with Throwables:\n    doThrow(exception).when(mock).someVoidMethod();\nIf you need to set the void method to do nothing you can use:\n    doNothing().when(mock).someVoidMethod();\nFor more information, check out the javadocs for Mockito.doNothing().\n***\nIf you\u0027re unsure why you\u0027re getting above error read on.\nDue to the nature of the syntax above problem might occur because:\n1. The method you are trying to stub is *overloaded*. Make sure you are calling the right overloaded version.\n2. Somewhere in your test you are stubbing *final methods*. Sorry, Mockito does not verify/stub final methods.\n3. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - \n   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method.\n4. Mocking methods declared on non-public parent classes is not supported.\n\u003e is a org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue\nStacktrace was: org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue: \n\u0027checkClosed\u0027 is a *void method* and it *cannot* be stubbed with a *return value*!\nVoids are usually stubbed with Throwables:\n    doThrow(exception).when(mock).someVoidMethod();\nIf you need to set the void method to do nothing you can use:\n    doNothing().when(mock).someVoidMethod();\nFor more information, check out the javadocs for Mockito.doNothing().\n***\nIf you\u0027re unsure why you\u0027re getting above error read on.\nDue to the nature of the syntax above problem might occur because:\n1. The method you are trying to stub is *overloaded*. Make sure you are calling the right overloaded version.\n2. Somewhere in your test you are stubbing *final methods*. Sorry, Mockito does not verify/stub final methods.\n3. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - \n   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method.\n4. Mocking methods declared on non-public parent classes is not supported.\n\n at nl.topicus.jdbc.statement.CloudSpannerPreparedStatementTest$InsertStatementTests.testSingleInsertStatementOnReadOnlyConnection(CloudSpannerPreparedStatementTest.java:512)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.junit.runners.Suite.runChild(Suite.java:128)\n at org.junit.runners.Suite.runChild(Suite.java:27)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.junit.runners.Suite.runChild(Suite.java:128)\n at org.junit.runners.Suite.runChild(Suite.java:27)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)\n at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)\n at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)\n at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)\n at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)\n at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:159)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)\n at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)\n",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    }
  ]
}