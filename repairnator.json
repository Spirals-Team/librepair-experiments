{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "prestodb/presto",
  "failingModule": "/root/workspace/prestodb/presto/274310197/presto-tests",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 18,
  "error-types": [
    "java.lang.AssertionError",
    "com.facebook.presto.spi.PrestoException"
  ],
  "totalNumberRunningTests": 6171,
  "failing-test-cases": [
    {
      "className": "com.facebook.presto.tests.TestTpchDistributedQueries",
      "failingMethods": [
        "com.facebook.presto.tests.TestTpchDistributedQueries#testTryLambdaRepeated",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testTryInvalidCast",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testNonEqualityJoinWithTryInFilter",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testMaps",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testTry",
        "com.facebook.presto.tests.TestTpchDistributedQueries#testJoinWithExpressionsThatMayReturnNull"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT *\nFROM (\n    SELECT a, try(a / 0)\n    FROM (VALUES 1) w(a)\n) t(a,b)\nJOIN (VALUES 1) u(x) ON t.a \u003d u.x",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT JSON_FORMAT(CAST(TRY(MAP(ARRAY[NULL], ARRAY[x])) AS JSON)) FROM (VALUES 1, 2) t(x)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT * FROM (VALUES (1,1), (1,2)) t1(a,b) LEFT OUTER JOIN (VALUES (1,1), (1,2)) t2(c,d)              ON a\u003dc AND TRY(1 / (b-a) !\u003d 1000)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT linenumber, sum(TRY(100/(CAST (tax*10 AS BIGINT)))) FROM lineitem GROUP BY linenumber",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT TRY(CAST(\u0027a\u0027 AS BIGINT))",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT try(10 / a) + try(10 / a) FROM (VALUES 5) t(a)",
          "isError": false
        }
      ],
      "nbFailures": 6,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.tests.TestQueryPlanDeterminism",
      "failingMethods": [
        "com.facebook.presto.tests.TestQueryPlanDeterminism#testTry",
        "com.facebook.presto.tests.TestQueryPlanDeterminism#testNonEqualityJoinWithTryInFilter",
        "com.facebook.presto.tests.TestQueryPlanDeterminism#testJoinWithExpressionsThatMayReturnNull",
        "com.facebook.presto.tests.TestQueryPlanDeterminism#testMaps",
        "com.facebook.presto.tests.TestQueryPlanDeterminism#testTryLambdaRepeated",
        "com.facebook.presto.tests.TestQueryPlanDeterminism#testTryInvalidCast"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "com.facebook.presto.spi.PrestoException",
          "failureDetail": "not yet implemented: com.facebook.presto.sql.tree.TryExpression",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.spi.PrestoException",
          "failureDetail": "not yet implemented: com.facebook.presto.sql.tree.TryExpression",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.spi.PrestoException",
          "failureDetail": "not yet implemented: com.facebook.presto.sql.tree.TryExpression",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.spi.PrestoException",
          "failureDetail": "not yet implemented: com.facebook.presto.sql.tree.TryExpression",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.spi.PrestoException",
          "failureDetail": "not yet implemented: com.facebook.presto.sql.tree.TryExpression",
          "isError": false
        },
        {
          "failureName": "com.facebook.presto.spi.PrestoException",
          "failureDetail": "not yet implemented: com.facebook.presto.sql.tree.TryExpression",
          "isError": false
        }
      ],
      "nbFailures": 6,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.tests.TestDistributedSpilledQueries",
      "failingMethods": [
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testTry",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testTryLambdaRepeated",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testMaps",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testTryInvalidCast",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testNonEqualityJoinWithTryInFilter",
        "com.facebook.presto.tests.TestDistributedSpilledQueries#testJoinWithExpressionsThatMayReturnNull"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT *\nFROM (\n    SELECT a, try(a / 0)\n    FROM (VALUES 1) w(a)\n) t(a,b)\nJOIN (VALUES 1) u(x) ON t.a \u003d u.x",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT JSON_FORMAT(CAST(TRY(MAP(ARRAY[NULL], ARRAY[x])) AS JSON)) FROM (VALUES 1, 2) t(x)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT * FROM (VALUES (1,1), (1,2)) t1(a,b) LEFT OUTER JOIN (VALUES (1,1), (1,2)) t2(c,d)              ON a\u003dc AND TRY(1 / (b-a) !\u003d 1000)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT linenumber, sum(TRY(100/(CAST (tax*10 AS BIGINT)))) FROM lineitem GROUP BY linenumber",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT TRY(CAST(\u0027a\u0027 AS BIGINT))",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Execution of \u0027actual\u0027 query failed: SELECT try(10 / a) + try(10 / a) FROM (VALUES 5) t(a)",
          "isError": false
        }
      ],
      "nbFailures": 6,
      "nbErrors": 0
    }
  ]
}