{
  "totalNumberSkippingTests": 4,
  "bugType": "only_fail",
  "totalNumberErroringTests": 92,
  "repo": "INRIA/spoon",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 3,
      "ComputeClasspath": 4,
      "ComputeTestDir": 0,
      "ResolveDependency": 20,
      "BuildProject": 25,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 4,
      "CloneRepository": 6,
      "NopolRepair": 418,
      "CheckoutPatchedBuild": 0,
      "TestProject": 194,
      "GatherTestInformation": 0,
      "PushIncriminatedBuild": 8,
      "AstorRepair": 149,
      "CommitPatch": 6
    },
    "FailureNames": [
      "spoon.SpoonException",
      "java.lang.AssertionError"
    ],
    "NbFailingTests": 94,
    "BugCommitUrl": "http://github.com/INRIA/spoon/commit/e40cae659234458c09944d3a74579334320cc4da",
    "ReproductionDate": "Apr 13, 2018 6:28:41 PM",
    "BuggyBuildId": 366190425,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/INRIA/spoon/builds/366190425",
    "BuggyBuildDate": "Apr 13, 2018 6:28:36 PM",
    "BugCommit": "e40cae659234458c09944d3a74579334320cc4da",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 1397,
    "NbLibraries": 14,
    "NbFileApp": 1080,
    "NbFileTests": 1318,
    "NbCPU": 32,
    "FreeMemory": 1661753816,
    "TotalMemory": 6236405760,
    "AngelicValuesByTest": {
      "spoon/test/template/TemplateEnumAccessTest": 0,
      "spoon/test/compilationunit/TestCompilationUnit": 0,
      "spoon/test/executable/ExecutableTest": 0,
      "spoon/test/template/TemplateReplaceReturnTest": 0,
      "spoon/test/fieldaccesses/FieldAccessTest": 0,
      "spoon/test/template/TemplateTest": 0,
      "spoon/MavenLauncherTest": 0,
      "spoon/test/type/TypeTest": 0,
      "spoon/test/main/MainTest": 0,
      "spoon/test/architecture/SpoonArchitectureEnforcerTest": 0,
      "spoon/test/factory/FieldFactoryTest": 0,
      "spoon/test/initializers/InitializerTest": 0,
      "spoon/test/prettyprinter/LinesTest": 0,
      "spoon/test/prettyprinter/DefaultPrettyPrinterTest": 0,
      "spoon/test/method/MethodTest": 0,
      "spoon/reflect/visitor/CtScannerTest": 0,
      "spoon/processing/ProcessingTest": 0,
      "spoon/test/query_function/VariableReferencesTest": 0,
      "spoon/test/comment/CommentTest": 0,
      "spoon/test/prettyprinter/QualifiedThisRefTest": 0,
      "spoon/reflect/ast/AstCheckerTest": 0,
      "spoon/test/prettyprinter/PrinterTest": 0,
      "spoon/test/model/AnonymousExecutableTest": 0,
      "spoon/test/ctClass/CtClassTest": 0,
      "spoon/test/intercession/IntercessionTest": 0,
      "spoon/test/targeted/TargetedExpressionTest": 0,
      "spoon/test/delete/DeleteTest": 0,
      "spoon/test/field/FieldTest": 0,
      "spoon/test/api/APITest": 0,
      "spoon/test/reference/ExecutableReferenceTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 503331544,
      "ComputeClasspath": 620858712,
      "ComputeTestDir": 486560648,
      "ResolveDependency": 655852952,
      "BuildProject": 607782200,
      "NPERepair": 622585552,
      "ComputeSourceDir": 620858712,
      "InitRepoToPush": 426613608,
      "CloneRepository": 602740776,
      "NopolRepair": 1824119432,
      "CheckoutPatchedBuild": 1661753816,
      "TestProject": 582524944,
      "GatherTestInformation": 559770776,
      "PushIncriminatedBuild": 622585552,
      "AstorRepair": 489140464,
      "CommitPatch": 1661753816
    }
  },
  "failingModule": "/root/workspace/INRIA/spoon/366190425",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 2,
  "error-types": [
    "spoon.SpoonException",
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 1397,
  "failing-test-cases": [
    {
      "className": "spoon.test.field.FieldTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.field.FieldTest#testFieldImplicitTarget",
        "spoon.test.field.FieldTest#testAddFieldsAtTop"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.MavenLauncherTest",
      "failingMethods": [
        "spoon.MavenLauncherTest#spoonMavenLauncherTest",
        "spoon.MavenLauncherTest#mavenLauncherTestMultiModulesAndVariables"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Content of classpath: ",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c7\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.reflect.ast.AstCheckerTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.reflect.ast.AstCheckerTest#testAvoidSetCollectionSavedOnAST"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.factory.FieldFactoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.factory.FieldFactoryTest#testCreateFromSource"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.initializers.InitializerTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.initializers.InitializerTest#testModelBuildingInitializer",
        "spoon.test.initializers.InitializerTest#testModelBuildingStaticInitializer"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.prettyprinter.QualifiedThisRefTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.prettyprinter.QualifiedThisRefTest#testCloneThisAccess"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.reflect.visitor.CtScannerTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.reflect.visitor.CtScannerTest#testScannerCallsAllProperties",
        "spoon.reflect.visitor.CtScannerTest#testScan"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.template.TemplateReplaceReturnTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.template.TemplateReplaceReturnTest#testNoReturnReplaceTemplate",
        "spoon.test.template.TemplateReplaceReturnTest#testReturnReplaceTemplate"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition value must not be negative",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition value must not be negative",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.api.APITest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.api.APITest#testSetterInNodes",
        "spoon.test.api.APITest#testPrintNotAllSourcesInCommandLine",
        "spoon.test.api.APITest#testOutputDestinationHandlerWithCUFactory"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition value must not be negative",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.template.TemplateTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.template.TemplateTest#substituteTypeAccessReference",
        "spoon.test.template.TemplateTest#testAnotherFieldAccessNameSubstitution"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "spoon.SpoonException: SourcePosition value must not be negative",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.method.MethodTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.method.MethodTest#testClone"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.query_function.VariableReferencesTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.query_function.VariableReferencesTest#testPotentialVariableAccessFromStaticMethod",
        "spoon.test.query_function.VariableReferencesTest#testVariableReferenceFunction",
        "spoon.test.query_function.VariableReferencesTest#testCheckModelConsistency",
        "spoon.test.query_function.VariableReferencesTest#testLocalVariableReferenceDeclarationFunction",
        "spoon.test.query_function.VariableReferencesTest#testCatchVariableReferenceFunction",
        "spoon.test.query_function.VariableReferencesTest#testParameterReferenceFunction",
        "spoon.test.query_function.VariableReferencesTest#testVariableScopeFunction",
        "spoon.test.query_function.VariableReferencesTest#testLocalVariableReferenceFunction"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "spoon.test.prettyprinter.PrinterTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.prettyprinter.PrinterTest#testPrinterTokenListener",
        "spoon.test.prettyprinter.PrinterTest#testPrettyPrinter"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.architecture.SpoonArchitectureEnforcerTest#testSpecPackage",
        "spoon.test.architecture.SpoonArchitectureEnforcerTest#testSrcMainJava",
        "spoon.test.architecture.SpoonArchitectureEnforcerTest#testStaticClasses",
        "spoon.test.architecture.SpoonArchitectureEnforcerTest#statelessFactory",
        "spoon.test.architecture.SpoonArchitectureEnforcerTest#testInterfacesAreCtScannable",
        "spoon.test.architecture.SpoonArchitectureEnforcerTest#testFactorySubFactory",
        "spoon.test.architecture.SpoonArchitectureEnforcerTest#testGoodTestClassNames"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 7
    },
    {
      "className": "spoon.test.targeted.TargetedExpressionTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.targeted.TargetedExpressionTest#testStaticTargetsOfInv",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldAccessInInnerClass",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfInv",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfInvInInnerClass",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldAccess",
        "spoon.test.targeted.TargetedExpressionTest#testNotTargetedExpression",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldInAnonymousClass",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfInvInAnonymousClass",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfStaticFieldAccess",
        "spoon.test.targeted.TargetedExpressionTest#testTargetOfFieldAccess"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 10
    },
    {
      "className": "spoon.test.template.TemplateEnumAccessTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.template.TemplateEnumAccessTest#testEnumAccessTest"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition value must not be negative",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.prettyprinter.DefaultPrettyPrinterTest#printClassCreatedWithSpoon"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition value must not be negative",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.ctClass.CtClassTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.ctClass.CtClassTest#testNoClasspathWithSuperClassOfAClassInAnInterface",
        "spoon.test.ctClass.CtClassTest#testParentOfTheEnclosingClassOfStaticClass"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.comment.CommentTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.comment.CommentTest#testCommentsInComment1And2",
        "spoon.test.comment.CommentTest#testCombinedPackageInfoComment",
        "spoon.test.comment.CommentTest#testCodeFactory",
        "spoon.test.comment.CommentTest#testWildComments",
        "spoon.test.comment.CommentTest#testJavaDocEmptyCommentAndTag",
        "spoon.test.comment.CommentTest#testDocumentationContract",
        "spoon.test.comment.CommentTest#testInsertNewComment",
        "spoon.test.comment.CommentTest#testJavadocShortAndLongComment",
        "spoon.test.comment.CommentTest#testBlockComment",
        "spoon.test.comment.CommentTest#testInLineComment",
        "spoon.test.comment.CommentTest#testJavaDocCommentOnUnix",
        "spoon.test.comment.CommentTest#testCoreFactory",
        "spoon.test.comment.CommentTest#testRemoveComment"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 13
    },
    {
      "className": "spoon.test.executable.ExecutableTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.executable.ExecutableTest#testInfoInsideAnonymousExecutable"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.model.AnonymousExecutableTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.model.AnonymousExecutableTest#testStatements"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.type.TypeTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.type.TypeTest#testTypeAccessForTypeAccessInInstanceOf",
        "spoon.test.type.TypeTest#testTypeReferenceInGenericsAndCasts",
        "spoon.test.type.TypeTest#testTypeAccessForDotClass",
        "spoon.test.type.TypeTest#testTypeAccessOfArrayObjectInFullyQualifiedName",
        "spoon.test.type.TypeTest#testIntersectionTypeReferenceInGenericsAndCasts",
        "spoon.test.type.TypeTest#testTypeMemberOrder"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "spoon.processing.ProcessingTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.processing.ProcessingTest#testSpoonTagger"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "spoon.SpoonException: SourcePosition value must not be negative",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.intercession.IntercessionTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.intercession.IntercessionTest#testSettersAreAllGood"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.reference.ExecutableReferenceTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.reference.ExecutableReferenceTest#testCreateReferenceForAnonymousExecutable"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.fieldaccesses.FieldAccessTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.fieldaccesses.FieldAccessTest#testGetReference"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.compilationunit.TestCompilationUnit",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.compilationunit.TestCompilationUnit#testNewlyCreatedCUWouldGetAPartialPosition"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition value must not be negative",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.delete.DeleteTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.delete.DeleteTest#testDeleteMethod",
        "spoon.test.delete.DeleteTest#testDeleteConditionInACondition",
        "spoon.test.delete.DeleteTest#testDeleteParameterOfMethod",
        "spoon.test.delete.DeleteTest#testDeleteAStatementInConstructor",
        "spoon.test.delete.DeleteTest#testDeleteChainOfAssignment",
        "spoon.test.delete.DeleteTest#testDeleteAStatementInMethod",
        "spoon.test.delete.DeleteTest#testDeleteAStatementInAnonymousExecutable",
        "spoon.test.delete.DeleteTest#testDeleteAnnotationOnAClass",
        "spoon.test.delete.DeleteTest#testDeleteACaseOfASwitch",
        "spoon.test.delete.DeleteTest#testDeleteStatementInCase",
        "spoon.test.delete.DeleteTest#testDeleteAStatementInStaticAnonymousExecutable",
        "spoon.test.delete.DeleteTest#testDeleteAClassTopLevel",
        "spoon.test.delete.DeleteTest#testDeleteBodyOfAMethod",
        "spoon.test.delete.DeleteTest#testDeleteReturn"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 14
    },
    {
      "className": "spoon.test.main.MainTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.main.MainTest#spoon.test.main.MainTest"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.prettyprinter.LinesTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.prettyprinter.LinesTest#testIdenticalPrettyPrinter",
        "spoon.test.prettyprinter.LinesTest#testCompileWhenUsingLinesArgument",
        "spoon.test.prettyprinter.LinesTest#testPrettyPrinterWithLines"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "SourcePosition values must be ascending or equal",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    }
  ]
}