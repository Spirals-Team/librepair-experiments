{
  "totalNumberSkippingTests": 4,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "everit-org/json-schema",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 2,
      "ComputeClasspath": 5,
      "ComputeTestDir": 0,
      "ResolveDependency": 20,
      "BuildProject": 31,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 2,
      "CloneRepository": 4,
      "NopolRepair": 9,
      "CheckoutPatchedBuild": 0,
      "TestProject": 38,
      "GatherTestInformation": 0,
      "PushIncriminatedBuild": 4,
      "AstorRepair": 0,
      "CommitPatch": 3
    },
    "FailureNames": [
      "java.lang.AssertionError"
    ],
    "BugCommitUrl": "http://github.com/everit-org/json-schema/commit/c30b778a13984e96405ed2b8bf9a3da35be653df",
    "NbFailingTests": 37,
    "BugCommit": "c30b778a13984e96405ed2b8bf9a3da35be653df",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 1776,
    "NbLibraries": 25,
    "NbFileApp": 122,
    "NbFileTests": 114,
    "NbCPU": 8,
    "FreeMemory": 331590824,
    "TotalMemory": 566755328,
    "AngelicValuesByTest": {
      "org/everit/json/schema/V7TestSuiteTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 309955264,
      "ComputeClasspath": 241542448,
      "ComputeTestDir": 299119400,
      "ResolveDependency": 287885672,
      "BuildProject": 279955472,
      "NPERepair": 244004232,
      "ComputeSourceDir": 239378688,
      "InitRepoToPush": 314243880,
      "CloneRepository": 344026912,
      "NopolRepair": 366142200,
      "CheckoutPatchedBuild": 331590824,
      "TestProject": 261452952,
      "GatherTestInformation": 246898704,
      "PushIncriminatedBuild": 244004232,
      "AstorRepair": 235083536,
      "CommitPatch": 331590824
    },
    "ReproductionDate": "Dec 29, 2017 5:06:35 PM",
    "BuggyBuildId": 322913913,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/everit-org/json-schema/builds/322913913",
    "BuggyBuildDate": "Dec 29, 2017 4:02:28 PM"
  },
  "failingModule": "/root/workspace/everit-org/json-schema/322913913/tests",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 37,
  "error-types": [
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 1776,
  "failing-test-cases": [
    {
      "className": "org.everit.json.schema.V7TestSuiteTest",
      "failingMethods": [
        "org.everit.json.schema.V7TestSuiteTest#test[[contains.json]/contains keyword validation]",
        "org.everit.json.schema.V7TestSuiteTest#test[[const.json]/const with null]",
        "org.everit.json.schema.V7TestSuiteTest#test[[if-then-else.json]/validate against correct branch, then vs else]",
        "org.everit.json.schema.V7TestSuiteTest#test[[contains.json]/contains keyword with boolean schema false]",
        "org.everit.json.schema.V7TestSuiteTest#test[[contains.json]/contains keyword with const keyword]",
        "org.everit.json.schema.V7TestSuiteTest#test[[idn-email.json]/validation of an internationalized e-mail addresses]",
        "org.everit.json.schema.V7TestSuiteTest#test[[if-then-else.json]/if and then without else]",
        "org.everit.json.schema.V7TestSuiteTest#test[[time.json]/validation of time strings]",
        "org.everit.json.schema.V7TestSuiteTest#test[[const.json]/const with object]",
        "org.everit.json.schema.V7TestSuiteTest#test[[const.json]/const validation]",
        "org.everit.json.schema.V7TestSuiteTest#test[[if-then-else.json]/if and else without then]",
        "org.everit.json.schema.V7TestSuiteTest#test[[relative-json-pointer.json]/validation of Relative JSON Pointers (RJP)]",
        "org.everit.json.schema.V7TestSuiteTest#test[[propertyNames.json]/propertyNames with boolean schema false]",
        "org.everit.json.schema.V7TestSuiteTest#test[[regex.json]/validation of regular expressions]",
        "org.everit.json.schema.V7TestSuiteTest#test[[contains.json]/contains keyword with boolean schema true]",
        "org.everit.json.schema.V7TestSuiteTest#test[[ref.json]/remote ref, containing refs itself]",
        "org.everit.json.schema.V7TestSuiteTest#test[[propertyNames.json]/propertyNames validation]",
        "org.everit.json.schema.V7TestSuiteTest#test[[definitions.json]/valid definition]",
        "org.everit.json.schema.V7TestSuiteTest#test[[idn-hostname.json]/validation of internationalized host names]",
        "org.everit.json.schema.V7TestSuiteTest#test[[definitions.json]/invalid definition]",
        "org.everit.json.schema.V7TestSuiteTest#test[[iri.json]/validation of IRIs]",
        "org.everit.json.schema.V7TestSuiteTest#test[[uri.json]/validation of URIs]",
        "org.everit.json.schema.V7TestSuiteTest#test[[const.json]/const with array]",
        "org.everit.json.schema.V7TestSuiteTest#test[[iri-reference.json]/validation of IRI References]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "schema loading failure for [ref.json]/remote ref, containing refs itself",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "schema loading failure for [ref.json]/remote ref, containing refs itself",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [time.json]/an invalid time string",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [time.json]/only RFC3339 not all of ISO 8601 are valid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [relative-json-pointer.json]/an invalid RJP that is a valid JSON Pointer",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [regex.json]/a regular expression with unclosed parens is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [iri.json]/an invalid relative IRI Reference",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [iri.json]/an invalid IRI",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [iri.json]/an invalid IRI though valid IRI reference",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [contains.json]/array without items matching schema is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [contains.json]/empty array is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [contains.json]/array without item 5 is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [contains.json]/empty array is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [contains.json]/any non-empty array is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [contains.json]/empty array is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [idn-hostname.json]/illegal first char U+302E Hangul single dot tone mark",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [idn-hostname.json]/contains illegal char U+302E Hangul single dot tone mark",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [idn-hostname.json]/a host name with a component too long",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [uri.json]/an invalid protocol-relative URI Reference",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [const.json]/another value is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [const.json]/another type is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [const.json]/another object is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [const.json]/another type is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [const.json]/another array item is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [const.json]/array with additional items is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [const.json]/not null is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [idn-email.json]/an invalid idn e-mail address",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [if-then-else.json]/invalid through then",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [if-then-else.json]/invalid through else",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [if-then-else.json]/invalid through then",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [if-then-else.json]/invalid through else",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "schema loading failure for [definitions.json]/valid definition",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "schema loading failure for [definitions.json]/invalid definition",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [propertyNames.json]/some property names invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [propertyNames.json]/object with any properties is invalid",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [iri-reference.json]/an invalid IRI Reference",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "false success for [iri-reference.json]/an invalid IRI fragment",
          "isError": false
        }
      ],
      "nbFailures": 37,
      "nbErrors": 0
    }
  ]
}