{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 19,
  "repo": "ZupIT/event-sourcing-framework",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 3,
      "ComputeTestDir": 0,
      "ResolveDependency": 65,
      "BuildProject": 21,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 1,
      "CloneRepository": 1,
      "NopolRepair": 0,
      "CheckoutPatchedBuild": 0,
      "TestProject": 26,
      "GatherTestInformation": 0,
      "PushIncriminatedBuild": 4,
      "AstorRepair": 6,
      "CommitPatch": 4
    },
    "FailureNames": [
      "akka.pattern.AskTimeoutException",
      "java.lang.Exception"
    ],
    "NbFailingTests": 19,
    "BugCommitUrl": "http://github.com/ZupIT/event-sourcing-framework/commit/bc89c7e1049070dab4c90ff720c3dd6cedb0f4a3",
    "ReproductionDate": "May 1, 2018 5:07:37 PM",
    "BuggyBuildId": 373503811,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/ZupIT/event-sourcing-framework/builds/373503811",
    "BuggyBuildDate": "May 1, 2018 5:07:23 PM",
    "BugCommit": "bc89c7e1049070dab4c90ff720c3dd6cedb0f4a3",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 61,
    "NbLibraries": 59,
    "NbFileApp": 0,
    "NbFileTests": 0,
    "NbCPU": 32,
    "FreeMemory": 673907824,
    "TotalMemory": 754450432,
    "AngelicValuesByTest": {
      "br/com/zup/eventsourcing/eventstore/OverridesTest": 0,
      "br/com/zup/eventsourcing/eventstore/MyAggregateRootSubscriberTest": 0,
      "br/com/zup/eventsourcing/eventstore/MyAggregateRootRepositoryTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 709653664,
      "ComputeClasspath": 715505600,
      "ComputeTestDir": 693866384,
      "ResolveDependency": 636719480,
      "BuildProject": 597153944,
      "NPERepair": 467530144,
      "ComputeSourceDir": 715505600,
      "InitRepoToPush": 532508560,
      "CloneRepository": 713575128,
      "NopolRepair": 721770192,
      "CheckoutPatchedBuild": 673907824,
      "TestProject": 584843000,
      "GatherTestInformation": 575647144,
      "PushIncriminatedBuild": 467530144,
      "AstorRepair": 547589240,
      "CommitPatch": 673907824
    }
  },
  "bugCommit": "https://github.com/ZupIT/event-sourcing-framework/compare/699c60be21b5...bc89c7e10490",
  "failingModule": "/root/workspace/ZupIT/event-sourcing-framework/373503811/event-store-connector",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 0,
  "error-types": [
    "akka.pattern.AskTimeoutException",
    "java.lang.Exception"
  ],
  "totalNumberRunningTests": 61,
  "failing-test-cases": [
    {
      "className": "br.com.zup.eventsourcing.eventstore.MyAggregateRootSubscriberTest",
      "failingMethods": [],
      "erroringMethods": [
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootSubscriberTest#shouldHandleWithSuccess"
      ],
      "failures": [
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "br.com.zup.eventsourcing.eventstore.OverridesTest",
      "failingMethods": [],
      "erroringMethods": [
        "br.com.zup.eventsourcing.eventstore.OverridesTest#createAndModifyAggregate",
        "br.com.zup.eventsourcing.eventstore.OverridesTest#saveMyAggregateCreateAndGet",
        "br.com.zup.eventsourcing.eventstore.OverridesTest#saveMyAggregate_WithoutMetaData"
      ],
      "failures": [
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#-916289318]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#-916289318]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#-916289318]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#saveModifyAndThenSaveAgain",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#getStreamNotFoundException",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#saveWithWrongExpectedVersion",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#getMetaData_whenTwoEvents",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#getMetaData_whenOnlyOneEvent",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#saveMyAggregate_WithMetaData",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#saveMyAggregate_WithoutMetaData",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#createAndModifyAggregateWithTenant",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#saveWithoutOptimisticLock",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#createAndModifyAggregate",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#saveMyAggregateWithTenantCreateAndGet",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#getSavedEventsWithTenant",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#saveMyAggregateCreateAndGet",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#saveMyAggregateCreateNoModifyAndSaveAgain",
        "br.com.zup.eventsourcing.eventstore.MyAggregateRootRepositoryTest#getSavedEvents"
      ],
      "failures": [
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cbr.com.zup.eventsourcing.core.Repository$NotFoundException\u003e but was\u003cakka.pattern.AskTimeoutException\u003e",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003ceventstore.WrongExpectedVersionException\u003e but was\u003cakka.pattern.AskTimeoutException\u003e",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        },
        {
          "failureName": "akka.pattern.AskTimeoutException",
          "failureDetail": "Recipient[Actor[akka://default/user/$a#1157459242]] had already been terminated. Sender[null] sent the message of type \"eventstore.WriteEvents\".",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 15
    }
  ]
}