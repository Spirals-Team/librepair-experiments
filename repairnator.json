{
  "totalNumberSkippingTests": 4,
  "bugType": "only_fail",
  "totalNumberErroringTests": 31,
  "repo": "INRIA/spoon",
  "failingModule": "/root/workspace/INRIA/spoon/394135914",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 15,
  "error-types": [
    "spoon.SpoonException",
    "java.lang.StringIndexOutOfBoundsException",
    "java.lang.AssertionError",
    "java.lang.NullPointerException",
    "org.junit.ComparisonFailure"
  ],
  "totalNumberRunningTests": 1511,
  "failing-test-cases": [
    {
      "className": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
      "failingMethods": [
        "testInterfacesAreCtScannable"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "The following methods are missing in CtScanner: \nscanCtImportHolder",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.template.TemplateEnumAccessTest",
      "failingMethods": [],
      "erroringMethods": [
        "testEnumAccessTest"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.jdtimportbuilder.ImportBuilderTest",
      "failingMethods": [
        "testWithImportFromItf",
        "testWithStaticInheritedImport"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c1\u003e but was:\u003c2\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c1\u003e but was:\u003c3\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.processing.CtGenerationTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGenerateRoleHandler"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.MavenLauncherTest",
      "failingMethods": [
        "mavenLauncherTestMultiModulesAndVariables",
        "spoonMavenLauncherTest"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Content of classpath: ",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c23\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.imports.ImportTest",
      "failingMethods": [
        "testSortImportPutStaticImportAfterTypeImport",
        "testImportStarredPackageWithNonVisibleClass",
        "testImportStaticAndFieldAccessWithImport"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[]Constants.CONSTANT.f...\u003e but was:\u003c[spoon.test.imports.testclasses.internal4.]Constants.CONSTANT.f...\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Exactly 42 should have been counted. expected:\u003c6\u003e but was:\u003c4\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c1\u003e but was:\u003c3\u003e",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
      "failingMethods": [
        "testPrintAMethodWithGeneric",
        "autoImportUsesFullyQualifiedNameWhenImportedNameAlreadyPresent",
        "testPrintAMethodWithImports"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cpublic [List\u003c? extends ArrayList\u003e aMethodWithGeneric() {\n    return new ]ArrayList\u003c\u003e();\n}\u003e but was:\u003cpublic [java.util.List\u003c? extends java.util.ArrayList\u003e aMethodWithGeneric() {\n    return new java.util.]ArrayList\u003c\u003e();\n}\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cpublic [List\u003c?\u003e aMethod() {\n    return new ]ArrayList\u003c\u003e();\n}\u003e but was:\u003cpublic [java.util.List\u003c?\u003e aMethod() {\n    return new java.util.]ArrayList\u003c\u003e();\n}\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c... {\n    localField \u003d []TypeIdentifierCollis...\u003e but was:\u003c... {\n    localField \u003d [spoon.test.prettyprinter.testclasses.]TypeIdentifierCollis...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "spoon.reflect.visitor.CtScannerTest",
      "failingMethods": [
        "testScannerCallsAllProperties"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "no getImports() in public \u003cT\u003e void visitCtInterface(final spoon.reflect.declaration.CtInterface\u003cT\u003e intrface) {\n    enter(intrface);\n    scan(spoon.reflect.path.CtRole.ANNOTATION, intrface.getAnnotations());\n    scan(spoon.reflect.path.CtRole.INTERFACE, intrface.getSuperInterfaces());\n    scan(spoon.reflect.path.CtRole.TYPE_PARAMETER, intrface.getFormalCtTypeParameters());\n    scan(spoon.reflect.path.CtRole.TYPE_MEMBER, intrface.getTypeMembers());\n    scan(spoon.reflect.path.CtRole.COMMENT, intrface.getComments());\n    exit(intrface);\n}\nno getImports() in public \u003cT\u003e void visitCtClass(final spoon.reflect.declaration.CtClass\u003cT\u003e ctClass) {\n    enter(ctClass);\n    scan(spoon.reflect.path.CtRole.ANNOTATION, ctClass.getAnnotations());\n    scan(spoon.reflect.path.CtRole.SUPER_TYPE, ctClass.getSuperclass());\n    scan(spoon.reflect.path.CtRole.INTERFACE, ctClass.getSuperInterfaces());\n    scan(spoon.reflect.path.CtRole.TYPE_PARAMETER, ctClass.getFormalCtTypeParameters());\n    scan(spoon.reflect.path.CtRole.TYPE_MEMBER, ctClass.getTypeMembers());\n    scan(spoon.reflect.path.CtRole.COMMENT, ctClass.getComments());\n    exit(ctClass);\n}\nno getImports() in public void visitCtPackage(final spoon.reflect.declaration.CtPackage ctPackage) {\n    enter(ctPackage);\n    scan(spoon.reflect.path.CtRole.ANNOTATION, ctPackage.getAnnotations());\n    scan(spoon.reflect.path.CtRole.SUB_PACKAGE, ctPackage.getPackages());\n    scan(spoon.reflect.path.CtRole.CONTAINED_TYPE, ctPackage.getTypes());\n    scan(spoon.reflect.path.CtRole.COMMENT, ctPackage.getComments());\n    exit(ctPackage);\n}\nno getImports() in @java.lang.Override\npublic void visitCtTypeParameter(spoon.reflect.declaration.CtTypeParameter typeParameter) {\n    enter(typeParameter);\n    scan(spoon.reflect.path.CtRole.ANNOTATION, typeParameter.getAnnotations());\n    scan(spoon.reflect.path.CtRole.SUPER_TYPE, typeParameter.getSuperclass());\n    scan(spoon.reflect.path.CtRole.COMMENT, typeParameter.getComments());\n    exit(typeParameter);\n}\nno getImports() in public \u003cT extends java.lang.Enum\u003c?\u003e\u003e void visitCtEnum(final spoon.reflect.declaration.CtEnum\u003cT\u003e ctEnum) {\n    enter(ctEnum);\n    scan(spoon.reflect.path.CtRole.ANNOTATION, ctEnum.getAnnotations());\n    scan(spoon.reflect.path.CtRole.INTERFACE, ctEnum.getSuperInterfaces());\n    scan(spoon.reflect.path.CtRole.TYPE_MEMBER, ctEnum.getTypeMembers());\n    scan(spoon.reflect.path.CtRole.VALUE, ctEnum.getEnumValues());\n    scan(spoon.reflect.path.CtRole.COMMENT, ctEnum.getComments());\n    exit(ctEnum);\n}\nno getImports() in public \u003cA extends java.lang.annotation.Annotation\u003e void visitCtAnnotationType(final spoon.reflect.declaration.CtAnnotationType\u003cA\u003e annotationType) {\n    enter(annotationType);\n    scan(spoon.reflect.path.CtRole.ANNOTATION, annotationType.getAnnotations());\n    scan(spoon.reflect.path.CtRole.TYPE_MEMBER, annotationType.getTypeMembers());\n    scan(spoon.reflect.path.CtRole.COMMENT, annotationType.getComments());\n    exit(annotationType);\n}",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.template.TemplateReplaceReturnTest",
      "failingMethods": [],
      "erroringMethods": [
        "testReturnReplaceTemplate",
        "testNoReturnReplaceTemplate"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.fieldaccesses.FieldAccessTest",
      "failingMethods": [
        "testGetReference"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[]A.myField\u003e but was:\u003c[spoon.test.fieldaccesses.testclasses.]A.myField\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.processing.ProcessingTest",
      "failingMethods": [
        "testProcessDontMessWithImports"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.api.APITest",
      "failingMethods": [],
      "erroringMethods": [
        "testOneLinerIntro"
      ],
      "failures": [
        {
          "failureName": "java.lang.StringIndexOutOfBoundsException",
          "failureDetail": "String index out of range: -1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.template.TemplateTest",
      "failingMethods": [],
      "erroringMethods": [
        "testFieldAccessNameSubstitutionInInnerClass",
        "testTemplateInheritance",
        "testTemplateWithWrongUsedStringParam",
        "testAnotherFieldAccessNameSubstitution",
        "testTemplateInterfaces",
        "substituteTypeAccessReference",
        "testFieldAccessNameSubstitution",
        "substituteStringLiteral",
        "testTemplateC1",
        "testTemplateArrayAccess",
        "testSubstitutionInsertAllNtoN",
        "createTypeFromTemplate",
        "testObjectIsNotParamTemplate",
        "testTemplateInvocationSubstitution",
        "testSubstituteInnerClass",
        "substituteSubString"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtTypeParameterImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtInterfaceImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 16
    },
    {
      "className": "spoon.test.pkg.PackageTest",
      "failingMethods": [
        "testAddAnnotationToPackage"
      ],
      "erroringMethods": [
        "testRenamePackageAndPrettyPrintNoclasspath",
        "testRenamePackageAndPrettyPrint"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cimport [spoon.test.annotation.testclasses.GlobalAnnotation];\u003e but was:\u003cimport [java.util.ArrayList];\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.replace.ReplaceParametrizedTest",
      "failingMethods": [],
      "erroringMethods": [
        "testContract[CtEnum]",
        "testContract[CtTypeParameter]",
        "testContract[CtAnnotationType]",
        "testContract[CtInterface]",
        "testContract[CtPackage]",
        "testContract[CtClass]"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtInterfaceImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtPackageImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtTypeParameterImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtEnumImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtAnnotationTypeImpl",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "spoon.test.template.PatternTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGenerateMethodWithSelfReferences",
        "testGenerateClassWithSelfReferences"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtInterfaceImpl",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "Setting of CtRole.IMPORT is not supported for CtClassImpl",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    }
  ]
}