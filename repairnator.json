{
  "totalNumberSkippingTests": 84,
  "bugType": "only_fail",
  "totalNumberErroringTests": 6,
  "repo": "apache/nifi",
  "failingModule": "/root/workspace/apache/nifi/374991718/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 9,
  "error-types": [
    "java.io.IOException",
    "java.lang.AssertionError",
    "java.lang.NullPointerException"
  ],
  "totalNumberRunningTests": 3274,
  "failing-test-cases": [
    {
      "className": "org.apache.nifi.processors.standard.TestListFile",
      "failingMethods": [],
      "erroringMethods": [
        "org.apache.nifi.processors.standard.TestListFile#testFilterHidden",
        "org.apache.nifi.processors.standard.TestListFile#testAttributesSet"
      ],
      "failures": [
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Mount point not found",
          "isError": true
        },
        {
          "failureName": "java.io.IOException",
          "failureDetail": "Mount point not found",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.apache.nifi.processors.standard.TestForkRecord",
      "failingMethods": [
        "org.apache.nifi.processors.standard.TestForkRecord#testExtractMode",
        "org.apache.nifi.processors.standard.TestForkRecord#testForkExtractComplexWithoutParentFields",
        "org.apache.nifi.processors.standard.TestForkRecord#testForkExtractSimpleWithoutParentFields",
        "org.apache.nifi.processors.standard.TestForkRecord#testForkExtractSimpleWithParentFields",
        "org.apache.nifi.processors.standard.TestForkRecord#testForkExtractNotAnArray",
        "org.apache.nifi.processors.standard.TestForkRecord#testForkExtractNotAnArrayOfRecords",
        "org.apache.nifi.processors.standard.TestForkRecord#testSplitMode",
        "org.apache.nifi.processors.standard.TestForkRecord#testForkExtractComplexWithParentFieldsAndNull",
        "org.apache.nifi.processors.standard.TestForkRecord#testForkExtractComplexWithParentFields"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "java.lang.IllegalStateException: Attempting to evaluate expression language for my-path using flow file attributes but the scope evaluation is set to NONE. The proper scope should be set in the property descriptor using PropertyDescriptor.Builder.expressionLanguageSupported(ExpressionLanguageScope)",
          "isError": false
        }
      ],
      "nbFailures": 9,
      "nbErrors": 0
    },
    {
      "className": "org.apache.nifi.processors.standard.TestGetFile",
      "failingMethods": [],
      "erroringMethods": [
        "org.apache.nifi.processors.standard.TestGetFile#testWithUnreadableDir",
        "org.apache.nifi.processors.standard.TestGetFile#testWithUnwritableDir",
        "org.apache.nifi.processors.standard.TestGetFile#testAttributes",
        "org.apache.nifi.processors.standard.TestGetFile#testWithInaccessibleDir"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    }
  ]
}