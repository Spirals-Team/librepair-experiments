{
  "bugType": "only_fail",
  "hostname": "spirals-repairnator",
  "repo": "voyages-sncf-technologies/hesperides",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 3,
      "ComputeClasspath": 33,
      "ComputeTestDir": 0,
      "BuildProject": 241,
      "InitRepoToPush": 10,
      "ComputeSourceDir": 1,
      "ComputeModules": 0,
      "AstorJMut": 0,
      "CloneRepository": 8,
      "CheckoutPatchedBuild": 0,
      "Nopol": 0,
      "NPEFix": 0,
      "TestProject": 444,
      "GatherTestInformation": 3,
      "CommitPatch": 1
    },
    "FailureNames": [
      "org.springframework.web.client.HttpClientErrorException",
      "java.lang.AssertionError"
    ],
    "BugCommitUrl": "http://github.com/voyages-sncf-technologies/hesperides/commit/b88fbf2086518ca7df262bf6600cf7c0ac0ec72d",
    "NbFailingTests": 10,
    "NbErroringTests": 8,
    "NbSkippingTests": 8,
    "NbRunningTests": 382,
    "ReproductionDate": "Jul 17, 2018 12:06:17 PM",
    "BuggyBuildId": 404815275,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/voyages-sncf-technologies/hesperides/builds/404815275",
    "BuggyBuildDate": "Jul 17, 2018 12:06:05 PM",
    "BugCommit": "b88fbf2086518ca7df262bf6600cf7c0ac0ec72d",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 126,
    "NbFileApp": 133,
    "NbFileTests": 64,
    "NbCPU": 4,
    "FreeMemory": 140640728,
    "TotalMemory": 176160768,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 109951016,
      "ComputeClasspath": 127021104,
      "ComputeTestDir": 121339920,
      "BuildProject": 152880320,
      "InitRepoToPush": 129462992,
      "ComputeSourceDir": 143552944,
      "ComputeModules": 147192872,
      "AstorJMut": 121339920,
      "CloneRepository": 136527352,
      "CheckoutPatchedBuild": 140640728,
      "Nopol": 121339920,
      "NPEFix": 121339920,
      "TestProject": 119823704,
      "GatherTestInformation": 114911776,
      "CommitPatch": 140640728
    },
    "NbSucceedingTests": 364
  },
  "failing-test-cases": [
    {
      "className": "Scenario: get a model from a module after delete its template",
      "failingMethods": [],
      "erroringMethods": [
        "And a template in this module containing properties but that is being deleted",
        "Scenario: get a model from a module after delete its template"
      ],
      "failures": [
        {
          "failureName": "org.springframework.web.client.HttpClientErrorException",
          "failureDetail": "400 null",
          "isError": true
        },
        {
          "failureName": "org.springframework.web.client.HttpClientErrorException",
          "failureDetail": "400 null",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "Scenario: get a model from a techno after updating its template",
      "failingMethods": [],
      "erroringMethods": [
        "And a template in this techno containing properties that have been updated",
        "Scenario: get a model from a techno after updating its template"
      ],
      "failures": [
        {
          "failureName": "org.springframework.web.client.HttpClientErrorException",
          "failureDetail": "400 null",
          "isError": true
        },
        {
          "failureName": "org.springframework.web.client.HttpClientErrorException",
          "failureDetail": "400 null",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "Scenario: get a model from a techno with a template that has ambiguous properties",
      "failingMethods": [
        "Scenario: get a model from a techno with a template that has ambiguous properties",
        "Then the model of this techno contains all the properties with the same name from this template"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003cfalse\u003e but was:\u003ctrue\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003cfalse\u003e but was:\u003ctrue\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "Scenario: get a model from a module with templates that have ambiguous properties",
      "failingMethods": [
        "Then the model of this module contains all the properties with the same name from these templates",
        "Scenario: get a model from a module with templates that have ambiguous properties"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003ctrue\u003e but was:\u003cfalse\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003ctrue\u003e but was:\u003cfalse\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "Scenario: get a model from a techno after delete its template",
      "failingMethods": [],
      "erroringMethods": [
        "Scenario: get a model from a techno after delete its template",
        "And a template in this techno containing properties but that is being deleted"
      ],
      "failures": [
        {
          "failureName": "org.springframework.web.client.HttpClientErrorException",
          "failureDetail": "400 null",
          "isError": true
        },
        {
          "failureName": "org.springframework.web.client.HttpClientErrorException",
          "failureDetail": "400 null",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "Scenario: create a copy of an existing module",
      "failingMethods": [
        "Scenario: create a copy of an existing module",
        "And the model of the module is also duplicated"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c2\u003e but was:\u003c1\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c2\u003e but was:\u003c1\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "Scenario: get a model from a module after updating its template",
      "failingMethods": [],
      "erroringMethods": [
        "Scenario: get a model from a module after updating its template",
        "And a template in this module containing properties that have been updated"
      ],
      "failures": [
        {
          "failureName": "org.springframework.web.client.HttpClientErrorException",
          "failureDetail": "400 null",
          "isError": true
        },
        {
          "failureName": "org.springframework.web.client.HttpClientErrorException",
          "failureDetail": "400 null",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "Scenario: get a model from a module with a template that has ambiguous properties",
      "failingMethods": [
        "Then the model of this module contains all the properties with the same name from this template",
        "Scenario: get a model from a module with a template that has ambiguous properties"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003cfalse\u003e but was:\u003ctrue\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003cfalse\u003e but was:\u003ctrue\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "Scenario: get a model from a techno with templates that have ambiguous properties",
      "failingMethods": [
        "Scenario: get a model from a techno with templates that have ambiguous properties",
        "Then the model of this techno contains all the properties with the same name from these templates"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003ctrue\u003e but was:\u003cfalse\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003ctrue\u003e but was:\u003cfalse\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    }
  ],
  "failingModule": "/root/workspace/voyages-sncf-technologies/hesperides/404815275/tests/bdd"
}