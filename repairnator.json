{
  "bugType": "only_fail",
  "hostname": "spirals-repairnator",
  "repo": "julianhyde/calcite",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 10,
      "ComputeTestDir": 0,
      "BuildProject": 227,
      "InitRepoToPush": 10,
      "ComputeSourceDir": 1,
      "ComputeModules": 0,
      "AstorJMut": 1004,
      "CloneRepository": 30,
      "CheckoutPatchedBuild": 0,
      "NopolAllTests": 114,
      "NPEFix": 0,
      "TestProject": 762,
      "GatherTestInformation": 3,
      "CommitPatch": 32
    },
    "FailureNames": [
      "java.lang.AssertionError"
    ],
    "NbFailingTests": 2,
    "NbErroringTests": 0,
    "NbSkippingTests": 112,
    "NbRunningTests": 4680,
    "BugCommitUrl": "http://github.com/julianhyde/calcite/commit/6fb6f7296b17563a6dbd1398b291fa786668f2e1",
    "ReproductionDate": "Aug 30, 2018 7:46:24 PM",
    "BuggyBuildId": 422668961,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/julianhyde/calcite/builds/422668961",
    "BuggyBuildDate": "Aug 30, 2018 7:45:01 PM",
    "BugCommit": "6fb6f7296b17563a6dbd1398b291fa786668f2e1",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 48,
    "NbFileApp": 1511,
    "NbFileTests": 215,
    "NbCPU": 4,
    "FreeMemory": 381133888,
    "TotalMemory": 1772093440,
    "AngelicValuesByTest": {
      "org/apache/calcite/test/CoreQuidemTest:": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 230808832,
      "ComputeClasspath": 292078088,
      "ComputeTestDir": 264620272,
      "BuildProject": 203594144,
      "InitRepoToPush": 299067712,
      "ComputeSourceDir": 352995448,
      "ComputeModules": 328793928,
      "AstorJMut": 526319968,
      "CloneRepository": 257404632,
      "CheckoutPatchedBuild": 381133888,
      "NopolAllTests": 821260776,
      "NPEFix": 821260776,
      "TestProject": 180566136,
      "GatherTestInformation": 154011800,
      "CommitPatch": 381133888
    },
    "NbSucceedingTests": 4678
  },
  "failing-test-cases": [
    {
      "className": "org.apache.calcite.test.CoreQuidemTest",
      "failingMethods": [
        "test[5: quidem(sql/sub-query.iq)]",
        "test[9: quidem(sql/winagg.iq)]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Files differ: /root/workspace/julianhyde/calcite/422668961/core/target/test-classes/sql/surefire/sql/sub-query.iq /root/workspace/julianhyde/calcite/422668961/core/target/test-classes/sql/sub-query.iq\n941c941\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[IS NULL($t4)], expr#9\u003d[OR($t6, $t7, $t8)], cs\u003d[$t3], $condition\u003d[$t9])\n---\n\u003e           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t4)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n1011c1011\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[10], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n---\n\u003e           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[10], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], cs\u003d[$t3], $condition\u003d[$t6])\n1191c1191\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[IS NULL($t4)], expr#9\u003d[OR($t6, $t7, $t8)], cs\u003d[$t3], $condition\u003d[$t9])\n---\n\u003e           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t4)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n1261c1261\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[10], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n---\n\u003e           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[10], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], cs\u003d[$t3], $condition\u003d[$t6])\n1557c1557\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t4)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n---\n\u003e           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[IS NULL($t4)], expr#9\u003d[OR($t6, $t7, $t8)], cs\u003d[$t3], $condition\u003d[$t9])\n1599c1599\n\u003c           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[10], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], cs\u003d[$t3], $condition\u003d[$t6])\n---\n\u003e           EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[10], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t5)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], $condition\u003d[$t8])\n1853c1853\n\u003c     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t4)], expr#8\u003d[OR($t6, $t7)], cs\u003d[$t3], DEPTNO\u003d[$t0], $condition\u003d[$t8])\n---\n\u003e     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[null], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], expr#7\u003d[IS NULL($t4)], expr#8\u003d[OR($t6, $t7)], DEPTNO\u003d[$t0], $f1\u003d[$t3], $condition\u003d[$t8])\n1911c1911\n\u003c     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[10], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], cs\u003d[$t3], DEPTNO\u003d[$t0], $condition\u003d[$t6])\n---\n\u003e     EnumerableCalc(expr#0..2\u003d[{inputs}], expr#3\u003d[true], expr#4\u003d[10], expr#5\u003d[CAST($t0):TINYINT], expr#6\u003d[\u003d($t4, $t5)], DEPTNO\u003d[$t0], $f1\u003d[$t3], $condition\u003d[$t6])\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Files differ: /root/workspace/julianhyde/calcite/422668961/core/target/test-classes/sql/surefire/sql/winagg.iq /root/workspace/julianhyde/calcite/422668961/core/target/test-classes/sql/winagg.iq\n442,444c442,443\n\u003c |     10 | 100 | 110 |\n\u003c |     10 | 150 | 110 |\n\u003c |     20 |     | 200 |\n---\n\u003e |     10 | 110 | 110 |\n\u003e |     10 | 110 | 110 |\n",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    }
  ],
  "failingModule": "/root/workspace/julianhyde/calcite/422668961/core",
  "bugCommit": "https://github.com/julianhyde/calcite/compare/4c6d395fd731...6fb6f7296b17"
}