{
  "totalNumberSkippingTests": 88,
  "bugType": "only_fail",
  "totalNumberErroringTests": 1,
  "repo": "druid-io/druid",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 7,
      "ComputeClasspath": 3,
      "ComputeTestDir": 0,
      "ResolveDependency": 123,
      "BuildProject": 710,
      "NPERepair": 0,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 12,
      "CloneRepository": 27,
      "NopolRepair": 9,
      "CheckoutPatchedBuild": 0,
      "TestProject": 1047,
      "GatherTestInformation": 1,
      "PushIncriminatedBuild": 9,
      "AstorRepair": 526,
      "CommitPatch": 12
    },
    "FailureNames": [
      "org.skife.jdbi.v2.exceptions.CallbackFailedException",
      "java.lang.AssertionError"
    ],
    "NbFailingTests": 7,
    "BugCommitUrl": "http://github.com/druid-io/druid/commit/22b0051bf5a6e0f9b495e6f61517fe2cf1956861",
    "ReproductionDate": "Apr 12, 2018 3:56:04 AM",
    "BuggyBuildId": 365390193,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/druid-io/druid/builds/365390193",
    "BuggyBuildDate": "Apr 12, 2018 3:55:46 AM",
    "BugCommit": "22b0051bf5a6e0f9b495e6f61517fe2cf1956861",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 85400,
    "NbLibraries": 169,
    "NbFileApp": 5074,
    "NbFileTests": 1852,
    "NbCPU": 32,
    "FreeMemory": 1040889552,
    "TotalMemory": 2015363072,
    "AngelicValuesByTest": {},
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 370641480,
      "ComputeClasspath": 566124456,
      "ComputeTestDir": 609458944,
      "ResolveDependency": 518243584,
      "BuildProject": 493168536,
      "NPERepair": 571695736,
      "ComputeSourceDir": 566124456,
      "InitRepoToPush": 461310584,
      "CloneRepository": 323608408,
      "NopolRepair": 1298790952,
      "CheckoutPatchedBuild": 1040889552,
      "TestProject": 466685624,
      "GatherTestInformation": 842912904,
      "PushIncriminatedBuild": 571695736,
      "AstorRepair": 1189996560,
      "CommitPatch": 1040889552
    }
  },
  "failingModule": "/root/workspace/druid-io/druid/365390193/server",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 6,
  "error-types": [
    "org.skife.jdbi.v2.exceptions.CallbackFailedException",
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 85400,
  "failing-test-cases": [
    {
      "className": "io.druid.segment.loading.SegmentLoaderLocalCacheManagerTest",
      "failingMethods": [
        "io.druid.segment.loading.SegmentLoaderLocalCacheManagerTest#testRetryAllFail[1]",
        "io.druid.segment.loading.SegmentLoaderLocalCacheManagerTest#testRetryAllFail[0]",
        "io.druid.segment.loading.SegmentLoaderLocalCacheManagerTest#testRetrySuccessAtSecondLocation[0]",
        "io.druid.segment.loading.SegmentLoaderLocalCacheManagerTest#testRetrySuccessAtSecondLocation[1]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 4,
      "nbErrors": 0
    },
    {
      "className": "io.druid.metadata.SQLMetadataRuleManagerTest",
      "failingMethods": [],
      "erroringMethods": [
        "io.druid.metadata.SQLMetadataRuleManagerTest#testMultipleStopAndStart"
      ],
      "failures": [
        {
          "failureName": "org.skife.jdbi.v2.exceptions.CallbackFailedException",
          "failureDetail": "org.skife.jdbi.v2.exceptions.UnableToExecuteStatementException: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\nLock : ROW, SYSCOLUMNS, (5,12)\n  Waiting XID : {237, X} , APP, DROP TABLE druidTest30f943eb6cf24d7088d6ce642bc73f9a_rules\n  Granted XID : {220, S} \nLock : TABLE, DRUIDTEST30F943EB6CF24D7088D6CE642BC73F9A_RULES, Tablelock\n  Waiting XID : {220, IS} , APP, SELECT r.dataSource, r.payload FROM druidTest30f943eb6cf24d7088d6ce642bc73f9a_rules r INNER JOIN(SELECT dataSource, max(version) as version FROM druidTest30f943eb6cf24d7088d6ce642bc73f9a_rules GROUP BY dataSource) ds ON r.datasource \u003d ds.datasource and r.version \u003d ds.version\n  Granted XID : {237, X} \n. The selected victim is XID : 237. [statement:\"DROP TABLE druidTest30f943eb6cf24d7088d6ce642bc73f9a_rules\", located:\"DROP TABLE druidTest30f943eb6cf24d7088d6ce642bc73f9a_rules\", rewritten:\"DROP TABLE druidTest30f943eb6cf24d7088d6ce642bc73f9a_rules\", arguments:{ positional:{}, named:{}, finder:[]}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "io.druid.segment.loading.LocalDataSegmentPusherTest",
      "failingMethods": [
        "io.druid.segment.loading.LocalDataSegmentPusherTest#testPushCannotCreateDirectory"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Expected test to throw (an instance of java.io.IOException and exception with message a string containing \"Unable to create directory\")",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "io.druid.query.lookup.LookupSnapshotTakerTest",
      "failingMethods": [
        "io.druid.query.lookup.LookupSnapshotTakerTest#testIOExceptionDuringLookupPersist"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Expected test to throw (an instance of io.druid.java.util.common.ISE and exception with message a string containing \"Exception during serialization of lookups\")",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ]
}