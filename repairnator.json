{
  "totalNumberSkippingTests": 2,
  "bugType": "only_fail",
  "totalNumberErroringTests": 66,
  "repo": "INRIA/spoon",
  "failingModule": "/root/workspace/INRIA/spoon/280142714",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 259,
  "error-types": [
    "java.lang.IndexOutOfBoundsException",
    "spoon.SpoonException",
    "java.lang.AssertionError",
    "java.lang.ClassCastException",
    "java.lang.NullPointerException",
    "org.junit.ComparisonFailure",
    "spoon.compiler.ModelBuildingException",
    "skipped"
  ],
  "totalNumberRunningTests": 1183,
  "failing-test-cases": [
    {
      "className": "spoon.test.trycatch.TryCatchTest",
      "failingMethods": [
        "spoon.test.trycatch.TryCatchTest#testMultiTryCatchWithCustomExceptions"
      ],
      "erroringMethods": [
        "spoon.test.trycatch.TryCatchTest#testExceptionJava7",
        "spoon.test.trycatch.TryCatchTest#testCatchOrder",
        "spoon.test.trycatch.TryCatchTest#testFullyQualifiedException"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@774cf171",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[catch (spoon.test.trycatch.testclasses.internal.MyException | spoon.test.trycatch.testclasses.internal.MyException2 ignore) {\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@7db7451a]\u003e",
          "isError": false
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@566046d7",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@6cc13396",
          "isError": true
        }
      ],
      "nbFailures": 1,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.parent.NullParentTest",
      "failingMethods": [
        "spoon.test.parent.NullParentTest#testAssertNullExpression",
        "spoon.test.parent.NullParentTest#testIfNullBranches",
        "spoon.test.parent.NullParentTest#testFieldNullDefaultExpression",
        "spoon.test.parent.NullParentTest#testReturnNullExpression",
        "spoon.test.parent.NullParentTest#testTargetedAccessNullTarget",
        "spoon.test.parent.NullParentTest#testForLoopNullChildren",
        "spoon.test.parent.NullParentTest#testLocalVariableNullDefaultExpression",
        "spoon.test.parent.NullParentTest#testTargetedExpressionNullTarget"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[int i \u003d 0]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@6c6de454]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[foo.bar]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@63a4c22d]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[int bar \u003d 0;]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@741742a9]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[return 0]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@5750d6dd]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[assert true : \"message\"]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@53c05182]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[for(inti\u003d0;i\u003c10;i++){}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@d7d3f7]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[if(true){}else{}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@1960e2a6]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[foo.foo()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@1a9dab19]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 8,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.staticFieldAccess.StaticAccessTest",
      "failingMethods": [
        "spoon.test.staticFieldAccess.StaticAccessTest#testReferences"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.MavenLauncherTest",
      "failingMethods": [
        "spoon.MavenLauncherTest#spoonMavenLauncherTest"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c5\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.field.FieldTest",
      "failingMethods": [
        "spoon.test.field.FieldTest#testFieldImplicitTarget",
        "spoon.test.field.FieldTest#testGetDefaultExpression"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.field.testclasses.BaseClass.PREFIX]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@5ae535b4]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[i]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@61505f0c]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.imports.ImportTest",
      "failingMethods": [
        "spoon.test.imports.ImportTest#testImportOfAnInnerClassInASuperClassPackageFullQualified",
        "spoon.test.imports.ImportTest#testNestedStaticPathWithTypedParameter",
        "spoon.test.imports.ImportTest#testDeepNestedStaticPathWithTypedParameterWithImports",
        "spoon.test.imports.ImportTest#testImportStaticAndFieldAccess",
        "spoon.test.imports.ImportTest#testFullQualifiedNameImport",
        "spoon.test.imports.ImportTest#testDeepNestedStaticPathWithTypedParameter",
        "spoon.test.imports.ImportTest#testSpoonWithImports",
        "spoon.test.imports.ImportTest#testNestedAccessPathWithTypedParameter",
        "spoon.test.imports.ImportTest#testImportOfInvocationOfPrivateClass",
        "spoon.test.imports.ImportTest#testNestedStaticPathWithTypedParameterWithImports",
        "spoon.test.imports.ImportTest#testAccessType",
        "spoon.test.imports.ImportTest#testStaticImportForInvocationInNoClasspath",
        "spoon.test.imports.ImportTest#testImportOfAnInnerClassInASuperClassPackageAutoImport",
        "spoon.test.imports.ImportTest#testNotImportExecutableType",
        "spoon.test.imports.ImportTest#testNestedAccessPathWithTypedParameterWithImports",
        "spoon.test.imports.ImportTest#testImportOfInvocationOfStaticMethod",
        "spoon.test.imports.ImportTest#testImportStaticAndFieldAccessWithImport",
        "spoon.test.imports.ImportTest#testNewInnerClassDefinesInItsClassAndSuperClass",
        "spoon.test.imports.ImportTest#testImportOfAnInnerClassInASuperClassAvailableInLibrary"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.imports.testclasses.internal.ChildClass.InnerClassProtected]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@67a91edf]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[new spoon.test.imports.testclasses.SubClass.Item(\"\")]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@11cbef09]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "new spoon.test.imports.testclasses2.StaticWithNested.StaticNested.StaticNested2\u003cK\u003e();",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.imports.testclasses.ClientClass.InnerClass]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@7a48e9f2]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.imports.testclasses.ClientClass.InnerClass]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@5178ff6f]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[public class A {\n    public class ArrayList extends java.util.ArrayList {    }\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@3402f178]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[private class WrappedListIterator extends spoon.test.imports.testclasses2.AbstractMapBasedMultimap\u003cK, V\u003e.WrappedCollection.WrappedIterator {}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@68d6f0fd]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[Constants.CONSTANT.foo]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@15c76d01]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[private class WrappedListIterator extends AbstractMapBasedMultimap\u003cK, V\u003e.WrappedCollection.WrappedIterator {}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@760f91e4]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "new StaticWithNested.StaticNested.StaticNested2\u003cK\u003e();",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[java.lang.Object, java.io.File, spoon.test.imports.testclasses.internal3.Foo]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@4ea78050, spoon.reflect.visitor.SnapshotPrinterTokenWriter@473a72d5, spoon.reflect.visitor.SnapshotPrinterTokenWriter@423648ca]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[visibility.YamlRepresenter.RepresentConfigurationSection]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@26a120f7]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.imports.testclasses.internal4.Constants.CONSTANT.foo]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@78e7e32a]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.imports.testclasses.internal2.Chimichanga]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@2169ee8]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.imports.testclasses.internal2.Menudo]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@3024d254]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[A]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@106ca171]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 19,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.snippets.SnippetTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.snippets.SnippetTest#testCompileSnippetWithContext",
        "spoon.test.snippets.SnippetTest#testCompileStatementWithReturn",
        "spoon.test.snippets.SnippetTest#testCompileSnippetSeveralTimes",
        "spoon.test.snippets.SnippetTest#testSnippetFullClass"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@687045a8",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@c7baaef",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@7e9775aa",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@7737cd06",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.casts.CastTest",
      "failingMethods": [
        "spoon.test.casts.CastTest#testCase4",
        "spoon.test.casts.CastTest#testTypeAnnotationOnCast"
      ],
      "erroringMethods": [
        "spoon.test.casts.CastTest#testCast1",
        "spoon.test.casts.CastTest#testCast3",
        "spoon.test.casts.CastTest#testCast2"
      ],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[T]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@3cbf9b7]\u003e",
          "isError": false
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@25f4e962",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@5fa5e1e",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@4cdfe1d1",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[((java.lang.@spoon.test.casts.Castings.TypeAnnotation(integer \u003d 1)\nString) (\"\"))]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@7c2b2358]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.initializers.InitializerTest",
      "failingMethods": [
        "spoon.test.initializers.InitializerTest#testModelBuildingInitializer"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.template.TemplateClassAccessTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.template.TemplateClassAccessTest#testClassAccessTest"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The reference to field named \"aClass\" is invalid, because there is no field with such name on path:\n CtInvocationImpl\n CtFieldReadImpl:aClass",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
      "failingMethods": [
        "spoon.support.visitor.java.JavaReflectionTreeBuilderTest#testScannerGenericsInClass"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[E extends java.lang.Comparable\u003c? super E\u003e]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@79b37909]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.model.BlockTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.model.BlockTest#testIterationStatements",
        "spoon.test.model.BlockTest#testAddEmptyBlock"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@218baded",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@53ed8ba4",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.reference.TypeReferenceTest",
      "failingMethods": [
        "spoon.test.reference.TypeReferenceTest#testConstructorCallInNoClasspath",
        "spoon.test.reference.TypeReferenceTest#testIgnoreEnclosingClassInActualTypes",
        "spoon.test.reference.TypeReferenceTest#testAnonymousClassesHaveAnEmptyStringForItsNameInNoClasspath",
        "spoon.test.reference.TypeReferenceTest#testPackageInNoClasspath",
        "spoon.test.reference.TypeReferenceTest#testTypeReferenceSpecifiedInClassDeclarationInNoClasspathWithGenerics",
        "spoon.test.reference.TypeReferenceTest#testInvocationWithFieldAccessInNoClasspath",
        "spoon.test.reference.TypeReferenceTest#testTypeReferenceSpecifiedInClassDeclarationInNoClasspath",
        "spoon.test.reference.TypeReferenceTest#testUnknownSuperClassWithSameNameInNoClasspath",
        "spoon.test.reference.TypeReferenceTest#testAnnotationOnMethodWithPrimitiveReturnTypeInNoClasspath"
      ],
      "erroringMethods": [
        "spoon.test.reference.TypeReferenceTest#testTypeDeclarationWildcard"
      ],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.reference.testclasses.Panini\u003cK, V\u003e.Itr\u003cjava.util.Map.Entry\u003cK, V\u003e\u003e]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@608bdef6]\u003e",
          "isError": false
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@8125c3e",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.lang.String]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@39cbc113]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[A.B\u003cC\u003e]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@62cc20e8]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[it.feio.android.omninotes.commons.models.Attachment]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@688d9464]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[@java.lang.Override]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@5bb83aff]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cBar[]\u003e but was:\u003cBar[\u003c?,? extends Tacos\u003c?\u003e\u003e]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Reference to Demo is missing",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[a.foo().bar(b)]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@30078ad2]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 9,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.parent.ParentContractTest",
      "failingMethods": [
        "spoon.test.parent.ParentContractTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@4222eb5f]",
        "spoon.test.parent.ParentContractTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@7ba6c2f3]",
        "spoon.test.parent.ParentContractTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@36d877cc]",
        "spoon.test.parent.ParentContractTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@6592120e]",
        "spoon.test.parent.ParentContractTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@652c4f19]",
        "spoon.test.parent.ParentContractTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@1add9c0b]",
        "spoon.test.parent.ParentContractTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@5cbfd4c7]",
        "spoon.test.parent.ParentContractTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@685a2ce4]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "call setParent contract failed for spoon.reflect.visitor.SnapshotPrinterTokenWriter@4e964d3f java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "call setParent contract failed for spoon.reflect.visitor.SnapshotPrinterTokenWriter@21481ff5 java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "call setParent contract failed for spoon.reflect.visitor.SnapshotPrinterTokenWriter@6cb6ba53 java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "call setParent contract failed for spoon.reflect.visitor.SnapshotPrinterTokenWriter@5c94adcc java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "call setParent contract failed for spoon.reflect.visitor.SnapshotPrinterTokenWriter@223eb611 java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "call setParent contract failed for spoon.reflect.visitor.SnapshotPrinterTokenWriter@5bcf0f0a java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "call setParent contract failed for spoon.reflect.visitor.SnapshotPrinterTokenWriter@224ef01f java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "call setParent contract failed for spoon.reflect.visitor.SnapshotPrinterTokenWriter@7761c6bc java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 8,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.ctBlock.TestCtBlock",
      "failingMethods": [
        "spoon.test.ctBlock.TestCtBlock#testRemoveStatement"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[i++]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@3e3055a8]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.annotation.AnnotationValuesTest",
      "failingMethods": [
        "spoon.test.annotation.AnnotationValuesTest#testAnnotationPrintAnnotation"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[@com.squareup.javapoet.AnnotationSpecTest.HasDefaultsAnnotation(o \u003d com.squareup.javapoet.AnnotationSpecTest.Breakfast.PANCAKES, p \u003d 1701, f \u003d 11.1, m \u003d { 9 , 8 , 1 }, l \u003d java.lang.Override.class, j \u003d @com.squareup.javapoet.AnnotationSpecTest.AnnotationA, q \u003d @com.squareup.javapoet.AnnotationSpecTest.AnnotationC(\"bar\"), r \u003d { java.lang.Float.class , java.lang.Double.class })\npublic class IsAnnotated {}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@4a7ec832]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.refactoring.RefactoringTest",
      "failingMethods": [
        "spoon.test.refactoring.RefactoringTest#testThisInConstructorAfterATransformation",
        "spoon.test.refactoring.RefactoringTest#testTransformedInstanceofAfterATransformation",
        "spoon.test.refactoring.RefactoringTest#testThisInConstructor"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[o]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@591cbbf9]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[this(\"\")]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@28d5ec73]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[this(\"\")]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@229d9c52]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.loop.LoopTest",
      "failingMethods": [
        "spoon.test.loop.LoopTest#testForeachShouldHaveAlwaysABlockInItsBody"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[for (spoon.test.loop.testclasses.Condition\u003c? super T\u003e condition : conditions)\n    this.conditions.add(spoon.test.loop.testclasses.Join.notNull(condition));\n]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@511b0b5d]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.annotation.AnnotationLoopTest",
      "failingMethods": [
        "spoon.test.annotation.AnnotationLoopTest#testAnnotationDeclaredInForInit"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[for (@java.lang.SuppressWarnings(\"rawtypes\")\njava.lang.String u \u003d \"\", p \u003d \"\", e \u003d \"\"; u !\u003d e; u \u003d p , p \u003d \"\") {\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@675883b]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.template.TemplateReplaceReturnTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.template.TemplateReplaceReturnTest#testReturnReplaceTemplate"
      ],
      "failures": [
        {
          "failureName": "java.lang.ClassCastException",
          "failureDetail": "spoon.support.reflect.code.CtBlockImpl cannot be cast to spoon.reflect.code.CtExpression",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.strings.StringLiteralTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.strings.StringLiteralTest#testSnippetFullClass"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@6c1ca986",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.constructorcallnewclass.NewClassTest",
      "failingMethods": [
        "spoon.test.constructorcallnewclass.NewClassTest#testNewClassInEnumeration",
        "spoon.test.constructorcallnewclass.NewClassTest#testCtNewClassInNoClasspath"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[\"\u003e\"]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@31d01f78]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[org.apache.lucene.store.Lock$]With\u003e but was:\u003c[Lock.]With\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.api.APITest",
      "failingMethods": [
        "spoon.test.api.APITest#testSetterInNodes"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Check the method \u003cC extends spoon.reflect.declaration.CtVariable\u003e C setDefaultExpression(spoon.reflect.code.CtExpression) in the declaring class spoon.support.reflect.code.CtCatchVariableImpl",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.template.TemplateTest",
      "failingMethods": [
        "spoon.test.template.TemplateTest#substituteTypeAccessReference",
        "spoon.test.template.TemplateTest#testTemplateArrayAccess",
        "spoon.test.template.TemplateTest#testTemplateInterfaces",
        "spoon.test.template.TemplateTest#testExtensionBlock",
        "spoon.test.template.TemplateTest#testCheckBoundTemplate",
        "spoon.test.template.TemplateTest#testExtensionDecoupledSubstitutionVisitor",
        "spoon.test.template.TemplateTest#testTemplateMatcher",
        "spoon.test.template.TemplateTest#testTemplateC1",
        "spoon.test.template.TemplateTest#testStatementTemplateRootSubstitution",
        "spoon.test.template.TemplateTest#substituteStringLiteral",
        "spoon.test.template.TemplateTest#testTemplateInvocationSubstitution",
        "spoon.test.template.TemplateTest#testTemplateInheritance",
        "spoon.test.template.TemplateTest#testSubstitutionInsertAllNtoN"
      ],
      "erroringMethods": [
        "spoon.test.template.TemplateTest#testFieldAccessNameSubstitutionInInnerClass",
        "spoon.test.template.TemplateTest#substituteSubString",
        "spoon.test.template.TemplateTest#testFieldAccessNameSubstitution",
        "spoon.test.template.TemplateTest#testAnotherFieldAccessNameSubstitution"
      ],
      "failures": [
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.template.testclasses.logger.Logger.exit(\"enter\")]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@6a7a9508]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.template.TypeReferenceClassAccess.Example\u003cjava.util.Date\u003e]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@4554aa63]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c3\u003e but was:\u003c0\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c4\u003e but was:\u003c5\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cs[uper.toBeOverriden()]\u003e but was:\u003cs[poon.reflect.visitor.SnapshotPrinterTokenWriter@4d14766a]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[(l.size()) \u003e 10]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@5c28683a]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.template.testclasses.logger.Logger.exit(\"enter\")]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@7dd8bc48]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c3\u003e but was:\u003c4\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.lang.String stringField1 \u003d \"value1\";]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@356a6f87]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.lang.String s \u003d \"Spoon is cool!\"]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@1aa295f6]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c2\u003e but was:\u003c0\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[iface.hashCode()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@7aba6438]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 13,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.condition.ConditionalTest",
      "failingMethods": [
        "spoon.test.condition.ConditionalTest#testNoBlockInConditionAndLoop",
        "spoon.test.condition.ConditionalTest#testConditional",
        "spoon.test.condition.ConditionalTest#testConditionalWithAssignment"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[if (true)\n    java.lang.System.out.println();\nelse if (true)\n    java.lang.System.out.println();\nelse\n    java.lang.System.out.println();\n]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@39abfc54]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[x \u003d (a \u003d\u003d 18) ? true : false]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@7424c957]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[return a \u003d\u003d 18 ? true : false]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@3a605a4f]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.annotation.AnnotationTest",
      "failingMethods": [
        "spoon.test.annotation.AnnotationTest#testOutputGeneratedByTypeAnnotation",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationInExtendsImplementsOfAClass",
        "spoon.test.annotation.AnnotationTest#testAnnotationWithDefaultArrayValue",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationInCast",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationInReturnTypeInMethod",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationWithGenericTypesInClassDeclaration",
        "spoon.test.annotation.AnnotationTest#testAnnotationIntrospection",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationOnParameterInMethod",
        "spoon.test.annotation.AnnotationTest#testFieldAndMethodInAnnotation",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationWithGenericTypesInStatements",
        "spoon.test.annotation.AnnotationTest#annotationOverrideFQNIsOK",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationInNewInstance",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationOnLocalVariableInMethod",
        "spoon.test.annotation.AnnotationTest#testGetAnnotationOuter",
        "spoon.test.annotation.AnnotationTest#testUsageOfTypeAnnotationBeforeExceptionInSignatureOfMethod",
        "spoon.test.annotation.AnnotationTest#testUsageOfParametersInTypeAnnotation",
        "spoon.test.annotation.AnnotationTest#testWritingAnnotParamArray"
      ],
      "erroringMethods": [
        "spoon.test.annotation.AnnotationTest#testAccessAnnotationValue"
      ],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: is \"java.lang.Override\"\n     but: was \"Override\"",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "Cast with an type annotation must be well printed expected:\u003c[((java.lang.@spoon.test.annotation.testclasses.TypeAnnotation\nString) (s))]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@2dedb508]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.lang.Class\u003c?\u003e[] value() default {  };]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@14b86d0e]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "Method with an type annotation must be well printed expected:\u003c[@spoon.test.annotation.testclasses.TypeAnnotation\nT]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@12fe97db]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "Return type with an type annotation must be well printed expected:\u003c[public java.lang.@spoon.test.annotation.testclasses.TypeAnnotation\nString m3() {\n    return \"\";\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@5b0112f8]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "New class with an type annotation must be well printed expected:\u003c[new java.lang.@spoon.test.annotation.testclasses.TypeAnnotation\nString()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@6df0a447]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.lang.String value \u003d \"\";]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@b12703]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "First generic type must have type annotation expected:\u003c[@spoon.test.annotation.testclasses.TypeAnnotation\nT]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@35f5c892]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[annotation.equals(null)]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@181c5d6e]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "Parameter type with an type annotation must be well printed expected:\u003c[java.lang.@spoon.test.annotation.testclasses.TypeAnnotation\nString param]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@1fd64548]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "Thrown type with an type annotation must be well printed expected:\u003c[public void m() throws java.lang.@spoon.test.annotation.testclasses.TypeAnnotation\nException {\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@2ed25cab]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[@java.lang.SuppressWarnings({ \"unused\" , \"rawtypes\" })]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@672d2995]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile testclasses",
          "isError": false
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "Local variable type with an type annotation must be well printed expected:\u003c[java.lang.@spoon.test.annotation.testclasses.TypeAnnotation\nString s \u003d \"\"]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@18cd60bd]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "Extends with an type annotation must be well printed expected:\u003cspoon.[test.annotation.testclasses.@spoon.test.annotation.testclasses.TypeAnnotation\nAnnotArrayInnerClass]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@2a1c2992]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "integer parameter in type annotation expected:\u003c[java.util.List\u003c@spoon.test.annotation.testclasses.TypeAnnotation(integer \u003d 1)\nT\u003e list]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@62c4eb29]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 17,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.intercession.RemoveTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.intercession.RemoveTest#testRemoveAllStatements"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@12a01979",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.strings.StringTest",
      "failingMethods": [
        "spoon.test.strings.StringTest#testModelBuildingInitializer"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[(\"a\" + \"b\")]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@79d6877a]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.query_function.VariableReferencesTest",
      "failingMethods": [
        "spoon.test.query_function.VariableReferencesTest#testPotentialVariableAccessFromStaticMethod"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[org.junit.Assert.assertTrue((field \u003d\u003d 2))]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@3c8cf86a]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.pkg.PackageTest",
      "failingMethods": [
        "spoon.test.pkg.PackageTest#testPrintPackageInfoWhenNothingInPackage",
        "spoon.test.pkg.PackageTest#testAnnotationInPackageInfoWhenTemplatesCompiled",
        "spoon.test.pkg.PackageTest#testAnnotationOnPackage"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Your parameter can\u0027t be null.",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile package-info.java",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.varargs.VarArgsTest",
      "failingMethods": [
        "spoon.test.varargs.VarArgsTest#testModelBuildingInitializer"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.lang.String[]]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@11221357]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.reference.ExecutableReferenceGenericTest",
      "failingMethods": [
        "spoon.test.reference.ExecutableReferenceGenericTest#testExecutableReferences"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.template.TemplateInvocationSubstitutionTest",
      "failingMethods": [
        "spoon.test.template.TemplateInvocationSubstitutionTest#testInvocationSubstitutionByExpression",
        "spoon.test.template.TemplateInvocationSubstitutionTest#testInvocationSubstitutionByStatement"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.lang.System.out.println(\"abc\".substring(1))]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@201505c2]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[throw new java.lang.RuntimeException(\"Failed\")]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@6ccb6906]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.targeted.TargetedExpressionTest",
      "failingMethods": [
        "spoon.test.targeted.TargetedExpressionTest#testStaticTargetsOfInv",
        "spoon.test.targeted.TargetedExpressionTest#testStaticTargetsOfFieldAccessNoClasspath",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldAccessInInnerClass",
        "spoon.test.targeted.TargetedExpressionTest#testClassDeclaredInALambda",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldAccess",
        "spoon.test.targeted.TargetedExpressionTest#testNotTargetedExpression",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfFieldInAnonymousClass",
        "spoon.test.targeted.TargetedExpressionTest#testCastWriteWithGenerics",
        "spoon.test.targeted.TargetedExpressionTest#testCtSuperAccess",
        "spoon.test.targeted.TargetedExpressionTest#testInitializeFieldAccessInNoclasspathMode",
        "spoon.test.targeted.TargetedExpressionTest#testCtThisAccess",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfInv",
        "spoon.test.targeted.TargetedExpressionTest#testStaticTargetsOfInvNoClasspath",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfInvInInnerClass",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfInvInAnonymousClass",
        "spoon.test.targeted.TargetedExpressionTest#testTargetsOfStaticFieldAccess"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[new spoon.test.targeted.testclasses.Foo(0, 0).staticMethod()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@13564f95]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[this.i]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@cc0ff49]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[this.bar]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@275154a]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[new Foo().i]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@c5bbae0]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[this.method()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@6e426e43]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.targeted.testclasses.InternalSuperCall.super.toString()]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@2c1d3e7a]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[this.i]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@62a868ae]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[this.k]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@3c8c05ee]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[this.index]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@39ed4533]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[this.i]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@5ec6a583]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[this.i]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@4149dd8d]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[new spoon.test.targeted.testclasses.Foo(0, 0).method()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@31cf0ff3]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[inv()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@4f447f1]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[((spoon.test.targeted.testclasses.Pozole\u003cT\u003e) (v1))]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@7345f0d0]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[this.invStatic()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@d722ba2]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[new Foo(0, 0).staticMethod()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@2c531557]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 16,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.template.TemplateEnumAccessTest",
      "failingMethods": [
        "spoon.test.template.TemplateEnumAccessTest#testEnumAccessTest"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.lang.annotation.ElementType.FIELD.name()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@5185df78]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.methodreference.MethodReferenceTest",
      "failingMethods": [
        "spoon.test.methodreference.MethodReferenceTest#testNoClasspathExecutableReferenceExpression"
      ],
      "erroringMethods": [
        "spoon.test.methodreference.MethodReferenceTest#testReferenceToAClassParametrizedConstructor",
        "spoon.test.methodreference.MethodReferenceTest#testReferenceToAnInstanceMethodOfAParticularObject",
        "spoon.test.methodreference.MethodReferenceTest#testReferenceToAJavaUtilClassConstructor",
        "spoon.test.methodreference.MethodReferenceTest#testReferenceToAStaticMethod",
        "spoon.test.methodreference.MethodReferenceTest#testReferenceToAnInstanceMethodOfAnArbitraryObjectOfAParticularType",
        "spoon.test.methodreference.MethodReferenceTest#testReferenceToAnInstanceMethodOfMultiParticularObject",
        "spoon.test.methodreference.MethodReferenceTest#testReferenceToAConstructor"
      ],
      "failures": [
        {
          "failureName": "java.lang.IndexOutOfBoundsException",
          "failureDetail": "Index: 0, Size: 0",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[elemType::isInstance]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@49eff922]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.IndexOutOfBoundsException",
          "failureDetail": "Index: 0, Size: 0",
          "isError": true
        },
        {
          "failureName": "java.lang.IndexOutOfBoundsException",
          "failureDetail": "Index: 0, Size: 0",
          "isError": true
        },
        {
          "failureName": "java.lang.IndexOutOfBoundsException",
          "failureDetail": "Index: 0, Size: 0",
          "isError": true
        },
        {
          "failureName": "java.lang.IndexOutOfBoundsException",
          "failureDetail": "Index: 0, Size: 0",
          "isError": true
        },
        {
          "failureName": "java.lang.IndexOutOfBoundsException",
          "failureDetail": "Index: 0, Size: 0",
          "isError": true
        },
        {
          "failureName": "java.lang.IndexOutOfBoundsException",
          "failureDetail": "Index: 0, Size: 0",
          "isError": true
        }
      ],
      "nbFailures": 1,
      "nbErrors": 7
    },
    {
      "className": "spoon.test.ctClass.CtClassTest",
      "failingMethods": [
        "spoon.test.ctClass.CtClassTest#testAllTypeReferencesToALocalTypeShouldNotStartWithNumber"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[public Cook() {\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@3c82a26c]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.factory.FactoryTest",
      "failingMethods": [
        "spoon.test.factory.FactoryTest#testClassAccessCreatedFromFactories"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.factory.testclasses.Foo.class]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@632f0dac]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.filters.FilterTest",
      "failingMethods": [
        "spoon.test.filters.FilterTest#testFilters",
        "spoon.test.filters.FilterTest#testAnnotationFilter",
        "spoon.test.filters.FilterTest#testOverridingMethodFromAbstractClass",
        "spoon.test.filters.FilterTest#testOverridingMethodFromInterface"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c2\u003e but was:\u003c0\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...filters.testclasses.[Abstract]Tostada$1\u003e but was:\u003c...filters.testclasses.[]Tostada$1\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c2\u003e but was:\u003c0\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...filters.testclasses.[Abstract]Tostada\u003e but was:\u003c...filters.testclasses.[]Tostada\u003e",
          "isError": false
        }
      ],
      "nbFailures": 4,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.template.TemplateArrayAccessTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.template.TemplateArrayAccessTest#testArrayAccess",
        "spoon.test.template.TemplateArrayAccessTest#testArrayLengthAccess"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The reference to field named \"anArray\" is invalid, because there is no field with such name on path:\n CtInvocationImpl\n CtFieldReadImpl:anArray",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The reference to field named \"anArray\" is invalid, because there is no field with such name on path:\n CtIfImpl\n CtBinaryOperatorImpl\n CtFieldReadImpl\n CtFieldReadImpl:anArray",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.control.ControlTest",
      "failingMethods": [
        "spoon.test.control.ControlTest#testModelBuildingFor",
        "spoon.test.control.ControlTest#testModelBuildingDoWhile"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[i++]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@e8f495d]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[int i \u003d 0]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@1542bcfe]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.literal.LiteralTest",
      "failingMethods": [
        "spoon.test.literal.LiteralTest#testCharLiteralInNoClasspath"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c:\u003e but was:\u003c,\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.constructorcallnewclass.ConstructorCallTest",
      "failingMethods": [
        "spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallWithGenericArray",
        "spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallObjectWithoutParameters",
        "spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallStringWithParameters",
        "spoon.test.constructorcallnewclass.ConstructorCallTest#testCoreConstructorCall",
        "spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallStringWithoutParameters",
        "spoon.test.constructorcallnewclass.ConstructorCallTest#testConstructorCallObjectWithParameters"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[new Foo()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@1bf1971b]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Constructor call is typed by the class of the constructor expected:\u003cclass spoon.test.constructorcallnewclass.testclasses.Foo\u003e but was:\u003cclass java.lang.String\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Constructor call is typed by the class of the constructor expected:\u003cclass java.lang.String\u003e but was:\u003cclass spoon.test.constructorcallnewclass.testclasses.Foo$BarImpl\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@6cea3cce]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Constructor call is typed by the class of the constructor expected:\u003cclass java.lang.String\u003e but was:\u003cinterface spoon.test.constructorcallnewclass.testclasses.Foo$Bar\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Constructor call is typed by the class of the constructor expected:\u003cclass spoon.test.constructorcallnewclass.testclasses.Foo\u003e but was:\u003cclass java.lang.String\u003e",
          "isError": false
        }
      ],
      "nbFailures": 6,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.comparison.EqualTest",
      "failingMethods": [
        "spoon.test.comparison.EqualTest#testEqualsEmptyException"
      ],
      "erroringMethods": [
        "spoon.test.comparison.EqualTest#testEqualsMultitype",
        "spoon.test.comparison.EqualTest#testEqualsActualTypeRef",
        "spoon.test.comparison.EqualTest#testEqualsComment"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@48247872",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@7423c668",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[\"\"]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@16f8fffe]\u003e",
          "isError": false
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@49efbdb4",
          "isError": true
        }
      ],
      "nbFailures": 1,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.interfaces.InterfaceTest",
      "failingMethods": [
        "spoon.test.interfaces.InterfaceTest#testDefaultMethodInInterface"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "The default method must to be well printed expected:\u003c[default java.time.ZonedDateTime getZonedDateTime(java.lang.String zoneString) {\n    return java.time.ZonedDateTime.of(getLocalDateTime(), spoon.test.interfaces.testclasses.InterfaceWithDefaultMethods.getZoneId(zoneString));\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@6def2c5c]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.replace.ReplaceParametrizedTest",
      "failingMethods": [
        "spoon.test.replace.ReplaceParametrizedTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@3918bc7b]",
        "spoon.test.replace.ReplaceParametrizedTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@59d58776]",
        "spoon.test.replace.ReplaceParametrizedTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@7b83e235]",
        "spoon.test.replace.ReplaceParametrizedTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@2b74605f]",
        "spoon.test.replace.ReplaceParametrizedTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@7f0364f9]",
        "spoon.test.replace.ReplaceParametrizedTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@41156ea0]",
        "spoon.test.replace.ReplaceParametrizedTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@f45353d]",
        "spoon.test.replace.ReplaceParametrizedTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@797c3f45]",
        "spoon.test.replace.ReplaceParametrizedTest#testContract[spoon.reflect.visitor.SnapshotPrinterTokenWriter@25521353]"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "CtCatchVariableImpl failed for setDefaultExpression",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "CtTypeAccessImpl failed for setType",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "CtAnnotationMethodImpl failed for setBody",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "CtAnnotationTypeImpl failed for setSuperclass",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "CtAnonymousExecutableImpl failed for setType",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "CtConstructorImpl failed for setType",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "CtEnumImpl failed for setSuperclass",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "CtInterfaceImpl failed for setSuperclass",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "CtParameterImpl failed for setDefaultExpression",
          "isError": false
        }
      ],
      "nbFailures": 9,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.ctType.CtTypeParameterTest",
      "failingMethods": [
        "spoon.test.ctType.CtTypeParameterTest#testTypeErasure"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "TypeErasure of executable param spoon.test.ctType.testclasses.ErasureModelA$ModelB#\u003cI\u003e expected:\u003c[java.lang.Object]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@295dec4a]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.api.NoClasspathTest",
      "failingMethods": [
        "spoon.test.api.NoClasspathTest#test"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[x.method()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@64f74372]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.signature.SignatureTest",
      "failingMethods": [
        "spoon.test.signature.SignatureTest#testUnboundFieldSignature",
        "spoon.test.signature.SignatureTest#testNullSignatureInUnboundVariable",
        "spoon.test.signature.SignatureTest#testMethodInvocationSignatureWithVariableAccess"
      ],
      "erroringMethods": [
        "spoon.test.signature.SignatureTest#testNullSignature",
        "spoon.test.signature.SignatureTest#testMethodInvocationSignatureStaticFieldsVariables",
        "spoon.test.signature.SignatureTest#testLiteralSignature"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@41a934e5",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[Complex.I]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@3b154a72]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[this.mfield]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@19f7b7e7]\u003e",
          "isError": false
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@4bccf4dd",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...ava.lang.Object foo([int])\u003e but was:\u003c...ava.lang.Object foo([java.lang.String])\u003e",
          "isError": false
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@36a7a474",
          "isError": true
        }
      ],
      "nbFailures": 3,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.arrays.ArraysTest",
      "failingMethods": [
        "spoon.test.arrays.ArraysTest#testInitializeWithNewArray",
        "spoon.test.arrays.ArraysTest#testArrayReferences"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[new java.lang.String[0]]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@214098ce]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[@spoon.test.arrays.ArrayClass.TypeAnnotation(integer \u003d 1)]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@fe589fc]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.api.MetamodelTest",
      "failingMethods": [
        "spoon.test.api.MetamodelTest#testGetterSetterFroRole"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c[TARGET, STATEMENT, NESTED_TYPE, VALUE, LEFT_OPERAND, FOR_INIT, POSITION, INTERFACE, DIMENSION, ANNOTATION, TYPE_PARAMETER, COMMENT_CONTENT, BOUND, ELSE, LABEL, IS_DEFAULT, TYPE, PARAMETER, ANNOTATION_TYPE, CAST, MODIFIER, TARGET_LABEL, FIELD, NAME, CASE, COMMENT_TAG, THEN, CONDITION, FINALIZER, THROWN, BODY, EXECUTABLE, FOR_UPDATE, PACKAGE_REF, COMMENT, DEFAULT_EXPRESSION, CATCH, VARIABLE, ASSIGNED, ASSIGNMENT, ARGUMENT, IS_VARARGS, RIGHT_OPERAND, SUPER_TYPE, IS_UPPER, SUB_PACKAGE, IS_IMPLICIT, COMMENT_TYPE, IS_FINAL, IS_STATIC, OPERATOR_KIND, TRY_RESOURCE, IS_SHADOW, CONSTRUCTOR, EXPRESSION]\u003e but was:\u003c[]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.testing.CtPackageAssertTest",
      "failingMethods": [
        "spoon.testing.CtPackageAssertTest#testEqualityBetweenTwoCtPackage"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "spoon.support.reflect.declaration.CtClassImpl@103f4 and spoon.support.reflect.declaration.CtClassImpl@103f4 aren\u0027t equals.",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.reflect.ast.AstCheckerTest",
      "failingMethods": [
        "spoon.reflect.ast.AstCheckerTest#testPushToStackChanges"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\u003cC extends spoon.reflect.declaration.CtVariable\u003e C setDefaultExpression(spoon.reflect.code.CtExpression) on spoon.support.reflect.code.CtCatchVariableImpl\n\u003cC extends spoon.reflect.declaration.CtTypedElement\u003e C setType(spoon.reflect.reference.CtTypeReference) on spoon.support.reflect.code.CtConstructorCallImpl\n\u003cC extends spoon.reflect.declaration.CtTypedElement\u003e C setType(spoon.reflect.reference.CtTypeReference) on spoon.support.reflect.code.CtInvocationImpl\n\u003cC extends spoon.reflect.declaration.CtTypedElement\u003e C setType(spoon.reflect.reference.CtTypeReference) on spoon.support.reflect.code.CtTypeAccessImpl\n\u003cC extends spoon.reflect.declaration.CtTypedElement\u003e C setType(spoon.reflect.reference.CtTypeReference) on spoon.support.reflect.code.CtVariableAccessImpl\n\u003cC extends spoon.reflect.declaration.CtType\u003e C setSuperclass(spoon.reflect.reference.CtTypeReference) on spoon.support.reflect.declaration.CtAnnotationTypeImpl\n\u003cC extends spoon.reflect.declaration.CtType\u003e C setSuperInterfaces(java.util.Set) on spoon.support.reflect.declaration.CtAnnotationTypeImpl\nspoon.reflect.declaration.CtExecutable setParameters(java.util.List) on spoon.support.reflect.declaration.CtAnonymousExecutableImpl\nspoon.reflect.declaration.CtExecutable addParameter(spoon.reflect.declaration.CtParameter) on spoon.support.reflect.declaration.CtAnonymousExecutableImpl\nboolean removeParameter(spoon.reflect.declaration.CtParameter) on spoon.support.reflect.declaration.CtAnonymousExecutableImpl\nspoon.reflect.declaration.CtExecutable setThrownTypes(java.util.Set) on spoon.support.reflect.declaration.CtAnonymousExecutableImpl\nspoon.reflect.declaration.CtExecutable addThrownType(spoon.reflect.reference.CtTypeReference) on spoon.support.reflect.declaration.CtAnonymousExecutableImpl\nboolean removeThrownType(spoon.reflect.reference.CtTypeReference) on spoon.support.reflect.declaration.CtAnonymousExecutableImpl\n\u003cT extends spoon.reflect.declaration.CtNamedElement\u003e T setSimpleName(java.lang.String) on spoon.support.reflect.declaration.CtAnonymousExecutableImpl\n\u003cC extends spoon.reflect.declaration.CtTypedElement\u003e C setType(spoon.reflect.reference.CtTypeReference) on spoon.support.reflect.declaration.CtAnonymousExecutableImpl\n\u003cC extends spoon.reflect.code.CtStatement\u003e C setLabel(java.lang.String) on spoon.support.reflect.declaration.CtClassImpl\n\u003cC extends spoon.reflect.declaration.CtNamedElement\u003e C setSimpleName(java.lang.String) on spoon.support.reflect.declaration.CtConstructorImpl\n\u003cC extends spoon.reflect.declaration.CtTypedElement\u003e C setType(spoon.reflect.reference.CtTypeReference) on spoon.support.reflect.declaration.CtConstructorImpl\n\u003cC extends spoon.reflect.declaration.CtType\u003e C setSuperclass(spoon.reflect.reference.CtTypeReference) on spoon.support.reflect.declaration.CtInterfaceImpl\n\u003cC extends spoon.reflect.declaration.CtVariable\u003e C setDefaultExpression(spoon.reflect.code.CtExpression) on spoon.support.reflect.declaration.CtParameterImpl\n\u003cC extends spoon.reflect.declaration.CtType\u003e C setSuperclass(spoon.reflect.reference.CtTypeReference) on spoon.support.reflect.declaration.CtTypeImpl\n\u003cF,C extends spoon.reflect.declaration.CtType\u003e C addFieldAtTop(spoon.reflect.declaration.CtField) on spoon.support.reflect.declaration.CtTypeParameterImpl\n\u003cF,C extends spoon.reflect.declaration.CtType\u003e C addField(spoon.reflect.declaration.CtField) on spoon.support.reflect.declaration.CtTypeParameterImpl\n\u003cF,C extends spoon.reflect.declaration.CtType\u003e C addField(int,spoon.reflect.declaration.CtField) on spoon.support.reflect.declaration.CtTypeParameterImpl\n\u003cC extends spoon.reflect.declaration.CtType\u003e C setFields(java.util.List) on spoon.support.reflect.declaration.CtTypeParameterImpl\n\u003cF\u003e boolean removeField(spoon.reflect.declaration.CtField) on spoon.support.reflect.declaration.CtTypeParameterImpl\n\u003cN,C extends spoon.reflect.declaration.CtType\u003e C addNestedType(spoon.reflect.declaration.CtType) on spoon.support.reflect.declaration.CtTypeParameterImpl\n\u003cN\u003e boolean removeNestedType(spoon.reflect.declaration.CtType) on spoon.support.reflect.declaration.CtTypeParameterImpl\n\u003cC extends spoon.reflect.declaration.CtType\u003e C setNestedTypes(java.util.Set) on spoon.support.reflect.declaration.CtTypeParameterImpl\n\u003cC extends spoon.reflect.declaration.CtModifiable\u003e C setModifiers(java.util.Set) on spoon.support.reflect.declaration.CtTypeParameterImpl\n\u003cC extends spoon.reflect.declaration.CtModifiable\u003e C addModifier(spoon.reflect.declaration.ModifierKind) on spoon.support.reflect.declaration.CtTypeParameterImpl\nboolean removeModifier(spoon.reflect.declaration.ModifierKind) on spoon.support.reflect.declaration.CtTypeParameterImpl\n\u003cM,C extends spoon.reflect.declaration.CtType\u003e C addMethod(spoon.reflect.declaration.CtMethod) on spoon.support.reflect.declaration.CtTypeParameterImpl\n\u003cM\u003e boolean removeMethod(spoon.reflect.declaration.CtMethod) on spoon.support.reflect.declaration.CtTypeParameterImpl\n\u003cS,C extends spoon.reflect.declaration.CtType\u003e C addSuperInterface(spoon.reflect.reference.CtTypeReference) on spoon.support.reflect.declaration.CtTypeParameterImpl\n\u003cS\u003e boolean removeSuperInterface(spoon.reflect.reference.CtTypeReference) on spoon.support.reflect.declaration.CtTypeParameterImpl\n\u003cC extends spoon.reflect.declaration.CtType\u003e C setMethods(java.util.Set) on spoon.support.reflect.declaration.CtTypeParameterImpl\n\u003cC extends spoon.reflect.declaration.CtType\u003e C setSuperInterfaces(java.util.Set) on spoon.support.reflect.declaration.CtTypeParameterImpl\n\u003cC extends spoon.reflect.reference.CtActualTypeContainer\u003e C setActualTypeArguments(java.util.List) on spoon.support.reflect.reference.CtTypeParameterReferenceImpl\n\u003cC extends spoon.reflect.reference.CtActualTypeContainer\u003e C addActualTypeArgument(spoon.reflect.reference.CtTypeReference) on spoon.support.reflect.reference.CtTypeParameterReferenceImpl\nboolean removeActualTypeArgument(spoon.reflect.reference.CtTypeReference) on spoon.support.reflect.reference.CtTypeParameterReferenceImpl\n\u003cT extends spoon.reflect.reference.CtReference\u003e T setSimpleName(java.lang.String) on spoon.support.reflect.reference.CtWildcardReferenceImpl\n",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.intercession.insertBefore.InsertMethodsTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertBeforeWithBrace",
        "spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertAfterWithoutBrace",
        "spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertBefore",
        "spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertAfterWithBrace",
        "spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertAfterSwitchCase",
        "spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertBeforeWithoutBrace",
        "spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertAfter",
        "spoon.test.intercession.insertBefore.InsertMethodsTest#testInsertBeforeSwitchCase",
        "spoon.test.intercession.insertBefore.InsertMethodsTest#insertBeforeAndUpdateParent"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@32afda31",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@2722583e",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@43dddc62",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@3cd84e18",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@7612dfd8",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@9e84df7",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@7843ec34",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@3547931",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@1b2e273d",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 9
    },
    {
      "className": "spoon.test.enums.EnumsTest",
      "failingMethods": [
        "spoon.test.enums.EnumsTest#testAnnotationsOnEnum",
        "spoon.test.enums.EnumsTest#testEnumWithoutField"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[public enum Burritos {\n    ;\n\n    public static void m() {\n    }\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@724b5a52]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[public enum Foo {\n@java.lang.Deprecated\n    Bar;}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@672ab9e0]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.generics.GenericsTest",
      "failingMethods": [
        "spoon.test.generics.GenericsTest#testName",
        "spoon.test.generics.GenericsTest#testGenericsInQualifiedNameInConstructorCall",
        "spoon.test.generics.GenericsTest#testInvocationGenerics",
        "spoon.test.generics.GenericsTest#testGenericMethodCallWithExtend",
        "spoon.test.generics.GenericsTest#testGenericInField",
        "spoon.test.generics.GenericsTest#testMethodsWithGenericsWhoExtendsObject",
        "spoon.test.generics.GenericsTest#testTypeParameterReferenceAsActualTypeArgument",
        "spoon.test.generics.GenericsTest#testGenericsInConstructorCall",
        "spoon.test.generics.GenericsTest#testModelBuildingSimilarSignatureMethods",
        "spoon.test.generics.GenericsTest#testClassTypingContext",
        "spoon.test.generics.GenericsTest#testRecursiveTypeAdapting",
        "spoon.test.generics.GenericsTest#testConstructorCallGenerics",
        "spoon.test.generics.GenericsTest#testGenericWithExtendsInDeclaration",
        "spoon.test.generics.GenericsTest#testGenericsOnLocalType",
        "spoon.test.generics.GenericsTest#testBugCommonCollection",
        "spoon.test.generics.GenericsTest#testNewClassGenerics",
        "spoon.test.generics.GenericsTest#testInstanceOfMapEntryGeneric",
        "spoon.test.generics.GenericsTest#testCtTypeReference_getSuperclass",
        "spoon.test.generics.GenericsTest#testModelBuildingTree"
      ],
      "erroringMethods": [
        "spoon.test.generics.GenericsTest#testDiamond1"
      ],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.util.List\u003cjava.lang.String\u003e l \u003d new java.util.ArrayList\u003c\u003e()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@76e6c632]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.util.List\u003cjava.util.List\u003cM\u003e\u003e]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@483eda4e]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[public static final spoon.test.generics.ACLass\u003c?\u003e INSTANCE \u003d new spoon.test.generics.ACLass();]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@1a3f92c6]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[new Beer()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@245f501c]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[? super java.lang.Object]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@42f77e40]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[new Pozole()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@720853de]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[o instanceof java.util.Map.Entry\u003c?, ?\u003e]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@380fdcae]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[new javax.lang.model.util.SimpleTypeVisitor7\u003cspoon.test.generics.testclasses.Tacos, java.lang.Void\u003e() {}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@3605c3f6]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[new Cook\u003cjava.lang.String\u003e()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@4996baa7]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.generics.ClassThatDefinesANewTypeArgument]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@2864a568]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.lang.Integer]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@4477b16a]\u003e",
          "isError": false
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@6c1d6fb3",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[\u003cjava.lang.String\u003ethis(1)]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@6935c7bc]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[[java.io.Serializable, java.lang.Comparable\u003cV\u003e]]\u003e but was:\u003c[[spoon.reflect.visitor.SnapshotPrinterTokenWriter@79322e54, spoon.reflect.visitor.SnapshotPrinterTokenWriter@150b2dfa]]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.generics.testclasses.Tacos.\u003cV, C\u003emakeTacos()]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@30758489]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[E]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@2e5de56d]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.generics.testclasses.CelebrationLunch\u003cjava.lang.Integer, java.lang.Long, java.lang.Double\u003e.WeddingLunch\u003cspoon.test.generics.testclasses.Mole\u003e]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@220ff354]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[E extends java.lang.Enum\u003cE\u003e]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@4ab76d1f]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.generics.testclasses.CelebrationLunch\u003cjava.lang.Integer, java.lang.Long, java.lang.Double\u003e.WeddingLunch\u003cspoon.test.generics.testclasses.Mole\u003e]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@34fe7ea5]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 19,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.model.TypeTest",
      "failingMethods": [
        "spoon.test.model.TypeTest#testGetUsedTypes"
      ],
      "erroringMethods": [
        "spoon.test.model.TypeTest#testGetUsedTypesForTypeInRootPackage"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@5705e51a",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c3\u003e but was:\u003c4\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.model.SwitchCaseTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.model.SwitchCaseTest#testIterationStatements"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@6acc97bc",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.reflect.visitor.CtScannerTest",
      "failingMethods": [
        "spoon.reflect.visitor.CtScannerTest#testScannerCallsAllProperties"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "no spoon.reflect.reference.CtCatchVariableReference getReference() in spoon.reflect.visitor.SnapshotPrinterTokenWriter@7bb0a39c",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.prettyprinter.QualifiedThisRefTest",
      "failingMethods": [
        "spoon.test.prettyprinter.QualifiedThisRefTest#testCloneThisAccess"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[notify()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@4ea47cc]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.refactoring.MethodsRefactoringTest",
      "failingMethods": [
        "spoon.test.refactoring.MethodsRefactoringTest#testAllMethodsSameSignatureFunction"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.processing.ProcessingTest",
      "failingMethods": [
        "spoon.test.processing.ProcessingTest#testInsertBegin",
        "spoon.test.processing.ProcessingTest#testInsertEnd"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "insert failed for method method3 expected:\u003c[int i \u003d 0;]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@33687bb0]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "insert failed for method method3 expected:\u003c[int i \u003d 0]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@660fe64a]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.method.MethodTest",
      "failingMethods": [
        "spoon.test.method.MethodTest#testSearchMethodWithGeneric"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[public \u003cT extends java.lang.Integer\u003e void method1(T t) {\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@37dee76b]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.variable.AccessTest",
      "failingMethods": [
        "spoon.test.variable.AccessTest#testVariableAccessInNoClasspath"
      ],
      "erroringMethods": [
        "spoon.test.variable.AccessTest#testAccessToStringOnPostIncrement"
      ],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.lang.Class mclass \u003d ((java.lang.Class) (org.argouml.model.ModelFacade.USE_CASE))]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@339e886c]\u003e",
          "isError": false
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@333b2d83",
          "isError": true
        }
      ],
      "nbFailures": 1,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.constructor.ConstructorTest",
      "failingMethods": [
        "spoon.test.constructor.ConstructorTest#testTransformationOnConstructorWithInsertBegin",
        "spoon.test.constructor.ConstructorTest#testConstructorCallFactory",
        "spoon.test.constructor.ConstructorTest#testTransformationOnConstructorWithInsertBefore",
        "spoon.test.constructor.ConstructorTest#callParamConstructor",
        "spoon.test.constructor.ConstructorTest#testTypeAnnotationOnExceptionDeclaredInConstructors"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cs[uper()]\u003e but was:\u003cs[poon.reflect.visitor.SnapshotPrinterTokenWriter@2ed0d58e]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[{\n    enclosingInstance.super();\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@4f470b2f]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.lang.@spoon.test.constructor.testclasses.Tacos.TypeAnnotation(integer \u003d 1)\nException]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@22af72ab]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cs[uper()]\u003e but was:\u003cs[poon.reflect.visitor.SnapshotPrinterTokenWriter@54dd38d0]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[new java.util.ArrayList()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@a3e31]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 5,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.secondaryclasses.ClassesTest",
      "failingMethods": [
        "spoon.test.secondaryclasses.ClassesTest#testAnonymousClass",
        "spoon.test.secondaryclasses.ClassesTest#testAnonymousClassInStaticField"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.secondaryclasses.AnonymousClass$2#2()]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@2d540bbf]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[int i]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@253ea31b]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
      "failingMethods": [
        "spoon.test.prettyprinter.DefaultPrettyPrinterTest#printerCanPrintInvocationWithoutException",
        "spoon.test.prettyprinter.DefaultPrettyPrinterTest#useFullyQualifiedNamesInCtElementImpl_toString",
        "spoon.test.prettyprinter.DefaultPrettyPrinterTest#testPrintAClassWithImports",
        "spoon.test.prettyprinter.DefaultPrettyPrinterTest#testPrintAMethodWithGeneric",
        "spoon.test.prettyprinter.DefaultPrettyPrinterTest#superInvocationWithEnclosingInstance",
        "spoon.test.prettyprinter.DefaultPrettyPrinterTest#testPrintAMethodWithImports",
        "spoon.test.prettyprinter.DefaultPrettyPrinterTest#printClassCreatedWithSpoon",
        "spoon.test.prettyprinter.DefaultPrettyPrinterTest#autoImportUsesFullyQualifiedNameWhenImportedNameAlreadyPresent"
      ],
      "erroringMethods": [
        "spoon.test.prettyprinter.DefaultPrettyPrinterTest#testTernaryParenthesesOnLocalVariable"
      ],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[public class AClass {\n    public List\u003c?\u003e aMethod() {\n        return new ArrayList\u003c\u003e();\n    }\n\n    public List\u003c? extends ArrayList\u003e aMethodWithGeneric() {\n        return new ArrayList\u003c\u003e();\n    }\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@3da50816]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[public List\u003c? extends ArrayList\u003e aMethodWithGeneric() {\n    return new ArrayList\u003c\u003e();\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@4d3715f7]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.lang.Math.abs(message.length())]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@41a7eda5]\u003e",
          "isError": false
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@2b0796c7",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cpackage foo;\n\n\n[]class Bar {}\n\n\u003e but was:\u003cpackage foo;\n\n\n[\n]class Bar {}\n\n\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "the toString method of CtElementImpl should not shorten type names as it has no context or import statements expected:\u003c[public java.util.List\u003c?\u003e aMethod() {\n    return new java.util.ArrayList\u003c\u003e();\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@149551d9]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[public List\u003c?\u003e aMethod() {\n    return new ArrayList\u003c\u003e();\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@8b20c39]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "E1 is statically imported then we can call it directly expected:\u003c[public void setFieldUsingExternallyDefinedEnumWithSameNameAsLocal() {\n    localField \u003d E1.ordinal();\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@1f0afe5a]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 8,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.comment.CommentTest",
      "failingMethods": [
        "spoon.test.comment.CommentTest#testJavaDocComment",
        "spoon.test.comment.CommentTest#testCombinedPackageInfoComment",
        "spoon.test.comment.CommentTest#testCodeFactory",
        "spoon.test.comment.CommentTest#testBlockComment",
        "spoon.test.comment.CommentTest#testAddCommentsToSnippet",
        "spoon.test.comment.CommentTest#testInLineComment",
        "spoon.test.comment.CommentTest#testCommentsInResourcesWithWindowsEOL",
        "spoon.test.comment.CommentTest#testInsertNewComment",
        "spoon.test.comment.CommentTest#testCoreFactory"
      ],
      "erroringMethods": [
        "spoon.test.comment.CommentTest#testDocumentationContract"
      ],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[/* comment1 */\n// comment2\n/**\n * Comment3\n */\n@java.lang.Deprecated\npackage spoon.test.comment.testclasses;]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@4759fe4a]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[// My comment on my statement\nSystem.out.println(\"Caenorhabditis\")]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@2c2dad65]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[// comment method\nvoid newMethod() {\n    // comment empty block\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@286fa8a8]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "spoon.reflect.visitor.SnapshotPrinterTokenWriter@a8ad7b9:spoon.reflect.visitor.SnapshotPrinterTokenWriter@c8b9de7 is not printed",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "spoon.reflect.visitor.SnapshotPrinterTokenWriter@73e26f0f:spoon.reflect.visitor.SnapshotPrinterTokenWriter@3e49e1c9 is not printed",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[// comment]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@19868a1c]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[/*  */]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@793527c5]\u003e",
          "isError": false
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@246b1ea1",
          "isError": true
        }
      ],
      "nbFailures": 9,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.visibility.VisibilityTest",
      "failingMethods": [
        "spoon.test.visibility.VisibilityTest#testInvocationVisibilityInFieldDeclaration",
        "spoon.test.visibility.VisibilityTest#testMethodeWithNonAccessibleTypeArgument",
        "spoon.test.visibility.VisibilityTest#testFullyQualifiedNameOfTypeReferenceWithGeneric"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[new spoon.test.visibility.packageprotected.AccessibleClassFromNonAccessibleInterf().method(new spoon.test.visibility.packageprotected.AccessibleClassFromNonAccessibleInterf())]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@26a55231]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[(spoon.test.visibility.testclasses.A.B.i)]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@7c5f8a7c]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[bound()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@2c955340]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.ctType.CtTypeTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.ctType.CtTypeTest#testHasMethodNotHasMethod",
        "spoon.test.ctType.CtTypeTest#testHasMethodOnNull",
        "spoon.test.ctType.CtTypeTest#testHasMethodInDirectMethod"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@4cce04e0",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@28b1a234",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@27273bde",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.testing.CtElementAssertTest",
      "failingMethods": [
        "spoon.testing.CtElementAssertTest#testEqualityBetweenACtElementAndAString"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "spoon.support.reflect.declaration.CtFieldImpl@6a and public int i; aren\u0027t equals.",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.replace.ReplaceTest",
      "failingMethods": [
        "spoon.test.replace.ReplaceTest#testReplaceReplace",
        "spoon.test.replace.ReplaceTest#testReplaceExecutableReferenceByAnotherOne",
        "spoon.test.replace.ReplaceTest#testReplaceAParameterReferenceToFieldReference",
        "spoon.test.replace.ReplaceTest#testReplaceAPackageReferenceByAnotherOne",
        "spoon.test.replace.ReplaceTest#testReplaceBlock"
      ],
      "erroringMethods": [
        "spoon.test.replace.ReplaceTest#testReplaceBlockTry"
      ],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[com.awesom]e\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@31a752b]e\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.io.PrintStream#println(java.lang.String)]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@1cc0727e]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.lang.System.err.println(param)]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@1c4016e3]\u003e",
          "isError": false
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@7097dbc3",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[int y \u003d 0]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@7a1cddba]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[z \u003d x + 1]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@5709d25f]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 5,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.type.TypeTest",
      "failingMethods": [
        "spoon.test.type.TypeTest#testIntersectionTypeOnTopLevelType",
        "spoon.test.type.TypeTest#testTypeAccessForTypeAccessInInstanceOf",
        "spoon.test.type.TypeTest#testTypeReferenceInGenericsAndCasts",
        "spoon.test.type.TypeTest#test",
        "spoon.test.type.TypeTest#testTypeAccessOfArrayObjectInFullyQualifiedName",
        "spoon.test.type.TypeTest#testIntersectionTypeReferenceInGenericsAndCasts"
      ],
      "erroringMethods": [
        "spoon.test.type.TypeTest#testTypeAccessOnPrimitive"
      ],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[a instanceof java.lang.String]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@135f06e0]\u003e",
          "isError": false
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@555c7979",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.lang.Runnable]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@1edf41a5]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[public class Mole\u003cNUMBER extends java.lang.Number \u0026 java.lang.Comparable\u003cNUMBER\u003e\u003e {}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@6d7c956d]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[android.content.DialogInterface$]OnClickListener\u003e but was:\u003c[DialogInterface.]OnClickListener\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[java.lang.Runnable \u0026 java.io.Serializable]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@76bbc4d6]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[a instanceof java.lang.@spoon.test.annotation.testclasses.TypeAnnotation(integer \u003d 1)\nObject[]]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@294c3c61]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 6,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.eval.EvalTest",
      "failingMethods": [
        "spoon.test.eval.EvalTest#testVisitorPartialEvaluatorScanner",
        "spoon.test.eval.EvalTest#testStringConcatenation"
      ],
      "erroringMethods": [
        "spoon.test.eval.EvalTest#testVisitorPartialEvaluator_binary",
        "spoon.test.eval.EvalTest#testVisitorPartialEvaluator_if"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@6ec55836",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@e92a712",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[// if removed]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@757d2601]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[false]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@cff1476]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.serializable.SerializableTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.serializable.SerializableTest#testSerialCtStatement"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@2b4e036d",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.intercession.IntercessionTest",
      "failingMethods": [
        "spoon.test.intercession.IntercessionTest#testSettersAreAllGood",
        "spoon.test.intercession.IntercessionTest#test_setThrownExpression",
        "spoon.test.intercession.IntercessionTest#testResetCollectionInSetters"
      ],
      "erroringMethods": [
        "spoon.test.intercession.IntercessionTest#testInsertIfIntercession",
        "spoon.test.intercession.IntercessionTest#testEqualConstructor",
        "spoon.test.intercession.IntercessionTest#testInsertEnd",
        "spoon.test.intercession.IntercessionTest#testInsertAfter",
        "spoon.test.intercession.IntercessionTest#testInsertBegin"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@4c1ed053",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@3cc0d4ba",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@7cd9469c",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@6d26cd0d",
          "isError": true
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[throw e]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@77ca0b8b]\u003e",
          "isError": false
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@40c340fe",
          "isError": true
        },
        {
          "failureName": "skipped",
          "failureDetail": "skipped",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Your setter setDefaultExpression in CtCatchVariable has a type reference who don\u0027t extends CtCatchVariable",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 5
    },
    {
      "className": "spoon.test.parameters.ParameterTest",
      "failingMethods": [
        "spoon.test.parameters.ParameterTest#testParameterInNoClasspath"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[org.eclipse.swt.graphics.Font]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@74983a10]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.reference.ExecutableReferenceTest",
      "failingMethods": [
        "spoon.test.reference.ExecutableReferenceTest#testCallMethodOfClassNotPresent"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[Bar#m()]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@1ddcc282]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.fieldaccesses.FieldAccessTest",
      "failingMethods": [
        "spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessInLambda",
        "spoon.test.fieldaccesses.FieldAccessTest#testTypeDeclaredInAnonymousClass",
        "spoon.test.fieldaccesses.FieldAccessTest#testBCUBug20140402",
        "spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessNoClasspath",
        "spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessDeclaredInADefaultClass",
        "spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessInAnonymousClass",
        "spoon.test.fieldaccesses.FieldAccessTest#testFieldWriteWithPlusEqualsOperation",
        "spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessAutoExplicit",
        "spoon.test.fieldaccesses.FieldAccessTest#testFieldAccessWithoutAnyImport",
        "spoon.test.fieldaccesses.FieldAccessTest#testGetReference",
        "spoon.test.fieldaccesses.FieldAccessTest#testIncrementationOnAVarIsAUnaryOperator"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[(game.board.width)]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@293a72c6]\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "spoon.support.reflect.declaration.CtFieldImpl@364493 and private final Test test \u003d new Test(); aren\u0027t equals.",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[age]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@51feeac6]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[() -\u003e {\n    spoon.test.fieldaccesses.MyClass.LOG.info(\"bla\");\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@7d75225a]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[inv(spoon.test.fieldaccesses.testclasses.internal.Foo.i)]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@645241af]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[i +\u003d 0]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@3ed5c981]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[A.myField]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@22b34152]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[(i)++]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@7d05c7b8]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003cspoon.[test.fieldaccesses.testclasses.Mole.Delicious delicious]\u003e but was:\u003cspoon.[reflect.visitor.SnapshotPrinterTokenWriter@31256585]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[ingredient]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@3548f81c]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[length]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@1bb37c6b]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 11,
      "nbErrors": 0
    },
    {
      "className": "spoon.testing.AbstractAssertTest",
      "failingMethods": [
        "spoon.testing.AbstractAssertTest#testTransformationFromCtElementWithProcessor"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "spoon.support.reflect.declaration.CtFieldImpl@6b and public int j; aren\u0027t equals.",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.lambda.LambdaTest",
      "failingMethods": [
        "spoon.test.lambda.LambdaTest#testLambdaExpressionInIfConditional",
        "spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithParameterTyped",
        "spoon.test.lambda.LambdaTest#testLambdaExpressionWithStatementBodyAndWithoutParameters",
        "spoon.test.lambda.LambdaTest#testLambdaWithPrimitiveParameter",
        "spoon.test.lambda.LambdaTest#testTypeParameterOfLambdaWithoutType",
        "spoon.test.lambda.LambdaTest#testLambdaExpressionWithStatementBodyAndWithParameter",
        "spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithMultiParameters",
        "spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithMultiParametersTyped",
        "spoon.test.lambda.LambdaTest#testTypeParameterWithImplicitArrayType",
        "spoon.test.lambda.LambdaTest#testTypeParameterOfLambdaWithoutType2",
        "spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithoutTypeForParameter",
        "spoon.test.lambda.LambdaTest#testLambdaExpressionWithExpressionBodyAndWithoutParameter"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "Lambda must be well printed expected:\u003c[((spoon.test.lambda.testclasses.Foo.Check) (() -\u003e {\n    java.lang.System.err.println(\"\");\n    return false;\n}))]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@4320baea]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "Lambda must be well printed expected:\u003c[((spoon.test.lambda.testclasses.Foo.CheckPersons) (( p1, p2) -\u003e ((p1.age) - (p2.age)) \u003e 0))]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@f9a7061]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "Lambda must be well printed expected:\u003c[((spoon.test.lambda.testclasses.Foo.CheckPersons) ((spoon.test.lambda.testclasses.Foo.Person p1,spoon.test.lambda.testclasses.Foo.Person p2) -\u003e ((p1.age) - (p2.age)) \u003e 0))]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@5eea6b99]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "Condition must be well printed expected:\u003c[if (((java.util.function.Predicate\u003cspoon.test.lambda.testclasses.Foo.Person\u003e) (( p) -\u003e (p.age) \u003e 18)).test(new spoon.test.lambda.testclasses.Foo.Person(10))) {\n    java.lang.System.err.println(\"Enjoy, you have more than 18.\");\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@71f2ec29]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@6b7c3894]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "Lambda must be well printed expected:\u003c[((java.util.function.Predicate\u003cspoon.test.lambda.testclasses.Foo.Person\u003e) ((spoon.test.lambda.testclasses.Foo.Person p) -\u003e (p.age) \u003e 10))]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@93127f8]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "Lambda must be well printed expected:\u003c[((java.util.function.Predicate\u003cspoon.test.lambda.testclasses.Foo.Person\u003e) (( p) -\u003e (p.age) \u003e 10))]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@1e986a7f]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@1465be1d]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "Lambda must be well printed expected:\u003c[((spoon.test.lambda.testclasses.Foo.Check) (() -\u003e false))]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@5b1762cd]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@26bed6f6]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "Lambda must be well printed expected:\u003c[((java.util.function.Predicate\u003cspoon.test.lambda.testclasses.Foo.Person\u003e) (( p) -\u003e {\n    p.doSomething();\n    return (p.age) \u003e 10;\n}))]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@38f99345]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@5520320d]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 12,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.javadoc.JavaDocTest",
      "failingMethods": [
        "spoon.test.javadoc.JavaDocTest#testJavaDocReprint"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[public class Bar {\n    /**\n     * Creates an annotation type.\n     *\n     * @param owner\n     *   the package of the annotation type\n     * @param simpleName\n     *   the name of annotation\n     */\n    public \u003cT\u003e CtAnnotationType\u003c?\u003e create(CtPackage owner, String simpleName) {\n        return null;\n    }\n}]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@50107787]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.compilation.CompilationTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.compilation.CompilationTest#testNewInstance"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: spoon.reflect.visitor.SnapshotPrinterTokenWriter@78204e6",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.support.compiler.jdt.ExtendedStringLiteralTest",
      "failingMethods": [
        "spoon.support.compiler.jdt.ExtendedStringLiteralTest#testExtendedStringLiteral"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c[\"hello world!\"]\u003e but was:\u003c[spoon.reflect.visitor.SnapshotPrinterTokenWriter@60629dbc]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ]
}