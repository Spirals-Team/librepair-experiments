{
  "bugType": "only_fail",
  "hostname": "spirals-repairnator",
  "repo": "INRIA/spoon",
  "metrics": {
    "FailureNames": [
      "spoon.SpoonException",
      "java.lang.AssertionError",
      "java.lang.Exception",
      "spoon.compiler.ModelBuildingException"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 13,
      "ComputeClasspath": 16,
      "ComputeTestDir": 2,
      "BuildProject": 114,
      "InitRepoToPush": 30,
      "ComputeSourceDir": 1,
      "ComputeModules": 0,
      "AstorJMut": 44,
      "CloneRepository": 47,
      "CheckoutPatchedBuild": 0,
      "NopolAllTests": 70,
      "NPEFix": 0,
      "TestProject": 295,
      "GatherTestInformation": 1,
      "CommitPatch": 38
    },
    "NbFailingTests": 3,
    "NbErroringTests": 515,
    "NbSkippingTests": 4,
    "NbRunningTests": 1403,
    "BugCommitUrl": "http://github.com/INRIA/spoon/commit/141089ac3b7ba84d01d38d2f620d9ed897dc7f8a",
    "ReproductionDate": "Jul 18, 2018 10:28:09 AM",
    "BuggyBuildId": 405247597,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/INRIA/spoon/builds/405247597",
    "BuggyBuildDate": "Jul 18, 2018 10:27:20 AM",
    "BugCommit": "141089ac3b7ba84d01d38d2f620d9ed897dc7f8a",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 30,
    "NbFileApp": 616,
    "NbFileTests": 695,
    "NbCPU": 4,
    "FreeMemory": 431585096,
    "TotalMemory": 1130889216,
    "AngelicValuesByTest": {
      "spoon/test/staticFieldAccess/StaticAccessTest:spoon/test/modifiers/TestModifiers:spoon/test/imports/ImportAndExtendWithPackageNameTest:spoon/test/casts/CastTest:spoon/test/template/TemplateClassAccessTest:spoon/support/visitor/java/JavaReflectionTreeBuilderTest:spoon/test/model/BlockTest:spoon/test/annotation/AnnotationValuesTest:spoon/test/constructorcallnewclass/NewClassTest:spoon/test/strings/StringLiteralTest:spoon/test/sourcePosition/SourcePositionTest:spoon/test/template/TemplateTest:spoon/test/api/APITest:spoon/test/factory/ConstructorFactoryTest:spoon/test/intercession/RemoveTest:spoon/test/support/ResourceTest:spoon/test/query_function/VariableReferencesTest:spoon/test/prettyprinter/PrinterTest:spoon/reflect/visitor/CtVisitorTest:spoon/test/parent/ContractOnSettersParametrizedTest:spoon/test/targeted/TargetedExpressionTest:spoon/test/jdtimportbuilder/ImportBuilderTest:spoon/test/ctClass/CtClassTest:spoon/test/variable/AccessFullyQualifiedFieldTest:spoon/test/filters/FilterTest:spoon/test/template/TemplateArrayAccessTest:spoon/test/literal/LiteralTest:spoon/reflect/declaration/UnknownDeclarationTest:spoon/test/compilationunit/TestCompilationUnit:spoon/test/replace/ReplaceParametrizedTest:spoon/test/signature/SignatureTest:spoon/test/arrays/ArraysTest:spoon/test/enums/EnumsTest:spoon/test/reference/ElasticsearchStackoverflowTest:spoon/test/generics/GenericsTest:spoon/test/model/SwitchCaseTest:spoon/test/method/MethodTest:spoon/test/variable/AccessTest:spoon/test/parent/ParentTest:spoon/test/architecture/SpoonArchitectureEnforcerTest:spoon/processing/CtGenerationTest:spoon/testing/CtElementAssertTest:spoon/test/exceptions/ExceptionTest:spoon/test/compilationunit/GetBinaryFilesTest:spoon/test/type/TypeTest:spoon/reflect/visitor/CtInheritanceScannerMethodsTest:spoon/reflect/ast/CloneTest:spoon/test/intercession/IntercessionTest:spoon/test/fieldaccesses/FieldAccessTest:spoon/test/delete/DeleteTest:spoon/test/template/PatternTest:spoon/test/trycatch/TryCatchTest:spoon/test/parent/NullParentTest:spoon/MavenLauncherTest:spoon/test/imports/ImportTest:spoon/test/snippets/SnippetTest:spoon/test/refactoring/CtRenameLocalVariableRefactoringTest:spoon/test/initializers/InitializerTest:spoon/test/reference/TypeReferenceTest:spoon/test/refactoring/RefactoringTest:spoon/test/loop/LoopTest:spoon/test/annotation/AnnotationTest:spoon/test/invocations/InvocationTest:spoon/test/strings/StringTest:spoon/test/jar/JarTest:spoon/test/pkg/PackageTest:spoon/test/varargs/VarArgsTest:spoon/test/methodreference/MethodReferenceTest:spoon/test/factory/AnnotationFactoryTest:spoon/test/executable/ExecutableRefTest:spoon/test/staticFieldAccess2/ImplicitStaticFieldReferenceTest:spoon/test/factory/FactoryTest:spoon/test/constructorcallnewclass/ConstructorCallTest:spoon/test/intercession/OneCanCallSetterWithNullParameterizedTest:spoon/test/labels/TestLabels:spoon/test/parent/TopLevelTypeTest:spoon/test/prettyprinter/LinesTest:spoon/test/api/MetamodelTest:spoon/testing/CtPackageAssertTest:spoon/test/limits/utils/InternalTest:spoon/reflect/ast/AstCheckerTest:spoon/test/intercession/insertBefore/InsertMethodsTest:spoon/test/factory/FieldFactoryTest:spoon/test/position/PositionTest:spoon/test/model/TypeTest:spoon/test/reference/CloneReferenceTest:spoon/test/prettyprinter/QualifiedThisRefTest:spoon/reflect/visitor/CtScannerTest:spoon/test/refactoring/MethodsRefactoringTest:spoon/test/processing/ProcessingTest:spoon/test/reference/VariableAccessTest:spoon/test/secondaryclasses/ClassesTest:spoon/test/prettyprinter/DefaultPrettyPrinterTest:spoon/test/comment/CommentTest:spoon/test/visibility/VisibilityTest:spoon/test/ctType/CtTypeTest:spoon/test/imports/ImportScannerTest:spoon/test/model/AnonymousExecutableTest:spoon/processing/ProcessingTest:spoon/test/properties/PropertiesTest:spoon/test/eval/EvalTest:spoon/test/parameters/ParameterTest:spoon/test/reference/ExecutableReferenceTest:spoon/test/main/MainTest:spoon/test/module/TestModule:spoon/testing/AbstractAssertTest:spoon/test/lambda/LambdaTest:spoon/test/compilation/CompilationTest:": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 65876456,
      "ComputeClasspath": 128513008,
      "ComputeTestDir": 120262336,
      "BuildProject": 159817560,
      "InitRepoToPush": 129672920,
      "ComputeSourceDir": 429431264,
      "ComputeModules": 429431264,
      "AstorJMut": 489704312,
      "CloneRepository": 175787616,
      "CheckoutPatchedBuild": 431585096,
      "NopolAllTests": 206231848,
      "NPEFix": 206231848,
      "TestProject": 149900312,
      "GatherTestInformation": 124109448,
      "CommitPatch": 431585096
    },
    "NbSucceedingTests": 885
  },
  "failing-test-cases": [
    {
      "className": "spoon.test.staticFieldAccess.StaticAccessTest",
      "failingMethods": [],
      "erroringMethods": [
        "testProcessAndCompile",
        "testReferences"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.modifiers.TestModifiers",
      "failingMethods": [],
      "erroringMethods": [
        "testMethodWithVarargsDoesNotBecomeTransient",
        "testCtModifiableAddRemoveReturnCtModifiable",
        "testGetModifiersHelpers"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.imports.ImportAndExtendWithPackageNameTest",
      "failingMethods": [],
      "erroringMethods": [
        "testBuildModel"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.casts.CastTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCast2",
        "testCast1",
        "testCast3"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { String x\u003d(String) new Object();}};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { Class\u003cString\u003e x\u003d(Class\u003cString\u003e) new Object();}};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X\u003cA\u003e {void addConsumedAnnotationType(Class\u003c? extends A\u003e annotationType) {}\n        public void foo() { Class\u003c?\u003e x \u003d null; addConsumedAnnotationType((Class\u003cA\u003e) x);}};;\n    }\n}",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.template.TemplateClassAccessTest",
      "failingMethods": [],
      "erroringMethods": [
        "testClassAccessTest"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
      "failingMethods": [],
      "erroringMethods": [
        "testShadowModelEqualsNormalModel"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.model.BlockTest",
      "failingMethods": [],
      "erroringMethods": [
        "testIterationStatements",
        "testAddEmptyBlock"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { }};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { int x\u003d0;int y\u003d0;}};;\n    }\n}",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.annotation.AnnotationValuesTest",
      "failingMethods": [],
      "erroringMethods": [
        "testValuesOnJava8Annotation",
        "testCtAnnotationAPI",
        "testValuesOnJava7Annotation",
        "testAnnotationPrintAnnotation"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: char[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.constructorcallnewclass.NewClassTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCtNewClassInNoClasspath",
        "testNewClassWithInterface",
        "testMoreThan9NewClass",
        "testNewClassWithInterfaceGeneric",
        "testNewClassInEnumeration",
        "testNewClassWithObjectClass",
        "testNewClassInterfaceWithParameters"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 7
    },
    {
      "className": "spoon.test.strings.StringLiteralTest",
      "failingMethods": [],
      "erroringMethods": [
        "testSnippetFullClass"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class StringValueUTF {\n         String f0 \u003d \"toto\";\n         String f1 \u003d \"\\n\";\n         char c1 \u003d \u0027\\n\u0027;\n         String f2 \u003d \"\\u20ac\";\n         char c2 \u003d \u0027\\u20ac\u0027;\n         String f3 \u003d \"€\";\n         char c3 \u003d \u0027€\u0027;\n         String f4 \u003d \"\\t\";\n         char c4 \u003d \u0027\\t\u0027;\n         String f5 \u003d \" \";\n         char c5 \u003d \u0027 \u0027;\n         String f6 \u003d \"€\\u20ac\";\n        };\n    }\n}",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.sourcePosition.SourcePositionTest",
      "failingMethods": [],
      "erroringMethods": [
        "equalPositionsHaveSameHashcode"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.template.TemplateTest",
      "failingMethods": [],
      "erroringMethods": [
        "testTemplateInheritance",
        "testTemplateC1",
        "testTemplateArrayAccess",
        "testSubstitutionInsertAllNtoN",
        "testTemplateWithWrongUsedStringParam",
        "testSimpleTemplate",
        "testTemplateInterfaces",
        "createTypeFromTemplate",
        "substituteTypeAccessReference",
        "substituteStringLiteral"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Hello world",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 10
    },
    {
      "className": "spoon.test.api.APITest",
      "failingMethods": [],
      "erroringMethods": [
        "testPrintNotAllSourcesWithFilter",
        "testSetterInNodes",
        "testPrintNotAllSourcesWithNames",
        "testPrintNotAllSourcesInCommandLine"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.factory.ConstructorFactoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCreate"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.intercession.RemoveTest",
      "failingMethods": [],
      "erroringMethods": [
        "testRemoveAllStatements"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { int x\u003d0;int y\u003d0;}};;\n    }\n}",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.support.ResourceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testFilteringFolder"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.query_function.VariableReferencesTest",
      "failingMethods": [],
      "erroringMethods": [
        "testParameterReferenceFunction",
        "testLocalVariableReferenceFunction",
        "testLocalVariableReferenceDeclarationFunction",
        "testCatchVariableReferenceFunction",
        "testCheckModelConsistency",
        "testPotentialVariableAccessFromStaticMethod",
        "testVariableReferenceFunction",
        "testVariableScopeFunction"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "spoon.test.prettyprinter.PrinterTest",
      "failingMethods": [],
      "erroringMethods": [
        "testFQNModeWriteFQNConstructorInCtVisitor",
        "testAutoimportModeDontImportUselessStatic",
        "testPrettyPrinter",
        "testRuleCanBeBuild",
        "testPrinterTokenListener",
        "testJDTBatchCompilerCanBeBuild"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: CtElement[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: CompilationUnit[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "spoon.reflect.visitor.CtVisitorTest",
      "failingMethods": [],
      "erroringMethods": [
        "testMethodsInVisitor"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.parent.ContractOnSettersParametrizedTest",
      "failingMethods": [],
      "erroringMethods": [
        "testContract[public interface CtModule extends spoon.reflect.declaration.CtNamedElement {\n    @spoon.support.DerivedProperty\n    spoon.reflect.reference.CtModuleReference getReference();\n\n    @spoon.reflect.annotations.PropertyGetter(role \u003d spoon.reflect.path.CtRole.SUB_PACKAGE)\n    spoon.reflect.declaration.CtPackage getRootPackage();\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.SUB_PACKAGE)\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T setRootPackage(spoon.reflect.declaration.CtPackage arg0);\n\n    @spoon.reflect.annotations.PropertyGetter(role \u003d spoon.reflect.path.CtRole.MODULE_DIRECTIVE)\n    java.util.List\u003cspoon.reflect.declaration.CtModuleDirective\u003e getModuleDirectives();\n\n    @spoon.reflect.annotations.PropertyGetter(role \u003d spoon.reflect.path.CtRole.REQUIRED_MODULE)\n    @spoon.support.DerivedProperty\n    java.util.List\u003cspoon.reflect.declaration.CtModuleRequirement\u003e getRequiredModules();\n\n    @spoon.reflect.annotations.PropertyGetter(role \u003d spoon.reflect.path.CtRole.EXPORTED_PACKAGE)\n    @spoon.support.DerivedProperty\n    java.util.List\u003cspoon.reflect.declaration.CtPackageExport\u003e getExportedPackages();\n\n    @spoon.reflect.annotations.PropertyGetter(role \u003d spoon.reflect.path.CtRole.OPENED_PACKAGE)\n    @spoon.support.DerivedProperty\n    java.util.List\u003cspoon.reflect.declaration.CtPackageExport\u003e getOpenedPackages();\n\n    @spoon.reflect.annotations.PropertyGetter(role \u003d spoon.reflect.path.CtRole.SERVICE_TYPE)\n    @spoon.support.DerivedProperty\n    java.util.List\u003cspoon.reflect.declaration.CtUsedService\u003e getUsedServices();\n\n    @spoon.reflect.annotations.PropertyGetter(role \u003d spoon.reflect.path.CtRole.PROVIDED_SERVICE)\n    @spoon.support.DerivedProperty\n    java.util.List\u003cspoon.reflect.declaration.CtProvidedService\u003e getProvidedServices();\n\n    @spoon.reflect.annotations.PropertyGetter(role \u003d spoon.reflect.path.CtRole.MODIFIER)\n    boolean isOpenModule();\n\n    @spoon.support.DerivedProperty\n    boolean isUnnamedModule();\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.MODIFIER)\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T setIsOpenModule(boolean arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.MODULE_DIRECTIVE)\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T setModuleDirectives(java.util.List\u003cspoon.reflect.declaration.CtModuleDirective\u003e arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.MODULE_DIRECTIVE)\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T addModuleDirective(spoon.reflect.declaration.CtModuleDirective arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.MODULE_DIRECTIVE)\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T addModuleDirectiveAt(int arg0, spoon.reflect.declaration.CtModuleDirective arg1);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.MODULE_DIRECTIVE)\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T removeModuleDirective(spoon.reflect.declaration.CtModuleDirective arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.SERVICE_TYPE)\n    @spoon.support.DerivedProperty\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T setUsedServices(java.util.List\u003cspoon.reflect.declaration.CtUsedService\u003e arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.SERVICE_TYPE)\n    @spoon.support.DerivedProperty\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T addUsedService(spoon.reflect.declaration.CtUsedService arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.SERVICE_TYPE)\n    @spoon.support.DerivedProperty\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T removeUsedService(spoon.reflect.declaration.CtUsedService arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.EXPORTED_PACKAGE)\n    @spoon.support.DerivedProperty\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T setExportedPackages(java.util.List\u003cspoon.reflect.declaration.CtPackageExport\u003e arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.EXPORTED_PACKAGE)\n    @spoon.support.DerivedProperty\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T addExportedPackage(spoon.reflect.declaration.CtPackageExport arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.EXPORTED_PACKAGE)\n    @spoon.support.DerivedProperty\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T removeExportedPackage(spoon.reflect.declaration.CtPackageExport arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.OPENED_PACKAGE)\n    @spoon.support.DerivedProperty\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T setOpenedPackages(java.util.List\u003cspoon.reflect.declaration.CtPackageExport\u003e arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.OPENED_PACKAGE)\n    @spoon.support.DerivedProperty\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T addOpenedPackage(spoon.reflect.declaration.CtPackageExport arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.OPENED_PACKAGE)\n    @spoon.support.DerivedProperty\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T removeOpenedPackage(spoon.reflect.declaration.CtPackageExport arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.REQUIRED_MODULE)\n    @spoon.support.DerivedProperty\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T setRequiredModules(java.util.List\u003cspoon.reflect.declaration.CtModuleRequirement\u003e arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.REQUIRED_MODULE)\n    @spoon.support.DerivedProperty\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T addRequiredModule(spoon.reflect.declaration.CtModuleRequirement arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.REQUIRED_MODULE)\n    @spoon.support.DerivedProperty\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T removeRequiredModule(spoon.reflect.declaration.CtModuleRequirement arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.PROVIDED_SERVICE)\n    @spoon.support.DerivedProperty\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T setProvidedServices(java.util.List\u003cspoon.reflect.declaration.CtProvidedService\u003e arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.PROVIDED_SERVICE)\n    @spoon.support.DerivedProperty\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T addProvidedService(spoon.reflect.declaration.CtProvidedService arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.PROVIDED_SERVICE)\n    @spoon.support.DerivedProperty\n    \u003cT extends spoon.reflect.declaration.CtModule\u003e T removeProvidedService(spoon.reflect.declaration.CtProvidedService arg0);\n\n    spoon.reflect.declaration.CtModule clone();\n\n    static final java.lang.String TOP_LEVEL_MODULE_NAME;\n}]",
        "testContract[public interface CtPackage extends spoon.reflect.declaration.CtNamedElement , spoon.reflect.declaration.CtShadowable {\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.CONTAINED_TYPE)\n    \u003cT extends spoon.reflect.declaration.CtPackage\u003e T addType(spoon.reflect.declaration.CtType\u003c?\u003e arg0);\n\n    @spoon.support.DerivedProperty\n    spoon.reflect.reference.CtPackageReference getReference();\n\n    java.lang.String getQualifiedName();\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.CONTAINED_TYPE)\n    void removeType(spoon.reflect.declaration.CtType\u003c?\u003e arg0);\n\n    @spoon.reflect.annotations.PropertyGetter(role \u003d spoon.reflect.path.CtRole.CONTAINED_TYPE)\n    java.util.Set\u003cspoon.reflect.declaration.CtType\u003c?\u003e\u003e getTypes();\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.SUB_PACKAGE)\n    \u003cT extends spoon.reflect.declaration.CtPackage\u003e T setPackages(java.util.Set\u003cspoon.reflect.declaration.CtPackage\u003e arg0);\n\n    @spoon.support.DerivedProperty\n    spoon.reflect.declaration.CtModule getDeclaringModule();\n\n    @spoon.support.DerivedProperty\n    spoon.reflect.declaration.CtPackage getDeclaringPackage();\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.SUB_PACKAGE)\n    \u003cT extends spoon.reflect.declaration.CtPackage\u003e T addPackage(spoon.reflect.declaration.CtPackage arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.SUB_PACKAGE)\n    boolean removePackage(spoon.reflect.declaration.CtPackage arg0);\n\n    @spoon.reflect.annotations.PropertySetter(role \u003d spoon.reflect.path.CtRole.CONTAINED_TYPE)\n    \u003cT extends spoon.reflect.declaration.CtPackage\u003e T setTypes(java.util.Set\u003cspoon.reflect.declaration.CtType\u003c?\u003e\u003e arg0);\n\n    boolean isUnnamedPackage();\n\n    spoon.reflect.declaration.CtPackage clone();\n\n    @spoon.reflect.annotations.PropertyGetter(role \u003d spoon.reflect.path.CtRole.SUB_PACKAGE)\n    spoon.reflect.declaration.CtPackage getPackage(java.lang.String arg0);\n\n    @spoon.reflect.annotations.PropertyGetter(role \u003d spoon.reflect.path.CtRole.SUB_PACKAGE)\n    java.util.Set\u003cspoon.reflect.declaration.CtPackage\u003e getPackages();\n\n    @spoon.reflect.annotations.PropertyGetter(role \u003d spoon.reflect.path.CtRole.CONTAINED_TYPE)\n    \u003cT extends spoon.reflect.declaration.CtType\u003c?\u003e\u003e T getType(java.lang.String arg0);\n\n    static final java.lang.String PACKAGE_SEPARATOR;\n\n    static final char PACKAGE_SEPARATOR_CHAR;\n\n    static final java.lang.String TOP_LEVEL_PACKAGE_NAME;\n}]"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: spoon.support.reflect.declaration.CtPackageImpl@1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: spoon.support.reflect.declaration.CtPackageImpl@1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.targeted.TargetedExpressionTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCtThisAccess",
        "testTargetsOfInv",
        "testTargetsOfFieldAccess",
        "testNotTargetedExpression",
        "testTargetsOfFieldInAnonymousClass",
        "testStaticTargetsOfInv",
        "testTargetsOfStaticFieldAccess",
        "testTargetOfFieldAccess",
        "testCastWriteWithGenerics",
        "testTargetsOfFieldAccessInInnerClass",
        "testClassDeclaredInALambda",
        "testTargetsOfInvInInnerClass",
        "testTargetsOfInvInAnonymousClass"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1NestedTypeScanner",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1NestedTypeScanner",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1NestedTypeScanner",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1InnerClass",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1NestedTypeScanner",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1NestedTypeScanner",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1NestedTypeScanner",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1NestedTypeScanner",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1NestedTypeScanner",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1NestedTypeScanner",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: T[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1NestedTypeScanner",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 13
    },
    {
      "className": "spoon.test.jdtimportbuilder.ImportBuilderTest",
      "failingMethods": [],
      "erroringMethods": [
        "testWithSimpleImportNoAutoimport",
        "testInternalImportWhenNoClasspath",
        "testWithSimpleImport"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: it.feio.android.omninotes.commons",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.ctClass.CtClassTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAllTypeReferencesToALocalTypeShouldNotStartWithNumber",
        "testNoClasspathWithSuperClassOfAClassInAnInterface",
        "testCloneAnonymousClassInvocationWithAutoimports",
        "testSpoonShouldInferImplicitPackageInNoClasspath",
        "getConstructor",
        "testParentOfTheEnclosingClassOfStaticClass",
        "testDefaultConstructorAreOk",
        "testCloneAnonymousClassInvocation"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: boolean[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Cook",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "spoon.test.variable.AccessFullyQualifiedFieldTest",
      "failingMethods": [],
      "erroringMethods": [
        "testStaticImportWithAutoImport",
        "testNoFQNAndStaticImport",
        "testNoFQNWhenUsedInInnerClassAndShadowedByLocalVariable",
        "testPrivateStaticImportShouldNotBeImportedInSameClass"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: byte[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.filters.FilterTest",
      "failingMethods": [],
      "erroringMethods": [
        "testOverriddenMethodsFromSubClassOfAbstractClass",
        "testInvalidQueryStepFailurePolicyIgnore",
        "testParentFunction",
        "testQueryBuilderWithFilterChain",
        "testClassCastExceptionOnForEach",
        "testQueryWithOptionalNumberOfInputs",
        "filteredElementsAreOfTheCorrectType",
        "testInvalidQueryStep",
        "testEarlyTerminatingQuery",
        "testReuseOfBaseQuery",
        "classCastExceptionIsNotThrown",
        "testElementMapConsumableFunction",
        "testOverridingMethodFromAbstractClass",
        "testOverriddenMethodFromInterface",
        "testCtScannerListener",
        "testQueryInQuery",
        "testFunctionQueryStep",
        "testOverriddenMethodFromSubClassOfInterface",
        "testOverriddenMethodFromAbstractClass",
        "testFilterChildrenWithoutFilterQueryStep",
        "testReflectionBasedTypeFilter",
        "testSubInheritanceHierarchyResolver",
        "testQueryStepScannWithConsumer",
        "testOverridingMethodFromSubClassOfAbstractClass",
        "testOverridingMethodFromInterface",
        "testReuseOfQuery",
        "testElementMapFunction",
        "testgetTopDefinitions",
        "intersectionOfTwoFilters",
        "unionOfTwoFilters",
        "testFilterQueryStep",
        "testOverridingMethodFromSubClassOfInterface",
        "testInvocationFilterWithExecutableInLibrary"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 33
    },
    {
      "className": "spoon.test.template.TemplateArrayAccessTest",
      "failingMethods": [],
      "erroringMethods": [
        "testArrayAccess",
        "testArrayLengthAccess"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.literal.LiteralTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCharLiteralInNoClasspath",
        "testLiteralInForEachWithNoClasspath"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.reflect.declaration.UnknownDeclarationTest",
      "failingMethods": [],
      "erroringMethods": [
        "testUnknownCalls"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.compilationunit.TestCompilationUnit",
      "failingMethods": [],
      "erroringMethods": [
        "testNewlyCreatedCUWouldGetAPartialPosition",
        "testGetUnitTypeWorksWithCreatedObjects"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: new",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: package",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.replace.ReplaceParametrizedTest",
      "failingMethods": [],
      "erroringMethods": [
        "testContract[CtArrayTypeReference]",
        "testContract[CtModule]",
        "testContract[CtPackage]"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: spoon.support.reflect.declaration.CtPackageImpl@1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: spoon.support.reflect.declaration.CtPackageImpl@1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.signature.SignatureTest",
      "failingMethods": [],
      "erroringMethods": [
        "testNullSignature",
        "testBugSignature",
        "testArgumentNotNullForExecutableReference"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: null",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public Object foo() { return null;}};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: InputType[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.arrays.ArraysTest",
      "failingMethods": [],
      "erroringMethods": [
        "testInitializeWithNewArray",
        "testCtNewArrayWitComments",
        "testCtNewArrayInnerCtNewArray",
        "testArrayReferences"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.enums.EnumsTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAnnotationsOnEnum",
        "testModelBuildingEnum"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.reference.ElasticsearchStackoverflowTest",
      "failingMethods": [],
      "erroringMethods": [
        "testStackOverflow"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.generics.GenericsTest",
      "failingMethods": [],
      "erroringMethods": [
        "testTypeParameterReference",
        "testDeclarationOfTypeParameterReference",
        "testGenericMethodCallWithExtend",
        "testClassTypingContext",
        "testNewClassGenerics",
        "testClassTypingContextMethodSignature",
        "testMethodTypingContext",
        "testGenericsInQualifiedNameInConstructorCall",
        "testConstructorCallGenerics",
        "testMethodTypingContextAdaptMethod",
        "testIsGenericsMethod",
        "testGenericTypeReference",
        "testCannotAdaptTypeOfNonTypeScope",
        "testInvocationGenerics",
        "testMethodsWithGenericsWhoExtendsObject",
        "testAccessToGenerics",
        "testGenericsInConstructorCall",
        "testisGeneric",
        "testCtTypeReference_getSuperclass",
        "testGenericsOnLocalType",
        "testDiamond1",
        "testBugCommonCollection",
        "testName"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Cook",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Cook",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Cook",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Cook",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Cook",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Cook",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Cook",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class Diamond {\n         java.util.List\u003cString\u003e f \u003d new java.util.ArrayList\u003c\u003e();\n        };\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Cook",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Cook",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Cook",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Cook",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Cook",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: E[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Cook",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Cook",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 23
    },
    {
      "className": "spoon.test.model.SwitchCaseTest",
      "failingMethods": [],
      "erroringMethods": [
        "testIterationStatements"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { int x\u003d0;switch(x) {case 0: x\u003dx+1;break;case 1: x\u003d0;default: x\u003d-1;}}};;\n    }\n}",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.method.MethodTest",
      "failingMethods": [],
      "erroringMethods": [
        "testClone",
        "testGetAllMethods"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.variable.AccessTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAccessToStringOnPostIncrement",
        "testVariableAccessInNoClasspath",
        "testCanVisitArrayAccessAndSubClasses",
        "testFieldWriteDeclaredInTheSuperclass"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: null",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { Integer i \u003d 1; (i++).toString(); int k \u003d 0; k++;}};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.parent.ParentTest",
      "failingMethods": [],
      "erroringMethods": [
        "testParentOfCtPackageReference",
        "testParentOfCtVariableReference",
        "testHasParent",
        "testGetParentWithFilter",
        "testParentOfGenericInTypeReference",
        "testParentSet",
        "testParent",
        "testParentOfPrimitiveReference",
        "testParentPackage",
        "testParentOfCtExecutableReference"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 10
    },
    {
      "className": "spoon.test.architecture.SpoonArchitectureEnforcerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testSrcMainJava",
        "testInterfacesAreCtScannable",
        "testSpecPackage",
        "testStaticClasses",
        "metamodelPackageRule",
        "testGoodTestClassNames",
        "testFactorySubFactory",
        "statelessFactory"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "spoon.processing.CtGenerationTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGenerateCloneVisitor",
        "testGenerateReplacementVisitor",
        "testGenerateRoleHandler"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: CtElement[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.testing.CtElementAssertTest",
      "failingMethods": [],
      "erroringMethods": [
        "testEqualityBetweenTwoCtElement",
        "testEqualityBetweenTwoCtElementWithTheSameSignatureButNotTheSameContent",
        "testEqualityBetweenTwoDifferentCtElement",
        "testEqualityBetweenACtElementAndAString"
      ],
      "failures": [
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.AssertionError\u003e but was\u003cspoon.SpoonException\u003e",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.AssertionError\u003e but was\u003cspoon.SpoonException\u003e",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.exceptions.ExceptionTest",
      "failingMethods": [],
      "erroringMethods": [
        "testUnionCatchExceptionInsideLambdaInNoClasspath"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: System.out",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.compilationunit.GetBinaryFilesTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAnonymousClasses"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.type.TypeTest",
      "failingMethods": [],
      "erroringMethods": [
        "testTypeAccessForTypeAccessInInstanceOf",
        "testTypeAccessForDotClass",
        "test",
        "testTypeAccessOnPrimitive",
        "testIntersectionTypeReferenceInGenericsAndCasts",
        "testTypeAccessOfArrayObjectInFullyQualifiedName",
        "testPolyTypBindingInTernaryExpression",
        "testTypeReferenceInGenericsAndCasts"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { Class klass\u003dnull;  boolean x\u003d (klass \u003d\u003d short.class);}};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "spoon.reflect.visitor.CtInheritanceScannerMethodsTest",
      "failingMethods": [],
      "erroringMethods": [
        "testMethodsInInheritanceScanner"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.reflect.ast.CloneTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCloneMethodsDeclaredInAST",
        "testCloneCastConditional",
        "testCopyType",
        "testCloneListener"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: byte[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.intercession.IntercessionTest",
      "failingMethods": [],
      "erroringMethods": [
        "testInsertEnd",
        "testEqualConstructor",
        "testInsertBegin",
        "testSettersAreAllGood",
        "testInsertIfIntercession",
        "testInsertAfter"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public int bar() {if (1 \u003d\u003d 0)\n            return 1;\n        else\n            return 0;\n        }};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { int x\u003d0; int y\u003d0; int z\u003dx+y;}};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { int x\u003d0;}};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { int x\u003d0; String foo\u003d\"toto\";}};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X { public X() {} };;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "spoon.test.fieldaccesses.FieldAccessTest",
      "failingMethods": [],
      "erroringMethods": [
        "testTypeDeclaredInAnonymousClass",
        "testFieldAccessAutoExplicit",
        "testFieldAccessInAnonymousClass",
        "testBCUBug20140402",
        "testFieldAccessNoClasspath",
        "testGetReference",
        "testFieldAccessOnUnknownType",
        "testFieldWriteWithPlusEqualsOperation",
        "testIncrementationOnAVarIsAUnaryOperator",
        "testModelBuildingFieldAccesses",
        "testTypeOfFieldAccess"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: A[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 11
    },
    {
      "className": "spoon.test.delete.DeleteTest",
      "failingMethods": [],
      "erroringMethods": [
        "testDeleteParameterOfMethod",
        "testDeleteAnnotationOnAClass",
        "testDeleteAStatementInConstructor",
        "testDeleteMethod",
        "testDeleteBodyOfAMethod",
        "testDeleteACaseOfASwitch",
        "testDeleteChainOfAssignment",
        "testDeleteStatementInCase",
        "testDeleteAStatementInStaticAnonymousExecutable",
        "testDeleteReturn",
        "testDeleteAClassTopLevel",
        "testDeleteAStatementInMethod",
        "testDeleteConditionInACondition",
        "testDeleteAStatementInAnonymousExecutable"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 14
    },
    {
      "className": "spoon.test.template.PatternTest",
      "failingMethods": [],
      "erroringMethods": [
        "testMatchForeachWithOuterSubstitution",
        "testPatternToString",
        "testMatchParameterValue",
        "testPatternParameters",
        "testMatchParameterValueType",
        "testMatchSample1",
        "testAddGeneratedBy",
        "testMatchParameterCondition",
        "testMatchReluctantMultivalueMinCount1",
        "testMatchPossesiveMultiValueUnlimited",
        "testMatchReluctantMultivalue",
        "testMatchGreedyMultiValueUnlimited",
        "testMatchGreedyMultiValueMaxCountLimit",
        "testGenerateMethodWithSelfReferences",
        "testGenerateMultiValues",
        "testGenerateClassWithSelfReferences",
        "testMatchForeach",
        "testMatchReluctantMultivalueExactly2",
        "testMatchIfElse",
        "testMatchPossesiveMultiValueMaxCount4"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 20
    },
    {
      "className": "spoon.test.trycatch.TryCatchTest",
      "failingMethods": [],
      "erroringMethods": [
        "testFullyQualifiedException",
        "testCompileMultiTryCatchWithCustomExceptions",
        "testExceptionJava7",
        "testCatchWithExplicitFinalVariable",
        "testMultiTryCatchWithCustomExceptions",
        "testTryCatchVariableGetType",
        "testCatchOrder"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { try{}catch(java.lang.RuntimeException e){}}};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { try{}catch(RuntimeException | Error e){System.exit(0);}}};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { try{}catch(RuntimeException e){java.lang.System.exit(0);}      catch(Exception e){}}};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { try{}catch(RuntimeException e){System.exit(0);}}};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 7
    },
    {
      "className": "spoon.test.parent.NullParentTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAssertNullExpression",
        "testReturnNullExpression",
        "testLocalVariableNullDefaultExpression",
        "testFieldNullDefaultExpression",
        "testForLoopNullChildren",
        "testIfNullBranches",
        "testTargetedAccessNullTarget",
        "testTargetedExpressionNullTarget"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "spoon.MavenLauncherTest",
      "failingMethods": [
        "mavenLauncherTestMultiModulesAndVariables",
        "spoonMavenLauncherTest"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Content of classpath: ",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c23\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "spoon.test.imports.ImportTest",
      "failingMethods": [],
      "erroringMethods": [
        "testStaticMethodWithDifferentClassSameNameCollision",
        "testSortImportPutStaticImportAfterTypeImport",
        "testAccessToNestedClass",
        "testShouldNotCreateAutoreference",
        "testSpoonWithImports",
        "testStaticMethodWithDifferentClassSameNameJava3NoCollision",
        "testSortingOfImports",
        "testAccessType",
        "testCanAccess",
        "testStaticMethodWithDifferentClassSameNameJava7NoCollision",
        "testImportWithGenerics",
        "testWithInnerEnumDoesNotImportStaticInnerMethods",
        "testAnotherMissingImport"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: spoon.test.imports.testclasses.withgenerics",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "spoon.SpoonException: The given identifier does not respect Java definition of an identifier: T[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: DataElement[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 13
    },
    {
      "className": "spoon.test.snippets.SnippetTest",
      "failingMethods": [],
      "erroringMethods": [
        "testSnippetFullClass"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { int x\u003d0;}};;\n    }\n}",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.refactoring.CtRenameLocalVariableRefactoringTest",
      "failingMethods": [],
      "erroringMethods": [
        "testRenameAllLocalVariablesOfRenameTestSubject",
        "testRefactorWrongUsage",
        "testRenameLocalVariableToSameName"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Method[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Method[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Method[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.initializers.InitializerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testModelBuildingInitializer"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.reference.TypeReferenceTest",
      "failingMethods": [
        "testInvocationWithFieldAccessInNoClasspath"
      ],
      "erroringMethods": [
        "testArgumentOfAInvocationIsNotATypeAccess",
        "testToStringEqualityBetweenTwoGenericTypeDifferent",
        "testTypeReferenceWithGenerics",
        "testPackageInNoClasspath",
        "testSubTypeAnonymous",
        "testAnnotationOnMethodWithPrimitiveReturnTypeInNoClasspath",
        "testAnonymousClassesHaveAnEmptyStringForItsNameInNoClasspath",
        "testIgnoreEnclosingClassInActualTypes",
        "testTypeReferenceSpecifiedInClassDeclarationInNoClasspath",
        "testUnknownSuperClassWithSameNameInNoClasspath"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: it.feio.android.omninotes.commons",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: spoon.test.imports.testclasses.withgenerics",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "spoon.SpoonException: The given identifier does not respect Java definition of an identifier: char[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Can\u0027t compile TestBot.java because The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 10
    },
    {
      "className": "spoon.test.refactoring.RefactoringTest",
      "failingMethods": [],
      "erroringMethods": [
        "testRefactoringClassChangeAllCtTypeReferenceAssociatedWithClassConcerned",
        "testThisInConstructorAfterATransformation",
        "testTransformedInstanceofAfterATransformation",
        "testThisInConstructor"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Method[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Method[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Method[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Method[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.loop.LoopTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAnnotationInForLoop"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.annotation.AnnotationTest",
      "failingMethods": [],
      "erroringMethods": [
        "testUsageOfTypeAnnotationBeforeExceptionInSignatureOfMethod",
        "testUsageOfTypeAnnotationOnLocalVariableInMethod",
        "testRepeatableAnnotationAreManagedWithArrays",
        "testUsageOfTypeAnnotationWithGenericTypesInStatements",
        "testGetAnnotationFromParameter",
        "testUsageOfTypeAnnotationInExtendsImplementsOfAClass",
        "testReplaceAnnotationValue",
        "testOutputGeneratedByTypeAnnotation",
        "testUsageOfTypeAnnotationInReturnTypeInMethod",
        "testUsageOfParametersInTypeAnnotation",
        "testAbstractAllAnnotationProcessor",
        "testAnnotationArray",
        "testUsageOfTypeAnnotationInCast",
        "testRepeatableAnnotationAreManaged",
        "testModelBuildingAnnotationBoundUsage",
        "testAnnotationAndShadowDefaultRetentionPolicy",
        "testAccessAnnotationValue",
        "testGetAnnotationOuter",
        "testAbstractAllAnnotationProcessorWithGlobalAnnotation",
        "annotationOverrideFQNIsOK",
        "testAnnotationAndShadowClassRetentionPolicy",
        "testCreateRepeatableAnnotation",
        "testUsageOfTypeAnnotationOnParameterInMethod",
        "testUsageOfTypeAnnotationInNewInstance",
        "testCreateRepeatableAnnotationWithArrays",
        "testAnnotationParameterTypes",
        "testAnnotationAndShadowRuntimeRetentionPolicy",
        "testUsageOfTypeAnnotationWithGenericTypesInClassDeclaration",
        "testAnnotationIntrospection",
        "testAnnotatedElementTypes",
        "testInnerAnnotationsWithArray"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Cache.Entry\u003cK",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: MiddleAnnotation[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: MiddleAnnotation[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: this",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: InnerAnnot[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 31
    },
    {
      "className": "spoon.test.invocations.InvocationTest",
      "failingMethods": [],
      "erroringMethods": [
        "testIssue1753"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.strings.StringTest",
      "failingMethods": [],
      "erroringMethods": [
        "testModelBuildingInitializer"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.jar.JarTest",
      "failingMethods": [],
      "erroringMethods": [
        "testJar"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.pkg.PackageTest",
      "failingMethods": [],
      "erroringMethods": [
        "testRenamePackageAndPrettyPrintNoclasspath",
        "testRenameRootPackageWithNullOrEmpty",
        "testRenamePackageAndPrettyPrintWithProcessor",
        "testRenameRootPackage",
        "testGetFQNInNoClassPath"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "spoon.test.varargs.VarArgsTest",
      "failingMethods": [],
      "erroringMethods": [
        "testModelBuildingInitializer"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.methodreference.MethodReferenceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testNoClasspathSuperExecutable",
        "testReferenceToAJavaUtilClassConstructor",
        "testReferenceBuilderWithComplexGenerics",
        "testReferenceToAConstructor",
        "testReferenceToAnInstanceMethodOfAParticularObject",
        "testGetGenericMethodFromReference",
        "testNoClasspathExecutableReferenceExpression",
        "testReferenceToAnInstanceMethodOfMultiParticularObject",
        "testReferenceToAStaticMethod",
        "testReferenceToAClassParametrizedConstructor",
        "testReferenceToAnInstanceMethodOfAnArbitraryObjectOfAParticularType",
        "testGetGenericExecutableReference",
        "testCompileMethodReferenceGeneratedBySpoon"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Person[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Person[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Person[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Person[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Person[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Person[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Person[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Person[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Person[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Person[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Person[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Person[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Person[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 13
    },
    {
      "className": "spoon.test.factory.AnnotationFactoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAnnotate"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.executable.ExecutableRefTest",
      "failingMethods": [],
      "erroringMethods": [
        "testSameTypeInConstructorCallBetweenItsObjectAndItsExecutable"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: null",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.staticFieldAccess2.ImplicitStaticFieldReferenceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testImplicitStaticClassAccessAutoImport",
        "testImplicitStaticClassAccess"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.factory.FactoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "testClone",
        "testFactoryOverriding",
        "testCtModel",
        "testClassAccessCreatedFromFactories"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.constructorcallnewclass.ConstructorCallTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCoreConstructorCall",
        "testConstructorCallStringWithoutParameters",
        "testConstructorCallObjectWithParameters",
        "testConstructorCallStringWithParameters",
        "testConstructorCallWithGenericArray",
        "testConstructorCallObjectWithoutParameters"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "spoon.test.intercession.OneCanCallSetterWithNullParameterizedTest",
      "failingMethods": [],
      "erroringMethods": [
        "initializationError"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: spoon.support.reflect.declaration.CtPackageImpl@1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.labels.TestLabels",
      "failingMethods": [],
      "erroringMethods": [
        "testLabelsAreDetected"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.parent.TopLevelTypeTest",
      "failingMethods": [],
      "erroringMethods": [
        "testTopLevelType"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1Bar",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.prettyprinter.LinesTest",
      "failingMethods": [],
      "erroringMethods": [
        "testIdenticalPrettyPrinter",
        "testPrettyPrinterWithLines",
        "testCompileWhenUsingLinesArgument"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.api.MetamodelTest",
      "failingMethods": [],
      "erroringMethods": [
        "testRoleOnField",
        "testMetamodelWithoutSources"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.testing.CtPackageAssertTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAddTypeToPackage",
        "testEqualityBetweenTwoDifferentCtPackage"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: package",
          "isError": true
        },
        {
          "failureName": "java.lang.Exception",
          "failureDetail": "Unexpected exception, expected\u003cjava.lang.AssertionError\u003e but was\u003cspoon.SpoonException\u003e",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.limits.utils.InternalTest",
      "failingMethods": [],
      "erroringMethods": [
        "testStaticFinalFieldInAnonymousClass",
        "testInternalClasses"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.reflect.ast.AstCheckerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testPushToStackChanges",
        "testAvoidSetCollectionSavedOnAST"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.intercession.insertBefore.InsertMethodsTest",
      "failingMethods": [],
      "erroringMethods": [
        "testInsertBeforeWithoutBrace",
        "testInsertAfterSwitchCase",
        "testInsertBefore",
        "insertBeforeAndUpdateParent",
        "testInsertAfterWithBrace",
        "testInsertAfterWithoutBrace",
        "testInsertBeforeSwitchCase",
        "testInsertBeforeWithBrace",
        "testInsertAfter"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 9
    },
    {
      "className": "spoon.test.factory.FieldFactoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCreate",
        "testCreateFromSource"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.position.PositionTest",
      "failingMethods": [],
      "erroringMethods": [
        "testPositionOfAnnonymousType",
        "testArrayArgParameter",
        "testPositionInterface",
        "testPositionAnnotation",
        "testPositionOfAnnonymousTypeByNewInterface",
        "testPositionClass",
        "testPositionClassWithComments",
        "testPositionTryCatch"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "spoon.test.model.TypeTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGetDeclaredOrIheritedFieldByReflection",
        "testTypeInfoIsInterface",
        "testGetUsedTypesForTypeInRootPackage"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: byte[]",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X { X x; };\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: byte[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.reference.CloneReferenceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGetDeclarationOfFieldAfterClone",
        "testGetDeclarationAfterClone"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: char[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: char[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.prettyprinter.QualifiedThisRefTest",
      "failingMethods": [],
      "erroringMethods": [
        "testPrintCtFieldAccessWorkEvenWhenParentNotInitialized",
        "testCloneThisAccess"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.reflect.visitor.CtScannerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testScannerCallsAllProperties",
        "testScannerContract",
        "testScan"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.refactoring.MethodsRefactoringTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAllMethodsSameSignatureFunction",
        "testExecutableReferenceFilter",
        "testSubInheritanceHierarchyFunction",
        "testCtParameterRemoveRefactoring",
        "testCtParameterRemoveRefactoringValidationCheck"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "spoon.test.processing.ProcessingTest",
      "failingMethods": [],
      "erroringMethods": [
        "testInsertEnd",
        "testProcessorWithGenericType",
        "testCallProcessorWithMultipleTypes",
        "testInsertBegin"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.reference.VariableAccessTest",
      "failingMethods": [],
      "erroringMethods": [
        "testDeclarationArray",
        "testMultipleDeclarationsOfLocalVariable",
        "testDeclarationOfVariableReference",
        "testParameterReferenceInConstructorNoClasspath",
        "testVariableAccessDeclarationInAnonymousClass",
        "testGetDeclarationAfterClone"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: double[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: char[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Path[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "spoon.test.secondaryclasses.ClassesTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAnonymousClass",
        "testAnonymousClassInStaticField",
        "testIsAnonymousMethodInCtClass"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
      "failingMethods": [],
      "erroringMethods": [
        "testIssue1501",
        "testPrintAMethodWithGeneric",
        "testPrintAMethodWithImports",
        "testIssue2130",
        "testPrintAClassWithImports"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: FooCasper[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: FooCasper[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Void[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: FooCasper[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "spoon.test.comment.CommentTest",
      "failingMethods": [],
      "erroringMethods": [
        "testInsertNewComment",
        "testJavaDocEmptyCommentAndTag",
        "testCommentsInComment1And2",
        "testCombinedPackageInfoComment",
        "testWildComments",
        "testJavaDocCommentOnUnix",
        "testRemoveComment",
        "testJavadocShortAndLongComment",
        "testCoreFactory",
        "testBlockComment",
        "testCodeFactory",
        "testInLineComment",
        "testDocumentationContract"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 13
    },
    {
      "className": "spoon.test.visibility.VisibilityTest",
      "failingMethods": [],
      "erroringMethods": [
        "testFullyQualifiedNameOfTypeReferenceWithGeneric",
        "testInvocationVisibilityInFieldDeclaration",
        "testName",
        "testVisibilityOfClassesNamedByClassesInJavaLangPackage"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1D",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: int[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1D",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.ctType.CtTypeTest",
      "failingMethods": [],
      "erroringMethods": [
        "testHasMethodInDirectMethod",
        "testHasMethodNotHasMethod",
        "testHasMethodOnNull"
      ],
      "failures": [
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X { public void foo() {} };\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X { public void foo() {} };\n    }\n}",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X { public void foo() {} };\n    }\n}",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "spoon.test.imports.ImportScannerTest",
      "failingMethods": [],
      "erroringMethods": [
        "testComputeImportsInClassWithSameName",
        "testImportOnSpoon",
        "testComputeImportsInClass",
        "testComputeMinimalImportsInClass"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.model.AnonymousExecutableTest",
      "failingMethods": [],
      "erroringMethods": [
        "testStatements"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.processing.ProcessingTest",
      "failingMethods": [],
      "erroringMethods": [
        "testInterruptAProcessor"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.properties.PropertiesTest",
      "failingMethods": [],
      "erroringMethods": [
        "testNonExistingDirectory"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.eval.EvalTest",
      "failingMethods": [],
      "erroringMethods": [
        "testDoNotSimplify",
        "testArrayLength",
        "testStringConcatenation",
        "testScanAPartiallyEvaluatedElement",
        "testDoNotSimplifyToExpressionWhenStatementIsExpected",
        "testDoNotSimplifyCasts",
        "testTryCatchAndStatement"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 7
    },
    {
      "className": "spoon.test.parameters.ParameterTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGetParameterReferenceInLambdaNoClasspath",
        "testMultiParameterLambdaTypeReference"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: System.out",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: java.lang.HashMap",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "spoon.test.reference.ExecutableReferenceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testLambdaNoClasspath",
        "testPbWithStream",
        "testSpecifyGetAllExecutablesMethod",
        "testSuperClassInGetAllExecutables"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Bar[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: 1",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.test.main.MainTest",
      "failingMethods": [],
      "erroringMethods": [
        "spoon.test.main.MainTest"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: String[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.module.TestModule",
      "failingMethods": [],
      "erroringMethods": [
        "testModuleInfoWithComments",
        "testCompleteModuleInfoContentNoClasspath",
        "testModuleInfoShouldBeCorrectlyPrettyPrinted",
        "testDirectiveOrders"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: java.logging",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: java.logging",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: java.logging",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: java.logging",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "spoon.testing.AbstractAssertTest",
      "failingMethods": [],
      "erroringMethods": [
        "testTransformationFromCtElementWithProcessor"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "spoon.test.lambda.LambdaTest",
      "failingMethods": [],
      "erroringMethods": [
        "testLambdaExpressionWithExpressionBodyAndWithMultiParametersTyped",
        "testInterfaceWithObjectMethods",
        "testLambdaExpressionWithExpressionBodyAndWithMultiParameters",
        "testFieldAccessInLambdaNoClassPathExternal1Example",
        "testLambdaExpressionWithExpressionBodyAndWithParameterTyped",
        "testGetDeclarationOnTypeParameterFromLambda",
        "testLambdaWithPrimitiveParameter",
        "testTypeParameterOfLambdaWithoutType",
        "testTypeParameterWithImplicitArrayType",
        "testEqualsLambdaParameterRef",
        "testLambdaExpressionWithStatementBodyAndWithoutParameters",
        "testLambdaExpressionWithExpressionBodyAndWithoutTypeForParameter",
        "testGetOverriddenMethodWithFunction",
        "testTypeParameterOfLambdaWithoutType2",
        "testLambdaFilter",
        "testTypeAccessInLambdaNoClassPath",
        "testLambdaMethod",
        "testLambdaExpressionInIfConditional",
        "testCompileLambdaGeneratedBySpoon",
        "testBuildExecutableReferenceFromLambda",
        "testFieldAccessInLambdaNoClassPath",
        "testLambdaExpressionWithExpressionBodyAndWithoutParameter",
        "testLambdaExpressionWithStatementBodyAndWithParameter"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: Object[]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 23
    },
    {
      "className": "spoon.test.compilation.CompilationTest",
      "failingMethods": [],
      "erroringMethods": [
        "testNewInstance",
        "testFilterResourcesDir",
        "testPrecompile"
      ],
      "failures": [
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "spoon.SpoonException: The given identifier does not respect Java definition of an identifier: char[]",
          "isError": true
        },
        {
          "failureName": "spoon.SpoonException",
          "failureDetail": "The given identifier does not respect Java definition of an identifier: class",
          "isError": true
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "failureDetail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X implements spoon.test.compilation.testclasses.Ifoo { public int foo() {int i\u003d0; return i;} };\n    }\n}",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    }
  ],
  "failingModule": "/root/workspace/INRIA/spoon/405247597"
}