{
  "bugType": "only_fail",
  "hostname": "spirals-repairnator",
  "repo": "box/mojito",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 4,
      "ComputeClasspath": 18,
      "ComputeTestDir": 1,
      "BuildProject": 242,
      "InitRepoToPush": 23,
      "ComputeSourceDir": 8,
      "AstorJMut": 6002,
      "CloneRepository": 8,
      "CheckoutPatchedBuild": 0,
      "Nopol": 9988,
      "NPEFix": 0,
      "TestProject": 49440,
      "GatherTestInformation": 11,
      "CommitPatch": 211
    },
    "FailureNames": [
      "java.lang.IllegalStateException",
      "java.lang.OutOfMemoryError"
    ],
    "ReproductionDate": "Jul 10, 2018 5:39:59 PM",
    "BuggyBuildId": 402415013,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/box/mojito/builds/402415013",
    "BuggyBuildDate": "Jul 10, 2018 5:38:19 PM",
    "BugCommit": "cc392c5e9a0e1212cd0727ecbedb2c7d61824db7",
    "PatchChangedFiles": 0,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbLibraries": 191,
    "NbFileApp": 528,
    "NbFileTests": 142,
    "NbCPU": 4,
    "FreeMemory": 3358502408,
    "TotalMemory": 3939500032,
    "AngelicValuesByTest": {
      "com/box/l10n/mojito/service/pollableTask/PollableAspectTest": 0,
      "com/box/l10n/mojito/service/languagedetection/LanguageDetectionServiceTest": 0,
      "com/box/l10n/mojito/service/repository/statistics/RepositoryStatisticServiceTest": 0,
      "com/box/l10n/mojito/service/drop/exporter/FileSystemDropExporterTest": 0,
      "com/box/l10n/mojito/service/asset/AssetServiceConcurrentTest": 0,
      "com/box/l10n/mojito/rest/pollableTask/PollableTaskWSTest": 0,
      "com/box/l10n/mojito/service/pollableTask/PollableTaskServiceTest": 0,
      "com/box/l10n/mojito/service/translationkit/TranslationKitServiceTest": 0,
      "com/box/l10n/mojito/service/tm/importer/TextUnitBatchImporterServiceTest": 0,
      "com/box/l10n/mojito/service/pollableTask/PollableTaskCleanupServiceTest": 0,
      "com/box/l10n/mojito/service/security/user/UserServiceTest": 0,
      "com/box/l10n/mojito/service/assetExtraction/AssetMappingServiceTest": 0,
      "com/box/l10n/mojito/rest/repository/RepositoryWSTest": 0,
      "com/box/l10n/mojito/service/asset/AssetServiceTest": 0,
      "com/box/l10n/mojito/specification/SpecificationsTest": 0,
      "com/box/l10n/mojito/security/AuthenticationTest": 0,
      "com/box/l10n/mojito/service/leveraging/LeveragingServiceTest": 0,
      "com/box/l10n/mojito/security/LdapConfigTest": 0,
      "com/box/l10n/mojito/service/tm/search/TextUnitSearcherTest": 0,
      "com/box/l10n/mojito/rest/asset/AssetWSTest": 0,
      "com/box/l10n/mojito/service/pluralform/PluralFormForLocaleServiceTest": 0,
      "com/box/l10n/mojito/service/assetExtraction/AssetExtractionCleanupServiceTest": 0,
      "com/box/l10n/mojito/rest/screenshot/ScreenshotWSTest": 0,
      "com/box/l10n/mojito/service/drop/DropServiceTest": 0,
      "com/box/l10n/mojito/service/screenshot/ScreenshotServiceTest": 0,
      "com/box/l10n/mojito/AsyncConfigTest": 0,
      "com/box/l10n/mojito/service/drop/exporter/BoxDropExporterTest": 0,
      "com/box/l10n/mojito/CachingConfigTest": 0,
      "com/box/l10n/mojito/service/assetExtraction/AssetExtractionServiceTest": 0,
      "com/box/l10n/mojito/rest/locale/LocaleWSTest": 0,
      "com/box/l10n/mojito/service/asset/VirtualAssetServiceTest": 0,
      "com/box/l10n/mojito/service/tm/TMServiceTest": 0,
      "com/box/l10n/mojito/service/tm/TMTextUnitVariantCommentServiceTest": 0,
      "com/box/l10n/mojito/rest/drop/DropWSTest": 0,
      "com/box/l10n/mojito/service/rollback/CurrentVariantRollbackServiceTest": 0,
      "com/box/l10n/mojito/rest/security/UserWSTest": 0,
      "com/box/l10n/mojito/service/repository/RepositoryServiceTest": 0,
      "com/box/l10n/mojito/service/assetintegritychecker/AssetIntegrityCheckerServiceTest": 0,
      "com/box/l10n/mojito/rest/cli/CliWSTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 84879928,
      "ComputeClasspath": 143466256,
      "ComputeTestDir": 129016104,
      "BuildProject": 180136328,
      "InitRepoToPush": 146647016,
      "ComputeSourceDir": 3337618632,
      "AstorJMut": 3510878056,
      "CloneRepository": 145679712,
      "CheckoutPatchedBuild": 3358502408,
      "Nopol": 2049802968,
      "NPEFix": 2049802968,
      "TestProject": 114063392,
      "GatherTestInformation": 144969720,
      "CommitPatch": 3358502408
    },
    "NbSucceedingTests": 235,
    "BugCommitUrl": "http://github.com/box/mojito/commit/cc392c5e9a0e1212cd0727ecbedb2c7d61824db7",
    "NbSkippingTests": 12,
    "NbRunningTests": 470,
    "NbFailingTests": 0,
    "NbErroringTests": 235
  },
  "failing-test-cases": [
    {
      "className": "com.box.l10n.mojito.service.sla.email.SlaCheckerEmailServiceITest",
      "failingMethods": [],
      "erroringMethods": [
        "testGetCloseIncidentEmailContent",
        "testGetOpenIncidentEmailContent"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "com.box.l10n.mojito.service.drop.exporter.BoxDropExporterTest",
      "failingMethods": [],
      "erroringMethods": [
        "all",
        "testGetSourceFileName"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "com.box.l10n.mojito.service.tm.TMServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGenerateLocalizedXLIFFRemoveUntranslatedApprovedOrNeedsReview",
        "testLocalizeAndroidStringsNoXMLVersion",
        "testUpdateTMWithLocalizedXLIFFWithQualityCheckErrors",
        "testLocalizeAndroidStringsWithEscapedHTMLAndCDATA",
        "testLocalizePoPluralCs",
        "testLocalizeMacStringsWithSpecialCharacters",
        "testImportLocalizedAssetNotFullyTranslated",
        "testGenerateLocalizedXLIFFRemoveUntranslatedOnlyApproved",
        "testLocalizeAndroidStringsWithSpecialCharacters",
        "testLocalizeAndroidStringsRemoveUntranslated",
        "testAddTMTextUnit",
        "testImportLocalizedAssetXLIFFSkip",
        "testLocalizePoRemoveUntranslated",
        "testAddCurrentTMTextUnitVariant",
        "testGenerateLocalizedXLIFFWithDifferentOutputTag",
        "testImportLocalizedAssetXLIFFTranslationNeeded",
        "testImportLocalizedAssetXLIFFReviewNeeded",
        "testLocalizeAndroidStringsPlural",
        "testLocalizeMacStringsNamessNotEnclosedInDoubleQuotes",
        "testLocalizePoPluralJp",
        "testLocalizePoPluralRu",
        "testLocalizeAndroidStringsArrayWithEmptyItem",
        "testAddTMTextUnitInvalidInput",
        "testUpdateTMWithLocalizedXLIFFWithNewVariants",
        "testLocalizeXtb",
        "testGenerateLocalizedXLIFFRemoveUntranslated",
        "testImportLocalizedAssetPoPluralSinglePlural",
        "testReImportLocalizedAsset",
        "testImportLocalizedAssetXLIFFApproved",
        "testExportAssetAsXLIFF",
        "testComputeTMTextUnitMD5",
        "testUpdateTMWithLocalizedXLIFFWithExistingVariants",
        "testGenerateLocalizedXLIFF",
        "testComputeTMTextUnitMD5Null",
        "testGenerateLocalizedXLIFFRemoveUntranslatedAll"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 35
    },
    {
      "className": "com.box.l10n.mojito.service.asset.VirtualAssetServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testLeveragingByNameBatchBatch",
        "testCantAddTextUnitToNoVirtual",
        "testDeleteTextUnit",
        "testCreateVirtualAsset",
        "testLeveragingByName",
        "testChangeDoNotTranslateWhenExactMatches",
        "testAddTextUnitVariant",
        "testImportLocalizedTextUnitsOneMissing",
        "testAddTextUnit",
        "testRemovePreviousWhenExactMatches",
        "testImportLocalizedTextUnits",
        "testAddGetReplaceTextUnits",
        "testLeveragingByContent",
        "testLeveragingByContentBatch",
        "testCantUpdateAssetAsVirtual",
        "testUpdateVirtualAsset",
        "testFetchAllPluralForm",
        "testGetTextunitWithDoNoTranslateFilter"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 18
    },
    {
      "className": "com.box.l10n.mojito.service.pollableTask.PollableAspectTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGetWithParentIdBadParam",
        "testSimpleAsyncMethodWithVoidResult",
        "testMethodWithFutureResultThatThrowsException",
        "testMsgArgInAnnotation",
        "testAsyncMethodWithFutureResultThatThrowsException",
        "testGetWithParentId",
        "testSimpleMethodWithFutureResult",
        "testSimpleMethodWithResult",
        "testMethodThatThrowsException",
        "testParent",
        "testSimpleAsyncMethodWithResult"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "Java heap space",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 11
    },
    {
      "className": "com.box.l10n.mojito.rest.drop.DropWSTest",
      "failingMethods": [],
      "erroringMethods": [
        "testImportDrop",
        "testExportDrop",
        "testImportDropXliff"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "com.box.l10n.mojito.service.languagedetection.LanguageDetectionServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testDetection"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.box.l10n.mojito.security.AuthenticationTest",
      "failingMethods": [],
      "erroringMethods": [
        "testUnsuccessfulAuthWithIncorrectUser",
        "testSuccessfulAuthAfterResettingCookieStore",
        "testUnsuccessfulAuthWithIncorrectPassword",
        "testSuccessfulAuthMultipleRequests",
        "testSuccessfulAuth"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "com.box.l10n.mojito.service.rollback.CurrentVariantRollbackServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testRollbackShouldDeleteCurrentVariantsForGivenTextUnitsWhenTmTextUnitDidNotHaveAnyVariants",
        "testRollbackShouldDeleteCurrentVariantsWhenTmTextUnitDidNotHaveAnyVariants",
        "testRollbackShouldDeleteCurrentVariantsForGivenLocalesWhenTmTextUnitDidNotHaveAnyVariants",
        "testRollbackShouldUndoChangesToCurrentVariantsForGivenTextUnitsWhenTmTextUnitHadVariants",
        "testRollbackShouldUndoChangesToCurrentVariantsForGivenLocalesAndTextUnitsWhenTmTextUnitHadVariants",
        "testRollbackShouldUndoChangesToCurrentVariantsForGivenLocalesWhenTmTextUnitHadVariants",
        "testRollbackShouldUndoChangesToCurrentVariantsWhenTmTextUnitHadVariants"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 7
    },
    {
      "className": "com.box.l10n.mojito.service.repository.RepositoryServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testDeleteRepository",
        "testAddSupportedLocales",
        "testAddRootLocaleUnique",
        "testUpdateRepositoryLocalesForEmptySet",
        "testUpdateRepositoryLocales"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "com.box.l10n.mojito.service.asset.AssetServiceConcurrentTest",
      "failingMethods": [],
      "erroringMethods": [
        "testConcurrentMultipleAssetExtractions",
        "testConcurrentAssetExtractions",
        "testConcurrencyForAssetExtraction"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "com.box.l10n.mojito.service.drop.exporter.FileSystemDropExporterTest",
      "failingMethods": [],
      "erroringMethods": [
        "all",
        "testGetSourceFileName"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "com.box.l10n.mojito.service.leveraging.LeveragingServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "copyAllTranslationsWithMD5MatchBetweenRepositoriesNameRegex",
        "copyBetweenAssets",
        "copyAllTranslationsWithMD5MatchBetweenRepositories",
        "checkCommentsAreNotCopiedIfTmTextUnitCurrentVariantNotChanged",
        "copyAllTranslationsWithExactMatchBetweenRepositories"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "com.box.l10n.mojito.service.screenshot.ScreenshotServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCreateScreenshotRun",
        "testSearchScreenshotsByPagination",
        "testLastRunSuccessful",
        "testSortScreenshotBySequence",
        "testUpdateScreenshotRun",
        "testSearchScreenshotsByRepository",
        "testSearchScreenshotsByName",
        "testSearchScreenshotsByLocale",
        "testSearchScreenshotsByStatus"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 9
    },
    {
      "className": "com.box.l10n.mojito.service.translationkit.TranslationKitServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGetXLIFF",
        "testTranslationNeeded",
        "testReviewKit",
        "testCheckEntitiesAndGetTranslationKitExportedAndCurrentTUVs",
        "testGetTextUnitDTOsForTranslationKitfrCA",
        "testGetTextUnitDTOsForTranslationKitfrFR",
        "testGetTextUnitDTOsWithInheritanceForTranslationKitfrCA",
        "testGetTextUnitDTOsForTranslationKitkoKR"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "com.box.l10n.mojito.service.security.user.UserServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCreateUserWithEmptyPassword",
        "testSystemUserExist",
        "testCreateBasicUser",
        "testCreateUserWithNullPassword"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "com.box.l10n.mojito.service.pollableTask.PollableTaskCleanupServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testMarkZombieTasksAsFinishedWithErrorWithZombies",
        "testMarkZombieTasksAsFinishedWithErrorWithoutZombies"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "com.box.l10n.mojito.rest.pollableTask.PollableTaskWSTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGetPollableTask"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.box.l10n.mojito.service.tm.TMTextUnitVariantCommentServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAddComment",
        "testCopyComments",
        "testEnrichTextUnitDTOWithComments"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "com.box.l10n.mojito.rest.screenshot.ScreenshotWSTest",
      "failingMethods": [],
      "erroringMethods": [
        "testUploadScreenshots"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.box.l10n.mojito.AsyncConfigTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAsync"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.box.l10n.mojito.security.LdapConfigTest",
      "failingMethods": [],
      "erroringMethods": [
        "testConfig"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.box.l10n.mojito.rest.cli.CliWSTest",
      "failingMethods": [],
      "erroringMethods": [
        "testURLDefault",
        "testURL"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "com.box.l10n.mojito.service.asset.AssetServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAddOrUpdateAssetAndProcessIfNeededShouldStartExtractionIfNewAsset",
        "testAddOrUpdateAssetAndProcessIfNeededShouldNotStartExtractionIfAssetAlreadyExists",
        "testAddOrUpdateAssetAndProcessIfNeededShouldNotUpdateAssetContentAndStartExtractionIfAssetDeletedAndAssetExtractionIsSame",
        "testAddOrUpdateAssetAndProcessIfNeededShouldUpdateAssetContentAndStartExtractionIfContentOfExistingAssetChanged",
        "testAddOrUpdateAssetAndProcessIfNeededShouldUpdateAssetContentAndStartExtractionIfAssetDeletedAndAssetExtractionIsOutdated",
        "testDeleteAsset",
        "testAddOrUpdateAssetAndProcessIfNeededShouldStartExtractionIfAssetExistButAssetExtractionIsOutdated",
        "testAddOrUpdateAssetAndProcessIfNeededShouldStartExtractionIfAssetExistButAssetExtractionIsMissing"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "com.box.l10n.mojito.rest.locale.LocaleWSTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGetLocaleByBcp47TagWithValidTag",
        "testGetLocaleByBcp47TagWithInvalidTag",
        "testGetLocales"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "com.box.l10n.mojito.rest.repository.RepositoryWSTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGetRepositoryByName",
        "testUpdateRepositoryNameAndDescription",
        "testDeleteRepositoryById",
        "testGetRepositoryById",
        "testUpdateRepositoryLocales"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "com.box.l10n.mojito.CachingConfigTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCacheable"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.box.l10n.mojito.service.assetExtraction.AssetExtractionServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testXtb",
        "testMacStringsNoComment",
        "testXliffDoNotTranslate",
        "testAndroidStringsWithNotTranslatable",
        "testAndroidStringsArrayWithEmptyItem",
        "testXliffNoResname",
        "testMacStringsWithInvalidComments",
        "testAndroidStrings",
        "testMacStrings",
        "testAndroidStringsPluralExtra",
        "testMacStringsWithDoubleQuotesAndNewline",
        "testAndroidStringsPluralExtraOpeningAndClosing",
        "testAndroidStringsPlural",
        "testAndroidStringsWithDescriptionInXMLComments",
        "testResw",
        "testResx",
        "testAndroidStringsArray",
        "testAndroidStringsWithEscapedHTMLTags",
        "testMacStringsNamesWithoutDoubleQuotes",
        "testProcessAssetShouldProcessCsvFiles",
        "testProcessAssetShouldProcessXliffFiles",
        "testProcessAssetShouldThrowIfUnsupportedAssetType",
        "testAndroidStringsWithCDATA",
        "testSkipDuplicates",
        "testAndroidStringsWithSpecialCharacters"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 25
    },
    {
      "className": "com.box.l10n.mojito.service.assetExtraction.AssetMappingServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testSourceLeveraging",
        "testCreateTMTextUnitForUnmappedAssetTextUnitsIncremental",
        "testUpdateExactMatchesAndGetUnmappedAssetTextUnits",
        "testMap",
        "testCreateTMTextUnitForUnmappedAssetTextUnits"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "com.box.l10n.mojito.service.repository.statistics.RepositoryStatisticServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testComputeBaseStatistics",
        "testUpdateStatistics",
        "testComputeLocaleStatistics",
        "testComputeBaseStatisticsDoNotTranslate"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "com.box.l10n.mojito.service.tm.search.TextUnitSearcherTest",
      "failingMethods": [],
      "erroringMethods": [
        "testILikeSearchName",
        "testCount",
        "testUnusedAndTranslated",
        "testIncludedInLocalizedFile",
        "testExactMatchSearchSource",
        "testExactMatchSearchName",
        "testPagination",
        "testAllFilters",
        "testILikeSearchTarget",
        "testMultipleLocalesTranslatedAndUntranslated",
        "testCountNone",
        "testILikeSearchSource",
        "testCreatedDate",
        "testContainsSearchName",
        "testReviewNeeded",
        "testUntranslatedOrTranslationNeeded",
        "testContainsSearchSource",
        "testContainsSearchTarget",
        "testExactMatchSearchTarget"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 19
    },
    {
      "className": "com.box.l10n.mojito.specification.SpecificationsTest",
      "failingMethods": [],
      "erroringMethods": [
        "testIfParamNotNull"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.box.l10n.mojito.service.drop.DropServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCancelDropException",
        "testGetDropFolderName",
        "forReview",
        "forTranslation",
        "testCancelDrop",
        "allWithSeverError",
        "testCreateDrop",
        "forTranslationWithTranslationAddedAfterExport"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "com.box.l10n.mojito.service.pollableTask.PollableTaskServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testGetPollableTask",
        "testCompoundStatusWithSubTasks",
        "testCreateParentTask",
        "test3Level",
        "testFinishTask",
        "testUpdateExpectedSubTaskNumber",
        "testCreateSubTask",
        "testCompoundStatusParentNotFinishedBecauseOfExpectedSubtasksMissing",
        "testCompoundStatusSingleTask"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 9
    },
    {
      "className": "com.box.l10n.mojito.service.assetintegritychecker.AssetIntegrityCheckerServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testIntegrityCheckerIsUsedInTmServiceUpdate"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.box.l10n.mojito.service.tm.importer.TextUnitBatchImporterServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testAsyncImportTextUnitsNameOnly",
        "testImportMulipleRepositoryAssetAndLocale",
        "testIntegirtyChecker",
        "testUnused",
        "testAsyncImportTextUnitsFromSearch"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "com.box.l10n.mojito.service.pluralform.PluralFormForLocaleServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testShowNewFormsSQL"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.box.l10n.mojito.service.assetExtraction.AssetExtractionCleanupServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCleanupOldAssetExtractionsWhenNotAllExtractionsHaveFinished",
        "testCleanupOldAssetExtractionsWhenAllExtractionsHaveFinished"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "com.box.l10n.mojito.rest.asset.AssetWSTest",
      "failingMethods": [],
      "erroringMethods": [
        "testDeleteUnusedAssets",
        "testImportSourceAsset",
        "testDeleteAssetById"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "com.box.l10n.mojito.rest.security.UserWSTest",
      "failingMethods": [],
      "erroringMethods": [
        "testCreateAndDeleteUser",
        "testUpdateUser",
        "testGetUsers",
        "testGetDefaultUser"
      ],
      "failures": [
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        },
        {
          "failureName": "java.lang.OutOfMemoryError",
          "failureDetail": "GC overhead limit exceeded",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    }
  ],
  "failingModule": "/root/workspace/box/mojito/402415013/webapp"
}