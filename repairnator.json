{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 9,
  "repo": "vagner-montenegro/ponto-inteligente-api",
  "bugCommit": "https://github.com/vagner-montenegro/ponto-inteligente-api/compare/e1f2a297a3d9...c61ffabcbb62",
  "failingModule": "/root/workspace/vagner-montenegro/ponto-inteligente-api/353036702",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 0,
  "error-types": [
    "java.lang.IllegalStateException"
  ],
  "totalNumberRunningTests": 11,
  "failing-test-cases": [
    {
      "className": "com.kazale.pontointeligente.api.services.FuncionarioServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "com.kazale.pontointeligente.api.services.FuncionarioServiceTest#initializationError"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Unable to find a @SpringBootConfiguration, you need to use @ContextConfiguration or @SpringBootTest(classes\u003d...) with your test",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.kazale.pontointeligente.api.services.EmpresaServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "com.kazale.pontointeligente.api.services.EmpresaServiceTest#initializationError"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Unable to find a @SpringBootConfiguration, you need to use @ContextConfiguration or @SpringBootTest(classes\u003d...) with your test",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.kazale.pontointeligente.api.repositories.FuncionarioRepositoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "com.kazale.pontointeligente.api.repositories.FuncionarioRepositoryTest#initializationError"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Unable to find a @SpringBootConfiguration, you need to use @ContextConfiguration or @SpringBootTest(classes\u003d...) with your test",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.kazale.pontointeligente.api.repositories.LancamentoRepositoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "com.kazale.pontointeligente.api.repositories.LancamentoRepositoryTest#initializationError"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Unable to find a @SpringBootConfiguration, you need to use @ContextConfiguration or @SpringBootTest(classes\u003d...) with your test",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.kazale.pontointeligente.api.controllers.LancamentoControllerTest",
      "failingMethods": [],
      "erroringMethods": [
        "com.kazale.pontointeligente.api.controllers.LancamentoControllerTest#initializationError"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Unable to find a @SpringBootConfiguration, you need to use @ContextConfiguration or @SpringBootTest(classes\u003d...) with your test",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.kazale.pontointeligente.api.services.LancamentoServiceTest",
      "failingMethods": [],
      "erroringMethods": [
        "com.kazale.pontointeligente.api.services.LancamentoServiceTest#initializationError"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Unable to find a @SpringBootConfiguration, you need to use @ContextConfiguration or @SpringBootTest(classes\u003d...) with your test",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.kazale.pontointeligente.api.controllers.EmpresaControllerTest",
      "failingMethods": [],
      "erroringMethods": [
        "com.kazale.pontointeligente.api.controllers.EmpresaControllerTest#initializationError"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Unable to find a @SpringBootConfiguration, you need to use @ContextConfiguration or @SpringBootTest(classes\u003d...) with your test",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.kazale.pontointeligente.api.repositories.EmpresaRepositoryTest",
      "failingMethods": [],
      "erroringMethods": [
        "com.kazale.pontointeligente.api.repositories.EmpresaRepositoryTest#initializationError"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Unable to find a @SpringBootConfiguration, you need to use @ContextConfiguration or @SpringBootTest(classes\u003d...) with your test",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "com.kazale.pontointeligente.api.PontoInteligenteApplicationTests",
      "failingMethods": [],
      "erroringMethods": [
        "com.kazale.pontointeligente.api.PontoInteligenteApplicationTests#initializationError"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Unable to find a @SpringBootConfiguration, you need to use @ContextConfiguration or @SpringBootTest(classes\u003d...) with your test",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    }
  ]
}