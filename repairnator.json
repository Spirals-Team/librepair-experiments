{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 18,
  "repo": "AuScope/portal-core",
  "metrics": {
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 4,
      "ComputeClasspath": 6,
      "ComputeTestDir": 0,
      "BuildProject": 744,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 14,
      "AstorJMut": 3969,
      "CloneRepository": 16,
      "CheckoutPatchedBuild": 0,
      "Nopol": 944,
      "NPEFix": 0,
      "TestProject": 80,
      "GatherTestInformation": 0,
      "CommitPatch": 14
    },
    "FailureNames": [
      "org.auscope.portal.core.services.PortalServiceException",
      "java.lang.NumberFormatException",
      "java.lang.AssertionError"
    ],
    "NbFailingTests": 11,
    "NbErroringTests": 18,
    "NbSkippingTests": 0,
    "NbRunningTests": 372,
    "BugCommitUrl": "http://github.com/AuScope/portal-core/commit/20036276b131271542178557b7a5a348117c856e",
    "ReproductionDate": "May 30, 2018 1:56:28 AM",
    "BuggyBuildId": 385530692,
    "PatchedBuilId": 0,
    "BuggyBuildURL": "http://travis-ci.org/AuScope/portal-core/builds/385530692",
    "BuggyBuildDate": "May 30, 2018 1:56:20 AM",
    "BugCommit": "20036276b131271542178557b7a5a348117c856e",
    "PatchChangedFiles": 1,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 1,
    "NbLibraries": 335,
    "NbFileApp": 460,
    "NbFileTests": 91,
    "NbCPU": 32,
    "FreeMemory": 1307852168,
    "TotalMemory": 5429002240,
    "AngelicValuesByTest": {
      "org/auscope/portal/core/services/TestCSWCacheService": 0,
      "org/auscope/portal/core/services/responses/csw/TestCSWGetRecordResponse": 0,
      "org/auscope/portal/core/services/TestCSWFilterService": 0,
      "org/auscope/portal/core/services/responses/csw/TestCSWRecordTransformer": 0,
      "org/auscope/portal/core/view/TestViewCSWRecordFactory": 0,
      "org/auscope/portal/core/services/admin/TestAdminService": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 680224632,
      "ComputeClasspath": 636401128,
      "ComputeTestDir": 640655032,
      "BuildProject": 605357800,
      "ComputeSourceDir": 636401128,
      "InitRepoToPush": 640580856,
      "AstorJMut": 1568301504,
      "CloneRepository": 448984248,
      "CheckoutPatchedBuild": 1307852168,
      "Nopol": 4308935216,
      "NPEFix": 4308935216,
      "TestProject": 599772112,
      "GatherTestInformation": 567466600,
      "CommitPatch": 1307852168
    },
    "NbSucceedingTests": 343
  },
  "failingModule": "/root/workspace/AuScope/portal-core/385530692",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 11,
  "error-types": [
    "org.auscope.portal.core.services.PortalServiceException",
    "java.lang.NumberFormatException",
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 372,
  "failing-test-cases": [
    {
      "className": "org.auscope.portal.core.view.TestViewCSWRecordFactory",
      "failingMethods": [
        "testToViewNoResponsibleParty",
        "testToViewBadOnlineResources",
        "testToView"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "unexpected invocation: cswRecord.getMinScale()\nexpectations:\n  allowed, already invoked 1 time: cswRecord.getServiceName(); returns \"sn\"\n  allowed, already invoked 1 time: cswRecord.getNoCache(); returns \u003cfalse\u003e\n  allowed, already invoked 1 time: cswRecord.getContact(); returns null\n  allowed, already invoked 1 time: cswRecord.getResourceProvider(); returns \"MDU\"\n  allowed, already invoked 1 time: cswRecord.getFileIdentifier(); returns \"asb\"\n  allowed, already invoked 1 time: cswRecord.getRecordInfoUrl(); returns \"http://bob.xom\"\n  allowed, already invoked 1 time: cswRecord.getDataIdentificationAbstract(); returns \"assda\"\n  allowed, already invoked 2 times: cswRecord.getOnlineResources(); returns [\u003cabstractCSWOnlineResource\u003e]\n  allowed, already invoked 2 times: cswRecord.getCSWGeographicElements(); returns [\u003ccswGeographicBoundingBox\u003e]\n  allowed, already invoked 2 times: cswRecord.getDescriptiveKeywords(); returns [\"kw1\", \"kw1\"]\n  allowed, already invoked 2 times: cswRecord.getConstraints(); returns [\"c1\", \"c2\"]\n  allowed, already invoked 2 times: cswRecord.getUseLimitConstraints(); returns [\"use1\", \"use2\"]\n  allowed, already invoked 2 times: cswRecord.getAccessConstraints(); returns [\"acess1\", \"acess2\"]\n  allowed, already invoked 1 time: cswRecord.hasChildRecords(); returns \u003cfalse\u003e\n  allowed, already invoked 2 times: cswRecord.getDate(); returns \u003cThu Oct 09 01:00:00 CET 1986\u003e\n  allowed, already invoked 1 time: cswRecord.isService(); returns \u003cfalse\u003e\n  allowed, already invoked 2 times: cswRecord.getDataSetURIs(); returns [\"datasetUri1\"]\n  allowed, already invoked 1 time: cswGeographicBoundingBox.getEastBoundLongitude(); returns \u003c7.0\u003e\n  allowed, already invoked 1 time: cswGeographicBoundingBox.getWestBoundLongitude(); returns \u003c6.0\u003e\n  allowed, already invoked 1 time: cswGeographicBoundingBox.getNorthBoundLatitude(); returns \u003c10.0\u003e\n  allowed, already invoked 1 time: cswGeographicBoundingBox.getSouthBoundLatitude(); returns \u003c5.0\u003e\n  allowed, already invoked 1 time: abstractCSWOnlineResource.getDescription(); returns \"desc\"\n  allowed, already invoked 1 time: abstractCSWOnlineResource.getName(); returns \"ascom\"\n  allowed, already invoked 1 time: abstractCSWOnlineResource.getType(); returns \u003cWFS\u003e\n  allowed, already invoked 2 times: abstractCSWOnlineResource.getLinkage(); returns \u003chttp://hah.com\u003e\n  allowed, already invoked 1 time: abstractCSWOnlineResource.getVersion(); returns \"1.3.0\"\n  allowed, already invoked 1 time: abstractCSWOnlineResource.getApplicationProfile(); returns \"Esri:ArcGIS Server/x\"\n  allowed, never invoked: cswResponsibleParty.getOrganisationName(); returns \"\"\nwhat happened before this:\n  cswRecord.getServiceName()\n  cswRecord.getResourceProvider()\n  cswRecord.getFileIdentifier()\n  cswRecord.getRecordInfoUrl()\n  cswRecord.getDataIdentificationAbstract()\n  cswRecord.getNoCache()\n  cswRecord.isService()\n  cswRecord.getContact()\n  cswRecord.getOnlineResources()\n  cswRecord.getOnlineResources()\n  abstractCSWOnlineResource.getLinkage()\n  abstractCSWOnlineResource.getLinkage()\n  abstractCSWOnlineResource.getType()\n  abstractCSWOnlineResource.getName()\n  abstractCSWOnlineResource.getDescription()\n  abstractCSWOnlineResource.getVersion()\n  abstractCSWOnlineResource.getApplicationProfile()\n  cswRecord.getCSWGeographicElements()\n  cswRecord.getCSWGeographicElements()\n  cswGeographicBoundingBox.getEastBoundLongitude()\n  cswGeographicBoundingBox.getWestBoundLongitude()\n  cswGeographicBoundingBox.getNorthBoundLatitude()\n  cswGeographicBoundingBox.getSouthBoundLatitude()\n  cswRecord.getDescriptiveKeywords()\n  cswRecord.getDescriptiveKeywords()\n  cswRecord.getDataSetURIs()\n  cswRecord.getDataSetURIs()\n  cswRecord.getConstraints()\n  cswRecord.getConstraints()\n  cswRecord.getUseLimitConstraints()\n  cswRecord.getUseLimitConstraints()\n  cswRecord.getAccessConstraints()\n  cswRecord.getAccessConstraints()\n  cswRecord.hasChildRecords()\n  cswRecord.getDate()\n  cswRecord.getDate()\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "unexpected invocation: cswRecord.getMinScale()\nexpectations:\n  allowed, already invoked 1 time: cswRecord.getServiceName(); returns \"sn\"\n  allowed, already invoked 1 time: cswRecord.getNoCache(); returns \u003cfalse\u003e\n  allowed, already invoked 1 time: cswRecord.getContact(); returns \u003ccswResponsibleParty\u003e\n  allowed, already invoked 1 time: cswRecord.getResourceProvider(); returns \"MDU\"\n  allowed, already invoked 1 time: cswRecord.getFileIdentifier(); returns \"asb\"\n  allowed, already invoked 1 time: cswRecord.getRecordInfoUrl(); returns \"http://bob.xom\"\n  allowed, already invoked 1 time: cswRecord.getDataIdentificationAbstract(); returns \"assda\"\n  allowed, already invoked 2 times: cswRecord.getOnlineResources(); returns [\u003cabstractCSWOnlineResource\u003e]\n  allowed, already invoked 2 times: cswRecord.getCSWGeographicElements(); returns [\u003ccswGeographicBoundingBox\u003e]\n  allowed, already invoked 2 times: cswRecord.getDescriptiveKeywords(); returns [\"kw1\", \"kw1\"]\n  allowed, already invoked 2 times: cswRecord.getConstraints(); returns [\"c1\", \"c2\"]\n  allowed, already invoked 2 times: cswRecord.getUseLimitConstraints(); returns [\"use1\", \"use2\"]\n  allowed, already invoked 2 times: cswRecord.getAccessConstraints(); returns [\"acess1\", \"acess2\"]\n  allowed, already invoked 1 time: cswRecord.hasChildRecords(); returns \u003cfalse\u003e\n  allowed, already invoked 2 times: cswRecord.getDate(); returns \u003cThu Jan 01 01:00:00 CET 1970\u003e\n  allowed, already invoked 1 time: cswRecord.isService(); returns \u003ctrue\u003e\n  allowed, already invoked 2 times: cswRecord.getDataSetURIs(); returns []\n  allowed, already invoked 1 time: cswGeographicBoundingBox.getEastBoundLongitude(); returns \u003c7.0\u003e\n  allowed, already invoked 1 time: cswGeographicBoundingBox.getWestBoundLongitude(); returns \u003c6.0\u003e\n  allowed, already invoked 1 time: cswGeographicBoundingBox.getNorthBoundLatitude(); returns \u003c10.0\u003e\n  allowed, already invoked 1 time: cswGeographicBoundingBox.getSouthBoundLatitude(); returns \u003c5.0\u003e\n  allowed, never invoked: abstractCSWOnlineResource.getDescription(); returns \"desc\"\n  allowed, never invoked: abstractCSWOnlineResource.getName(); returns \"ascom\"\n  allowed, never invoked: abstractCSWOnlineResource.getType(); returns \u003cWFS\u003e\n  allowed, already invoked 1 time: abstractCSWOnlineResource.getLinkage(); returns null\n  allowed, never invoked: abstractCSWOnlineResource.getApplicationProfile(); returns \"Esri:ArcGIS Server/x\"\n  allowed, already invoked 3 times: cswResponsibleParty.getOrganisationName(); returns \"co\"\n  allowed, already invoked 2 times: cswResponsibleParty.getContactInfo(); returns \u003ccswContact\u003e\n  expected once, already invoked 1 time: cswContact.getAddressAdministrativeArea(); returns \"CSIRO\"\nwhat happened before this:\n  cswRecord.getServiceName()\n  cswRecord.getResourceProvider()\n  cswRecord.getFileIdentifier()\n  cswRecord.getRecordInfoUrl()\n  cswRecord.getDataIdentificationAbstract()\n  cswRecord.getNoCache()\n  cswRecord.isService()\n  cswRecord.getContact()\n  cswResponsibleParty.getOrganisationName()\n  cswResponsibleParty.getOrganisationName()\n  cswResponsibleParty.getOrganisationName()\n  cswResponsibleParty.getContactInfo()\n  cswResponsibleParty.getContactInfo()\n  cswContact.getAddressAdministrativeArea()\n  cswRecord.getOnlineResources()\n  cswRecord.getOnlineResources()\n  abstractCSWOnlineResource.getLinkage()\n  cswRecord.getCSWGeographicElements()\n  cswRecord.getCSWGeographicElements()\n  cswGeographicBoundingBox.getEastBoundLongitude()\n  cswGeographicBoundingBox.getWestBoundLongitude()\n  cswGeographicBoundingBox.getNorthBoundLatitude()\n  cswGeographicBoundingBox.getSouthBoundLatitude()\n  cswRecord.getDescriptiveKeywords()\n  cswRecord.getDescriptiveKeywords()\n  cswRecord.getDataSetURIs()\n  cswRecord.getDataSetURIs()\n  cswRecord.getConstraints()\n  cswRecord.getConstraints()\n  cswRecord.getUseLimitConstraints()\n  cswRecord.getUseLimitConstraints()\n  cswRecord.getAccessConstraints()\n  cswRecord.getAccessConstraints()\n  cswRecord.hasChildRecords()\n  cswRecord.getDate()\n  cswRecord.getDate()\n",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "unexpected invocation: childRecord1.getMinScale()\nexpectations:\n  allowed, already invoked 1 time: cswRecord.getServiceName(); returns \"sn\"\n  allowed, already invoked 1 time: cswRecord.getNoCache(); returns \u003cfalse\u003e\n  allowed, already invoked 1 time: cswRecord.getContact(); returns \u003ccswResponsibleParty\u003e\n  allowed, already invoked 1 time: cswRecord.getResourceProvider(); returns \"MDU\"\n  allowed, already invoked 1 time: cswRecord.getFileIdentifier(); returns \"asb\"\n  allowed, already invoked 1 time: cswRecord.getRecordInfoUrl(); returns \"http://bob.xom\"\n  allowed, already invoked 1 time: cswRecord.getDataIdentificationAbstract(); returns \"assda\"\n  allowed, already invoked 2 times: cswRecord.getOnlineResources(); returns [\u003cabstractCSWOnlineResource\u003e]\n  allowed, already invoked 2 times: cswRecord.getCSWGeographicElements(); returns [\u003ccswGeographicBoundingBox\u003e]\n  allowed, already invoked 2 times: cswRecord.getDescriptiveKeywords(); returns [\"kw1\", \"kw1\"]\n  allowed, already invoked 2 times: cswRecord.getDataSetURIs(); returns [\"ds1\", \"ds2\"]\n  allowed, already invoked 2 times: cswRecord.getConstraints(); returns [\"c1\", \"c2\"]\n  allowed, already invoked 2 times: cswRecord.getUseLimitConstraints(); returns [\"use1\", \"use2\"]\n  allowed, already invoked 2 times: cswRecord.getAccessConstraints(); returns [\"acess1\", \"acess2\"]\n  allowed, already invoked 1 time: cswRecord.hasChildRecords(); returns \u003ctrue\u003e\n  allowed, already invoked 1 time: cswRecord.getChildRecords(); returns [\u003cchildRecord1\u003e]\n  allowed, never invoked: cswRecord.getDate(); returns \u003cThu Jan 01 01:00:00 CET 1970\u003e\n  allowed, already invoked 1 time: cswRecord.isService(); returns \u003cfalse\u003e\n  allowed, already invoked 1 time: childRecord1.getServiceName(); returns \"sn_1\"\n  allowed, already invoked 1 time: childRecord1.getNoCache(); returns \u003cfalse\u003e\n  allowed, already invoked 1 time: childRecord1.getContact(); returns null\n  allowed, already invoked 1 time: childRecord1.getResourceProvider(); returns \"CESRE\"\n  allowed, already invoked 1 time: childRecord1.getFileIdentifier(); returns \"asb_1\"\n  allowed, already invoked 1 time: childRecord1.getRecordInfoUrl(); returns \"http://bob.xom\"\n  allowed, already invoked 1 time: childRecord1.getDataIdentificationAbstract(); returns \"assda_1\"\n  allowed, already invoked 2 times: childRecord1.getOnlineResources(); returns [\u003cmockOnlineRes_1\u003e]\n  allowed, already invoked 1 time: childRecord1.getCSWGeographicElements(); returns null\n  allowed, already invoked 2 times: childRecord1.getDescriptiveKeywords(); returns [\"kw1_1\", \"kw2_1\"]\n  allowed, already invoked 2 times: childRecord1.getDataSetURIs(); returns [\"ds1_1\", \"ds2_1\"]\n  allowed, already invoked 2 times: childRecord1.getConstraints(); returns [\"c1_1\", \"c2_1\"]\n  allowed, already invoked 2 times: childRecord1.getUseLimitConstraints(); returns [\"use1_1\", \"use2_1\"]\n  allowed, already invoked 2 times: childRecord1.getAccessConstraints(); returns [\"acess1_1\", \"acess2_1\"]\n  allowed, already invoked 1 time: childRecord1.hasChildRecords(); returns \u003cfalse\u003e\n  allowed, already invoked 1 time: childRecord1.getDate(); returns null\n  allowed, already invoked 1 time: childRecord1.isService(); returns \u003cfalse\u003e\n  allowed, already invoked 1 time: cswGeographicBoundingBox.getEastBoundLongitude(); returns \u003c7.0\u003e\n  allowed, already invoked 1 time: cswGeographicBoundingBox.getWestBoundLongitude(); returns \u003c6.0\u003e\n  allowed, already invoked 1 time: cswGeographicBoundingBox.getNorthBoundLatitude(); returns \u003c10.0\u003e\n  allowed, already invoked 1 time: cswGeographicBoundingBox.getSouthBoundLatitude(); returns \u003c5.0\u003e\n  allowed, already invoked 1 time: abstractCSWOnlineResource.getDescription(); returns \"desc\"\n  allowed, already invoked 1 time: abstractCSWOnlineResource.getName(); returns \"ascom\"\n  allowed, already invoked 1 time: abstractCSWOnlineResource.getType(); returns \u003cWFS\u003e\n  allowed, already invoked 2 times: abstractCSWOnlineResource.getLinkage(); returns \u003chttp://hah.com\u003e\n  allowed, already invoked 1 time: abstractCSWOnlineResource.getVersion(); returns \"1.1.1\"\n  allowed, already invoked 1 time: abstractCSWOnlineResource.getApplicationProfile(); returns \"Esri:ArcGIS Server/x\"\n  allowed, already invoked 1 time: mockOnlineRes_1.getDescription(); returns \"desc_1\"\n  allowed, already invoked 1 time: mockOnlineRes_1.getName(); returns \"ascom_1\"\n  allowed, already invoked 1 time: mockOnlineRes_1.getType(); returns \u003cWCS\u003e\n  allowed, already invoked 2 times: mockOnlineRes_1.getLinkage(); returns \u003chttp://hah_1.com\u003e\n  allowed, already invoked 1 time: mockOnlineRes_1.getVersion(); returns \"1.1.1\"\n  allowed, already invoked 1 time: mockOnlineRes_1.getApplicationProfile(); returns \"Esri:ArcGIS Server/x\"\n  allowed, already invoked 3 times: cswResponsibleParty.getOrganisationName(); returns \"co\"\n  allowed, already invoked 2 times: cswResponsibleParty.getContactInfo(); returns \u003ccswContact\u003e\n  expected once, already invoked 1 time: cswContact.getAddressAdministrativeArea(); returns \"CSIRO\"\nwhat happened before this:\n  cswRecord.getServiceName()\n  cswRecord.getResourceProvider()\n  cswRecord.getFileIdentifier()\n  cswRecord.getRecordInfoUrl()\n  cswRecord.getDataIdentificationAbstract()\n  cswRecord.getNoCache()\n  cswRecord.isService()\n  cswRecord.getContact()\n  cswResponsibleParty.getOrganisationName()\n  cswResponsibleParty.getOrganisationName()\n  cswResponsibleParty.getOrganisationName()\n  cswResponsibleParty.getContactInfo()\n  cswResponsibleParty.getContactInfo()\n  cswContact.getAddressAdministrativeArea()\n  cswRecord.getOnlineResources()\n  cswRecord.getOnlineResources()\n  abstractCSWOnlineResource.getLinkage()\n  abstractCSWOnlineResource.getLinkage()\n  abstractCSWOnlineResource.getType()\n  abstractCSWOnlineResource.getName()\n  abstractCSWOnlineResource.getDescription()\n  abstractCSWOnlineResource.getVersion()\n  abstractCSWOnlineResource.getApplicationProfile()\n  cswRecord.getCSWGeographicElements()\n  cswRecord.getCSWGeographicElements()\n  cswGeographicBoundingBox.getEastBoundLongitude()\n  cswGeographicBoundingBox.getWestBoundLongitude()\n  cswGeographicBoundingBox.getNorthBoundLatitude()\n  cswGeographicBoundingBox.getSouthBoundLatitude()\n  cswRecord.getDescriptiveKeywords()\n  cswRecord.getDescriptiveKeywords()\n  cswRecord.getDataSetURIs()\n  cswRecord.getDataSetURIs()\n  cswRecord.getConstraints()\n  cswRecord.getConstraints()\n  cswRecord.getUseLimitConstraints()\n  cswRecord.getUseLimitConstraints()\n  cswRecord.getAccessConstraints()\n  cswRecord.getAccessConstraints()\n  cswRecord.hasChildRecords()\n  cswRecord.getChildRecords()\n  childRecord1.getServiceName()\n  childRecord1.getResourceProvider()\n  childRecord1.getFileIdentifier()\n  childRecord1.getRecordInfoUrl()\n  childRecord1.getDataIdentificationAbstract()\n  childRecord1.getNoCache()\n  childRecord1.isService()\n  childRecord1.getContact()\n  childRecord1.getOnlineResources()\n  childRecord1.getOnlineResources()\n  mockOnlineRes_1.getLinkage()\n  mockOnlineRes_1.getLinkage()\n  mockOnlineRes_1.getType()\n  mockOnlineRes_1.getName()\n  mockOnlineRes_1.getDescription()\n  mockOnlineRes_1.getVersion()\n  mockOnlineRes_1.getApplicationProfile()\n  childRecord1.getCSWGeographicElements()\n  childRecord1.getDescriptiveKeywords()\n  childRecord1.getDescriptiveKeywords()\n  childRecord1.getDataSetURIs()\n  childRecord1.getDataSetURIs()\n  childRecord1.getConstraints()\n  childRecord1.getConstraints()\n  childRecord1.getUseLimitConstraints()\n  childRecord1.getUseLimitConstraints()\n  childRecord1.getAccessConstraints()\n  childRecord1.getAccessConstraints()\n  childRecord1.hasChildRecords()\n  childRecord1.getDate()\n",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "org.auscope.portal.core.services.TestCSWFilterService",
      "failingMethods": [],
      "erroringMethods": [
        "testGetCSWRecordsSingleService",
        "testGetCountMultiService",
        "testGetCSWRecordsMultiService",
        "testGetCountSingleService"
      ],
      "failures": [
        {
          "failureName": "org.auscope.portal.core.services.PortalServiceException",
          "failureDetail": "Error parsing response document",
          "isError": true
        },
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "empty String",
          "isError": true
        },
        {
          "failureName": "org.auscope.portal.core.services.PortalServiceException",
          "failureDetail": "java.lang.NumberFormatException: empty String",
          "isError": true
        },
        {
          "failureName": "org.auscope.portal.core.services.PortalServiceException",
          "failureDetail": "java.lang.NumberFormatException: empty String",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "org.auscope.portal.core.services.responses.csw.TestCSWRecordTransformer",
      "failingMethods": [],
      "erroringMethods": [
        "testContactInfo",
        "testDataQualityInfo",
        "testReverseTransformation",
        "testMultipleOnlineResources",
        "testGetServiceName",
        "testConstraints",
        "testMultipleDatasetURIs",
        "testNoDatasetURI",
        "testSingleDatasetURI",
        "testUploadedResourceParsing",
        "testGeographicBoundingBoxParsing",
        "testGetServiceUrl",
        "testDescriptiveKeywords"
      ],
      "failures": [
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "empty String",
          "isError": true
        },
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "empty String",
          "isError": true
        },
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "empty String",
          "isError": true
        },
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "empty String",
          "isError": true
        },
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "empty String",
          "isError": true
        },
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "empty String",
          "isError": true
        },
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "empty String",
          "isError": true
        },
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "empty String",
          "isError": true
        },
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "empty String",
          "isError": true
        },
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "empty String",
          "isError": true
        },
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "empty String",
          "isError": true
        },
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "empty String",
          "isError": true
        },
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "empty String",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 13
    },
    {
      "className": "org.auscope.portal.core.services.admin.TestAdminService",
      "failingMethods": [
        "testCSWConnectivityErrors"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c1\u003e but was:\u003c0\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "org.auscope.portal.core.services.responses.csw.TestCSWGetRecordResponse",
      "failingMethods": [],
      "erroringMethods": [
        "testGetCSWRecords"
      ],
      "failures": [
        {
          "failureName": "java.lang.NumberFormatException",
          "failureDetail": "empty String",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.auscope.portal.core.services.TestCSWCacheService",
      "failingMethods": [
        "testMultiUpdateWithErrors",
        "testMultiUpdateFallbackOnCache",
        "testKeywordsByEndpointCache",
        "testMultiUpdateGet",
        "testKeywordCache",
        "testSerialization",
        "testMultiUpdate"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c75\u003e but was:\u003c0\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c75\u003e but was:\u003c0\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "er:MineralOccurrence expected:\u003c3\u003e but was:\u003c0\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c60\u003e but was:\u003c0\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "expected:\u003c75\u003e but was:\u003c0\u003e",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError:",
          "isError": false
        }
      ],
      "nbFailures": 7,
      "nbErrors": 0
    }
  ]
}