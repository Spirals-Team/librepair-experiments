/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.46.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.BadCredentialsError;
import io.swagger.client.model.ErrorMessage;
import io.swagger.client.model.PageableSecurityList;
import io.swagger.client.model.Security;
import io.swagger.client.model.SecurityList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SecuritiesApi
 */
@Ignore
public class SecuritiesApiTest {

    private final SecuritiesApi api = new SecuritiesApi();

    
    /**
     * Get and search all securities
     *
     * Get securities of the user that is authorized by the access_token. Must pass the user&#39;s access_token. You can set optional search criteria to get only those securities that you are interested in. If you do not specify any search criteria, then this service functions as a &#39;get all&#39; service.&lt;p&gt;Note: Whenever a security account is being updated, its security positions will be internally re-created, meaning that the identifier of a security position might change over time.&lt;/p&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAndSearchAllSecuritiesTest() throws ApiException {
        List<Long> ids = null;
        String search = null;
        List<Long> accountIds = null;
        Integer page = null;
        Integer perPage = null;
        List<String> order = null;
        PageableSecurityList response = api.getAndSearchAllSecurities(ids, search, accountIds, page, perPage, order);

        // TODO: test validations
    }
    
    /**
     * Get multiple securities
     *
     * Get a list of multiple securities of the user that is authorized by the access_token. Must pass the securities&#39; identifiers and the user&#39;s access_token. Securities whose identifiers do not exist or do not relate to the authorized user will not be contained in the result (If this applies to all of the given identifiers, then the result will be an empty list). &lt;p&gt;Note: Whenever a security account is being updated, its security positions will be internally re-created, meaning that the identifier of a security position might change over time.&lt;/p&gt;&lt;p&gt;WARNING: This service is deprecated and will be removed at some point. If you want to get multiple securities, please instead use the service &#39;Get and search all securities&#39; and pass a comma-separated list of identifiers as a parameter &#39;ids&#39;.&lt;/p&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMultipleSecuritiesTest() throws ApiException {
        List<Long> ids = null;
        SecurityList response = api.getMultipleSecurities(ids);

        // TODO: test validations
    }
    
    /**
     * Get a security
     *
     * Get a single security for a specific user. Must pass the security&#39;s identifier and the user&#39;s access_token. &lt;p&gt;Note: Whenever a security account is being updated, its security positions will be internally re-created, meaning that the identifier of a security position might change over time.&lt;/p&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSecurityTest() throws ApiException {
        Long id = null;
        Security response = api.getSecurity(id);

        // TODO: test validations
    }
    
}
