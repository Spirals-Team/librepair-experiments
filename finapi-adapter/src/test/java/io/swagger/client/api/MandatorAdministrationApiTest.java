/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.46.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.BadCredentialsError;
import io.swagger.client.model.ChangeClientCredentialsParams;
import io.swagger.client.model.ErrorMessage;
import io.swagger.client.model.PageableUserInfoList;
import io.swagger.client.model.UserIdentifiersList;
import io.swagger.client.model.UserIdentifiersParams;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MandatorAdministrationApi
 */
@Ignore
public class MandatorAdministrationApiTest {

    private final MandatorAdministrationApi api = new MandatorAdministrationApi();

    
    /**
     * Change client credentials
     *
     * Change the client_secret for any of your clients, including the mandator admin client. Must pass the &lt;a href&#x3D;&#39;https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client&#39;&gt;mandator admin client&lt;/a&gt;&#39;s access_token. &lt;br/&gt;&lt;br/&gt;NOTES:&lt;br/&gt;&amp;bull; When you change a client&#39;s secret, then all of its existing access tokens will be revoked. User access tokens are not affected.&lt;br/&gt;&amp;bull; finAPI is storing client secrets with a one-way encryption. A lost client secret can NOT be recovered.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changeClientCredentialsTest() throws ApiException {
        ChangeClientCredentialsParams body = null;
        api.changeClientCredentials(body);

        // TODO: test validations
    }
    
    /**
     * Delete users
     *
     * Delete one or several users, which are specified by a given list of identifiers. Must pass the &lt;a href&#x3D;&#39;https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client&#39;&gt;mandator admin client&lt;/a&gt;&#39;s access_token. &lt;br/&gt;&lt;br/&gt;&lt;b&gt;NOTE&lt;/b&gt;: finAPI may fail to delete one (or several, or all) of the specified users. A user cannot get deleted when his data is currently locked by an internal process (for instance, update of a bank connection or transactions categorization). The response contains the identifiers of all users that could not get deleted, and all users that could get deleted, separated in two lists. The mandator admin client can retry the request at a later time for the users who could not get deleted.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUsersTest() throws ApiException {
        UserIdentifiersParams body = null;
        UserIdentifiersList response = api.deleteUsers(body);

        // TODO: test validations
    }
    
    /**
     * Get user list
     *
     * &lt;p&gt;Get a list of the users of the mandator that is authorized by the access_token. Must pass the &lt;a href&#x3D;&#39;https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client&#39;&gt;mandator admin client&lt;/a&gt;&#39;s access_token. You can set optional search criteria to get only those users that you are interested in. If you do not specify any search criteria, then this service functions as a &#39;get all&#39; service.&lt;/p&gt;&lt;p&gt;Note that the original user id is longer available in finAPI once a user has been deleted. Because of this, the userId of deleted users will be a distorted version of the original userId. For example, if the deleted user&#39;s id was originally &#39;user&#39;, then this service will return &#39;uXXr&#39; as the userId.&lt;/p&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserListTest() throws ApiException {
        String minRegistrationDate = null;
        String maxRegistrationDate = null;
        String minDeletionDate = null;
        String maxDeletionDate = null;
        String minLastActiveDate = null;
        String maxLastActiveDate = null;
        Boolean includeMonthlyStats = null;
        String monthlyStatsStartDate = null;
        String monthlyStatsEndDate = null;
        Boolean isDeleted = null;
        Integer page = null;
        Integer perPage = null;
        List<String> order = null;
        PageableUserInfoList response = api.getUserList(minRegistrationDate, maxRegistrationDate, minDeletionDate, maxDeletionDate, minLastActiveDate, maxLastActiveDate, includeMonthlyStats, monthlyStatsStartDate, monthlyStatsEndDate, isDeleted, page, perPage, order);

        // TODO: test validations
    }
    
}
