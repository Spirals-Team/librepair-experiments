/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.46.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Information about a user&#39;s data or activities for a certain month
 */
@ApiModel(description = "Information about a user's data or activities for a certain month")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-14T19:12:52.919Z")
public class MonthlyUserStats {
  @SerializedName("month")
  private String month = null;

  @SerializedName("minBankConnectionCount")
  private Integer minBankConnectionCount = null;

  @SerializedName("maxBankConnectionCount")
  private Integer maxBankConnectionCount = null;

  public MonthlyUserStats month(String month) {
    this.month = month;
    return this;
  }

   /**
   * The month that the contained information applies to, in the format &#39;YYYY-MM&#39;.
   * @return month
  **/
  @ApiModelProperty(required = true, value = "The month that the contained information applies to, in the format 'YYYY-MM'.")
  public String getMonth() {
    return month;
  }

  public void setMonth(String month) {
    this.month = month;
  }

  public MonthlyUserStats minBankConnectionCount(Integer minBankConnectionCount) {
    this.minBankConnectionCount = minBankConnectionCount;
    return this;
  }

   /**
   * Minimum count of bank connections that this user has had at any point during the month.
   * @return minBankConnectionCount
  **/
  @ApiModelProperty(required = true, value = "Minimum count of bank connections that this user has had at any point during the month.")
  public Integer getMinBankConnectionCount() {
    return minBankConnectionCount;
  }

  public void setMinBankConnectionCount(Integer minBankConnectionCount) {
    this.minBankConnectionCount = minBankConnectionCount;
  }

  public MonthlyUserStats maxBankConnectionCount(Integer maxBankConnectionCount) {
    this.maxBankConnectionCount = maxBankConnectionCount;
    return this;
  }

   /**
   * Maximum count of bank connections that this user has had at any point during the month.
   * @return maxBankConnectionCount
  **/
  @ApiModelProperty(required = true, value = "Maximum count of bank connections that this user has had at any point during the month.")
  public Integer getMaxBankConnectionCount() {
    return maxBankConnectionCount;
  }

  public void setMaxBankConnectionCount(Integer maxBankConnectionCount) {
    this.maxBankConnectionCount = maxBankConnectionCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MonthlyUserStats monthlyUserStats = (MonthlyUserStats) o;
    return Objects.equals(this.month, monthlyUserStats.month) &&
        Objects.equals(this.minBankConnectionCount, monthlyUserStats.minBankConnectionCount) &&
        Objects.equals(this.maxBankConnectionCount, monthlyUserStats.maxBankConnectionCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(month, minBankConnectionCount, maxBankConnectionCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MonthlyUserStats {\n");
    
    sb.append("    month: ").append(toIndentedString(month)).append("\n");
    sb.append("    minBankConnectionCount: ").append(toIndentedString(minBankConnectionCount)).append("\n");
    sb.append("    maxBankConnectionCount: ").append(toIndentedString(maxBankConnectionCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

