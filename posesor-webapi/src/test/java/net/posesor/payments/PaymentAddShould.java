package net.posesor.payments;

import com.jayway.restassured.RestAssured;
import com.jayway.restassured.http.ContentType;
import lombok.val;
import net.posesor.Application;
import org.assertj.core.api.Assertions;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.boot.context.embedded.LocalServerPort;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.Arrays;
import java.util.UUID;

import static com.jayway.restassured.RestAssured.basic;
import static com.jayway.restassured.RestAssured.given;

@ActiveProfiles("test")
@RunWith(SpringRunner.class)
@SpringBootTest(classes = Application.class, webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
public final class PaymentAddShould  {

    @LocalServerPort
    private int port;

    //given:
    private PaymentDto expected;
    private String location;

    @Before
    public void init() {
        val userName = "demo " + UUID.randomUUID().toString();
        RestAssured.port = port;
        RestAssured.authentication = basic(userName, userName);

        expected = Given.createFullPaymentDto();

        //when:
        location = given()
                .contentType(ContentType.JSON)
                .body(expected)
                .when()
                .post("/api/payments")
                .header("location");
    }

    @Test
    public void createReachablePayment() {
        val actual = given()
                .get(location)
                .body()
                .as(PaymentDto.class);

        // returned value differs from originating model - it's paymentId is not null
        // because it is generated by server.
        // Let's remove known differences before checking quality of originating model and created model.
        actual.setPaymentId(null);

        Assertions.assertThat(actual).isEqualTo(expected);
    }

    @Test
    public void exposePaymentInAllPayments() {
        val getAllItems = given()
                .get("/api/payments")
                .body()
                .as(PaymentDto[].class);

        // returned values differ from originating model - their's paymentId is not null
        // because it is generated by server.
        // Let's remove known differences before checking quality of originating model and created models.
        val items = Arrays.stream(getAllItems)
                .map(it -> {
                    it.setPaymentId(null);
                    return it;
                });

        Assertions.assertThat(items).contains(expected);
    }
}